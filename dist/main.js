/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game */ \"./src/scripts/game.js\");\n/* harmony import */ var _scripts_game_view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/game_view */ \"./src/scripts/game_view.js\");\n\n\nlet canvas = document.querySelector(\"#main-canvas\");\nconst ctx = canvas.getContext(\"2d\");\ncanvas.width = _scripts_game_view__WEBPACK_IMPORTED_MODULE_1__.GameView.WIDTH;\ncanvas.height = _scripts_game_view__WEBPACK_IMPORTED_MODULE_1__.GameView.HEIGHT;\ncanvas.style.backgroundColor = \"black\";\nwindow.game = new _scripts_game__WEBPACK_IMPORTED_MODULE_0__.Game(ctx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQXNDO0FBQ1M7QUFFL0MsSUFBSUUsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxjQUFjLENBQUM7QUFDbkQsTUFBTUMsR0FBRyxHQUFHSCxNQUFNLENBQUNJLFVBQVUsQ0FBQyxJQUFJLENBQUM7QUFFbkNKLE1BQU0sQ0FBQ0ssS0FBSyxHQUFHTiw4REFBYztBQUM3QkMsTUFBTSxDQUFDTyxNQUFNLEdBQUdSLCtEQUFlO0FBQy9CQyxNQUFNLENBQUNTLEtBQUssQ0FBQ0MsZUFBZSxHQUFHLE9BQU87QUFFdENDLE1BQU0sQ0FBQ0MsSUFBSSxHQUFHLElBQUlkLCtDQUFJLENBQUNLLEdBQUcsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzcHJvamVjdC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdhbWUgfSBmcm9tIFwiLi9zY3JpcHRzL2dhbWVcIjtcbmltcG9ydCB7IEdhbWVWaWV3IH0gZnJvbSBcIi4vc2NyaXB0cy9nYW1lX3ZpZXdcIjtcblxubGV0IGNhbnZhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWFpbi1jYW52YXNcIik7XG5jb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuXG5jYW52YXMud2lkdGggPSBHYW1lVmlldy5XSURUSDtcbmNhbnZhcy5oZWlnaHQgPSBHYW1lVmlldy5IRUlHSFQ7XG5jYW52YXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJibGFja1wiO1xuXG53aW5kb3cuZ2FtZSA9IG5ldyBHYW1lKGN0eCk7XG4iXSwibmFtZXMiOlsiR2FtZSIsIkdhbWVWaWV3IiwiY2FudmFzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY3R4IiwiZ2V0Q29udGV4dCIsIndpZHRoIiwiV0lEVEgiLCJoZWlnaHQiLCJIRUlHSFQiLCJzdHlsZSIsImJhY2tncm91bmRDb2xvciIsIndpbmRvdyIsImdhbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/Characters/general_character.js":
/*!*****************************************************!*\
  !*** ./src/scripts/Characters/general_character.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GeneralCharacter\": function() { return /* binding */ GeneralCharacter; }\n/* harmony export */ });\nclass GeneralCharacter {\n  constructor(player, src, frameWidth, frameHeight, animationFrameInfo, singleActions) {\n    let body = document.querySelector(\"body\");\n    let img = document.createElement('img');\n    img.src = src;\n    img.id = `${player.name}-sprite`;\n    img.hidden = true;\n    body.appendChild(img);\n    this.player = player;\n    this.img = document.getElementById(img.id);\n    this.frameWidth = frameWidth;\n    this.frameHeight = frameHeight;\n    this.animationFrameInfo = animationFrameInfo;\n    this.singleActions = singleActions;\n    this.framePosX = 0;\n    this.framePosY = 0;\n    this.draw = this.draw.bind(this);\n    this.currentAction = this.currentAction.bind(this);\n    this.stopAction = this.stopAction.bind(this);\n    this.animate = this.animate.bind(this);\n    this.resetHurtBoxes();\n    this.resetHitBox();\n  }\n  draw(ctx, pos, scale) {\n    ctx.translate(pos[0], pos[1]);\n    if (this.player.xFacing === -1) {\n      ctx.scale(-1, 1);\n    }\n    ctx.drawImage(this.img, this.framePosX, this.framePosY, this.frameWidth, this.frameHeight, -this.frameWidth * scale / 2, 0, this.frameWidth * scale, this.frameHeight * scale);\n    ctx.scale(scale, scale);\n    ctx.translate(-this.frameWidth / 2, 0);\n    if (this.player.renderBoxes) {\n      // render hurtboxes\n      ctx.fillStyle = \"#00ff0025\";\n      this.hurtboxes.forEach(box => {\n        ctx.fillRect(...box);\n      });\n\n      // render hitbox\n      ctx.fillStyle = \"#ff000025\";\n      this.hitboxes.forEach(box => {\n        ctx.fillRect(...box);\n      });\n    }\n  }\n  currentAction(name) {\n    // console.log(this.prototype)\n    if (this.singleActions.includes(name)) {\n      this.animate(name, true);\n    } else {\n      this.animate(name);\n    }\n  }\n  stopAction(name) {\n    // reset animation\n    this.animationFrameInfo[name].framenum = 0;\n    if (this.player.controller.heldButtons.length > 0) {\n      let arr = this.player.controller.heldButtons;\n      let button = arr[arr.length - 1];\n      switch (button) {\n        case 'LEFT':\n          this.player.vel[0] = -1 * this.player.moveSpeed;\n          this.player.currentAction = \"run\";\n          break;\n        case 'RIGHT':\n          this.player.vel[0] = this.player.moveSpeed;\n          this.player.currentAction = \"run\";\n          break;\n        default:\n          this.player.currentAction = \"idle\";\n          break;\n      }\n    } else {\n      this.player.currentAction = \"idle\";\n    }\n  }\n  animate(name) {\n    let playOnce = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    // increment frame number\n    this.animationFrameInfo[name].framenum += 1;\n    let frameNum = this.animationFrameInfo[name].framenum;\n    let totalFrames = this.animationFrameInfo[name].frames.reduce((a, b) => a + b, 0);\n    if (playOnce && frameNum >= totalFrames) {\n      this.stopAction(name);\n    } else {\n      frameNum = (frameNum + totalFrames) % totalFrames;\n\n      // define local vars\n      let sum = 0;\n      let fnum;\n      for (let i = 0; i < this.animationFrameInfo[name].frames.length; i++) {\n        let dur = this.animationFrameInfo[name].frames[i];\n        sum += dur;\n        if (sum > frameNum) {\n          fnum = i;\n          break;\n        }\n      }\n      let originY = this.animationFrameInfo[name].originY;\n\n      // update frame\n      this.framePosX = fnum * this.frameWidth;\n      this.framePosY = originY * this.frameHeight;\n\n      // update hurtboxes\n      if (this.animationFrameInfo[name].hurtboxes) {\n        this.updateHurtboxes(this.animationFrameInfo[name].hurtboxes[fnum]);\n      } else {\n        this.resetHurtBoxes();\n      }\n\n      // update hitbox\n      if (this.animationFrameInfo[name].hitboxes) {\n        this.updateHitBox(this.animationFrameInfo[name].hitboxes[fnum]);\n      } else {\n        this.resetHitBox();\n      }\n    }\n  }\n  resetHurtBoxes() {\n    this.hurtboxes = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n  }\n  updateHurtboxes(hurtboxes) {\n    this.hurtboxes = hurtboxes;\n  }\n  resetHitBox() {\n    this.hitboxes = [[0, 0, 0, 0]];\n  }\n  updateHitBox(hitbox) {\n    this.hitboxes = [hitbox];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Characters/general_character.js\n");

/***/ }),

/***/ "./src/scripts/Characters/samurai.js":
/*!*******************************************!*\
  !*** ./src/scripts/Characters/samurai.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Samurai\": function() { return /* binding */ Samurai; }\n/* harmony export */ });\n/* harmony import */ var _general_character__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./general_character */ \"./src/scripts/Characters/general_character.js\");\n\nclass Samurai extends _general_character__WEBPACK_IMPORTED_MODULE_0__.GeneralCharacter {\n  // Specific constants for Samurai Sprite Sheet\n  static imgSrc = \"assets/images/Sprite Sheets/Samurai/SpriteSheet.png\";\n  static frameWidth = 128;\n  static frameHeight = 128;\n  static animationFrameInfo = {\n    idle: {\n      framenum: 0,\n      originY: 0,\n      frames: Array(6).fill(12),\n      hurtboxes: [[[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]]]\n    },\n    run: {\n      framenum: 0,\n      originY: 1,\n      frames: Array(8).fill(6),\n      hurtboxes: [[[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]]]\n    },\n    walk: {\n      framenum: 0,\n      originY: 2,\n      frames: [4, 4, 4, 4, 4, 4, 4, 4, 4]\n    },\n    jump: {\n      framenum: 0,\n      originY: 3,\n      frames: [4, 7, 7, 7, 7, 7, 7, 7, 7],\n      hurtboxes: [[[71, 58, 17, 15], [58, 71, 27, 38], [53, 110, 36, 16]], [[60, 65, 16, 14], [57, 77, 22, 34], [54, 109, 32, 17]], [[62, 68, 14, 14], [55, 80, 22, 30], [54, 110, 32, 16]], [[64, 48, 13, 14], [56, 59, 21, 35], [53, 92, 20, 28]], [[64, 53, 13, 14], [59, 62, 20, 30], [61, 89, 28, 22]], [[65, 53, 12, 14], [58, 63, 23, 29], [61, 93, 28, 20]], [[64, 55, 14, 14], [54, 67, 22, 32], [48, 99, 23, 21]], [[65, 80, 12, 15], [53, 86, 26, 27], [57, 110, 27, 16]], [[65, 80, 12, 15], [53, 86, 26, 27], [57, 110, 26, 16]]]\n    },\n    attack1: {\n      framenum: 0,\n      originY: 4,\n      frames: [2, 2, 3, 3],\n      hurtboxes: [[[48, 60, 16, 15], [43, 73, 27, 36], [34, 108, 41, 18]], [[48, 60, 16, 15], [43, 73, 27, 36], [34, 108, 41, 18]], [[59, 60, 15, 15], [42, 72, 42, 38], [34, 108, 41, 18]], [[58, 60, 17, 15], [41, 72, 34, 36], [36, 109, 40, 18]]],\n      hitboxes: [[0, 0, 0, 0], [0, 0, 0, 0], [83, 68, 38, 35], [79, 67, 37, 11]]\n    },\n    attack2: {\n      framenum: 0,\n      originY: 6,\n      frames: [6, 7, 4, 3],\n      hurtboxes: [[[63, 65, 13, 15], [43, 79, 33, 32], [35, 109, 39, 17]], [[56, 60, 12, 15], [47, 73, 24, 40], [35, 109, 39, 17]], [[61, 62, 10, 10], [44, 72, 34, 29], [35, 100, 40, 26]], [[61, 62, 10, 10], [44, 72, 34, 29], [35, 100, 40, 26]]],\n      hitboxes: [[0, 0, 0, 0], [0, 0, 0, 0], [84, 57, 32, 41], [83, 55, 15, 17]]\n    },\n    attack3: {\n      framenum: 0,\n      originY: 5,\n      frames: [3, 6, 8, 4, 4],\n      hurtboxes: [[[51, 59, 14, 11], [51, 69, 22, 39], [44, 107, 33, 19]], [[54, 59, 13, 10], [52, 69, 20, 38], [44, 108, 31, 18]], [[54, 59, 13, 10], [52, 69, 20, 38], [44, 108, 31, 18]], [[55, 59, 13, 13], [55, 72, 22, 34], [44, 104, 36, 22]], [[72, 65, 13, 15], [51, 79, 33, 30], [45, 108, 38, 18]]],\n      hitboxes: [[31, 50, 42, 9], [43, 27, 29, 28], [56, 21, 19, 32], [87, 28, 11, 37], [87, 75, 39, 35]]\n    },\n    hurt: {\n      framenum: 0,\n      originY: 7,\n      frames: [4, 4, 4],\n      hurtboxes: [[[46, 58, 13, 14], [46, 71, 24, 37], [43, 107, 28, 19]], [[45, 57, 13, 15], [45, 71, 23, 36], [43, 103, 29, 23]], [[44, 58, 13, 14], [44, 70, 24, 37], [42, 104, 31, 22]]]\n    },\n    dead: {\n      framenum: 0,\n      originY: 8,\n      frames: [10, 10, 10, 10, 10, 10]\n    },\n    guard: {\n      framenum: 0,\n      originY: 9,\n      frames: [2, 2]\n    }\n  };\n  static POSSIBLE_MOVES = {\n    idle: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    run: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    walk: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    jump: [\"idle\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    attack1: [\"idle\", \"hurt\", \"dead\"],\n    attack2: [\"idle\", \"hurt\", \"dead\"],\n    attack3: [\"idle\", \"hurt\", \"dead\"],\n    hurt: [\"idle\", \"hurt\", \"dead\"],\n    dead: [],\n    guard: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"]\n  };\n  static SINGLE_ACTIONS = [\"attack1\", \"attack2\", \"attack3\", \"jump\", \"hurt\"];\n\n  // Class Methods:\n  constructor(player) {\n    super(player, Samurai.imgSrc, Samurai.frameWidth, Samurai.frameHeight, Samurai.animationFrameInfo, Samurai.SINGLE_ACTIONS);\n    this.possibleMoves = Samurai.POSSIBLE_MOVES;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Characters/samurai.js\n");

/***/ }),

/***/ "./src/scripts/controller.js":
/*!***********************************!*\
  !*** ./src/scripts/controller.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Controller\": function() { return /* binding */ Controller; }\n/* harmony export */ });\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n\nclass Controller {\n  constructor(player, option) {\n    let buttonMapping;\n    if (option === 1) {\n      buttonMapping = Controller.CONTROLLER_ONE;\n    } else if (option === 2) {\n      buttonMapping = Controller.CONTROLLER_TWO;\n    }\n    this.heldButtons = [];\n    window.addEventListener(\"keydown\", event => {\n      if (buttonMapping[event.key]) {\n        let moves = player.character.possibleMoves[player.currentAction];\n        if (!this.heldButtons.includes(buttonMapping[event.key])) {\n          this.heldButtons.push(buttonMapping[event.key]);\n          switch (buttonMapping[event.key]) {\n            case 'LEFT':\n              if (moves.includes(\"run\")) {\n                player.vel[0] = -1 * player.moveSpeed;\n                player.currentAction = \"run\";\n              } else {\n                player.vel[0] = -1 * player.moveSpeed;\n              }\n              break;\n            case 'RIGHT':\n              if (moves.includes(\"run\")) {\n                player.vel[0] = 1 * player.moveSpeed;\n                player.currentAction = \"run\";\n              } else {\n                player.vel[0] = 1 * player.moveSpeed;\n              }\n              break;\n            case 'UP':\n              if (player.pos[1] === _game__WEBPACK_IMPORTED_MODULE_0__.Game.FLOOR && moves.includes(\"jump\")) {\n                player.vel[1] = -2 * player.moveSpeed;\n                player.currentAction = \"jump\";\n              }\n              break;\n            case 'B':\n              if (moves.includes(\"attack1\")) {\n                // player.vel[0] = 0;\n                player.currentAction = \"attack1\";\n              }\n              break;\n            case 'Y':\n              if (moves.includes(\"attack2\")) {\n                // player.vel[0] = 0;\n                player.currentAction = \"attack2\";\n              }\n              break;\n            case 'X':\n              if (moves.includes(\"attack3\")) {\n                // player.vel[0] = 0;\n                player.currentAction = \"attack3\";\n              }\n              break;\n          }\n        }\n      }\n    });\n    window.addEventListener(\"keyup\", event => {\n      if (buttonMapping[event.key]) {\n        if (this.heldButtons.includes(buttonMapping[event.key])) {\n          let idx = this.heldButtons.indexOf(buttonMapping[event.key]);\n          this.heldButtons.splice(idx, 1);\n        }\n        switch (buttonMapping[event.key]) {\n          case 'LEFT':\n            if (player.vel[0] < 0 && player.currentAction === \"run\") {\n              player.vel[0] = 0;\n              player.character.stopAction(\"run\");\n            }\n            break;\n          case 'RIGHT':\n            if (player.vel[0] > 0 && player.currentAction === \"run\") {\n              player.vel[0] = 0;\n              player.character.stopAction(\"run\");\n            }\n            break;\n        }\n      }\n    });\n  }\n  static CONTROLLER_ONE = {\n    f: 'B',\n    g: 'Y',\n    h: 'X',\n    r: 'LB',\n    t: 'A',\n    y: 'RB',\n    // 6: 'LT',\n    // 7: 'RT',\n    // 8: 'M',     // minus\n    // 9: 'P',     // plus\n    // 10: 'LJ',   // left joystick\n    // 11: 'RJ',   // right joystick\n    w: 'UP',\n    // up\n    s: 'DOWN',\n    // down\n    a: 'LEFT',\n    d: 'RIGHT'\n    // 16: 'HOME',\n    // 17: 'SS'\n  };\n\n  static CONTROLLER_TWO = {\n    \";\": 'B',\n    l: 'Y',\n    k: 'X',\n    \"i\": 'LB',\n    o: 'A',\n    p: 'RB',\n    // 6: 'LT',\n    // 7: 'RT',\n    // 8: 'M',     // minus\n    // 9: 'P',     // plus\n    // 10: 'LJ',   // left joystick\n    // 11: 'RJ',   // right joystick\n    ArrowUp: 'UP',\n    // up\n    ArrowDown: 'DOWN',\n    // down\n    ArrowLeft: 'LEFT',\n    ArrowRight: 'RIGHT'\n    // 16: 'HOME',\n    // 17: 'SS'\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/controller.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Game\": function() { return /* binding */ Game; }\n/* harmony export */ });\n/* harmony import */ var _controller_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./controller.js */ \"./src/scripts/controller.js\");\n/* harmony import */ var _game_view_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game_view.js */ \"./src/scripts/game_view.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\n\n\n\nclass Game {\n  static FLOOR = 175;\n  static PLAYER1_STARTX = -240;\n  static PLAYER2_STARTX = 240;\n  constructor(ctx) {\n    this.gameView = new _game_view_js__WEBPACK_IMPORTED_MODULE_1__.GameView(ctx);\n    this.player1 = new _player_js__WEBPACK_IMPORTED_MODULE_2__.Player([Game.PLAYER1_STARTX, Game.FLOOR * 0.75], \"player1\");\n    this.controller1 = new _controller_js__WEBPACK_IMPORTED_MODULE_0__.Controller(this.player1, 1);\n    this.player1.assignController(this.controller1);\n    this.player2 = new _player_js__WEBPACK_IMPORTED_MODULE_2__.Player([Game.PLAYER2_STARTX, Game.FLOOR * 0.75], \"player2\");\n    this.controller2 = new _controller_js__WEBPACK_IMPORTED_MODULE_0__.Controller(this.player2, 2);\n    this.player2.assignController(this.controller2);\n    this.objects = [this.player1, this.player2];\n    this.runGame();\n  }\n  runGame() {\n    this.gameView.draw(this.objects);\n    this.handleCollisions();\n    requestAnimationFrame(this.runGame.bind(this));\n  }\n  handleCollisions() {\n    this.handleHit();\n    this.handlePush();\n  }\n  handlePush() {\n    for (let i = 0; i < this.objects.length; i++) {\n      let hurtboxes1 = this.objects[i].getHurtBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_1__.GameView.MAIN_SCALE);\n      for (let j = i + 1; j < this.objects.length; j++) {\n        let hurtboxes2 = this.objects[j].getHurtBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_1__.GameView.MAIN_SCALE);\n        let collide = false;\n        let collisionData = [];\n        for (let k = 0; k < hurtboxes1.length; k++) {\n          for (let m = 0; m < hurtboxes2.length; m++) {\n            let box1 = hurtboxes1[k].slice();\n            let box2 = hurtboxes2[m].slice();\n            collide = this.overlappingBoxes(box1, box2);\n            if (collide) {\n              collisionData.push(box1);\n              collisionData.push(box2);\n              break;\n            }\n          }\n          if (collide) {\n            break;\n          }\n        }\n        if (collide) {\n          let box1 = collisionData[0];\n          let box2 = collisionData[1];\n          let object1 = this.objects[i];\n          let object2 = this.objects[j];\n          if (box1[0] < box2[0]) {\n            let dx = (box1[0] + box1[3] - box2[0]) / 2;\n            object1.pos[0] -= dx;\n            object2.pos[0] += dx;\n          } else {\n            let dx = (box2[0] + box2[3] - box1[0]) / 2;\n            object2.pos[0] -= dx;\n            object1.pos[0] += dx;\n          }\n        }\n      }\n    }\n  }\n  handleHit() {\n    // determine who is hitting which box\n    let hits = [];\n    for (let i = 0; i < this.objects.length; i++) {\n      let hitbox = this.objects[i].getHitBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_1__.GameView.MAIN_SCALE);\n      if (hitbox) {\n        hitbox = hitbox[0];\n        for (let j = 0; j < this.objects.length; j++) {\n          if (j !== i) {\n            let hit = false;\n            let hurtboxes = this.objects[j].getHurtBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_1__.GameView.MAIN_SCALE);\n            for (let k = 0; k < hurtboxes.length; k++) {\n              if (this.overlappingBoxes(hitbox, hurtboxes[k])) {\n                hits.push([this.objects[i], this.objects[j], k]);\n                hit = true;\n                break;\n              }\n            }\n            if (hit) {\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    // actually deal with the hits\n    if (hits.length > 0) {\n      console.log(hits);\n      hits.forEach(hit => {\n        let origin = hit[0];\n        let target = hit[1];\n        let boxNum = hit[2];\n        let damage = 0;\n        switch (origin.currentAction) {\n          case \"attack1\":\n            damage = 1;\n            break;\n          case \"attack2\":\n            damage = 2;\n            break;\n          case \"attack3\":\n            damage = 3;\n            break;\n        }\n\n        // deal damage\n        target.health -= damage * (boxNum + 1) * 0.25;\n        if (target.health < 0) {\n          target.health = 0;\n        }\n\n        // cause knockback\n        let knockback = 10;\n        if (origin.pos[0] < target.pos[0]) {\n          // debugger\n          target.pos[0] += knockback * damage;\n        } else {\n          target.pos[0] -= knockback * damage;\n        }\n      });\n    }\n  }\n  overlappingBoxes(box1, box2) {\n    let x1m, y1m, x1M, y1M;\n    let x2m, y2m, x2M, y2M;\n    [x1m, y1m, x1M, y1M] = [box1[0], box1[1], box1[0] + box1[2], box1[1] + box1[3]];\n    [x2m, y2m, x2M, y2M] = [box2[0], box2[1], box2[0] + box2[2], box2[1] + box2[3]];\n    if (x2m >= x1M || x1m >= x2M) {\n      return false;\n    } else if (y2m >= y1M || y1m >= y2M) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  toggleRenderBoxes() {\n    this.player1.toggleRenderBoxes();\n    this.player2.toggleRenderBoxes();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/game_view.js":
/*!**********************************!*\
  !*** ./src/scripts/game_view.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameView\": function() { return /* binding */ GameView; }\n/* harmony export */ });\nclass GameView {\n  // Constants\n  static MAIN_SCALE = 0.75;\n  static WIDTH = 960 * GameView.MAIN_SCALE;\n  static HEIGHT = 720 * GameView.MAIN_SCALE;\n  static BACKGROUND_OFFSET_X = -400;\n  static BACKGROUND_OFFSET_Y = -200;\n  static BACKGROUND_SCALE = 0.9;\n  static CAMERA_LIMIT_LEFT = -400;\n  static CAMERA_LIMIT_RIGHT = 365;\n\n  // Class methods\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.camera_location = 0;\n  }\n  draw(objects) {\n    let ctx = this.ctx;\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, GameView.WIDTH, GameView.HEIGHT);\n\n    // Calculate camera location\n    this.calculateCameraLocation(objects);\n\n    // draw background image\n    this.drawbackground();\n\n    // draw fighters and other assets\n    objects.forEach(obj => {\n      ctx.resetTransform();\n      ctx.translate(GameView.WIDTH / 2, 0);\n      ctx.scale(GameView.MAIN_SCALE, GameView.MAIN_SCALE);\n      ctx.translate(-this.camera_location, 0);\n      obj.draw(ctx);\n    });\n\n    // enforce camera limits\n    this.enforceCameraLimits(objects);\n\n    // draw health bars\n    this.drawHealthBars(objects);\n  }\n  calculateCameraLocation(objects) {\n    let sumX = 0;\n    objects.forEach(obj => {\n      sumX += obj.pos[0];\n    });\n    let avgX = sumX / objects.length;\n    if (avgX < GameView.CAMERA_LIMIT_LEFT) {\n      this.camera_location = GameView.CAMERA_LIMIT_LEFT;\n    } else if (avgX > GameView.CAMERA_LIMIT_RIGHT) {\n      this.camera_location = GameView.CAMERA_LIMIT_RIGHT;\n    } else {\n      this.camera_location = avgX;\n    }\n  }\n  drawbackground() {\n    this.ctx.scale(GameView.MAIN_SCALE, GameView.MAIN_SCALE);\n    this.ctx.translate(GameView.BACKGROUND_OFFSET_X - this.camera_location, GameView.BACKGROUND_OFFSET_Y);\n    this.ctx.scale(GameView.BACKGROUND_SCALE, GameView.BACKGROUND_SCALE);\n    let backgroundImg = document.getElementById(\"train-background\");\n    this.ctx.drawImage(backgroundImg, 0, 0);\n  }\n  drawHealthBars(objects) {\n    let ctx = this.ctx;\n    let barThickness = 18;\n    let start1 = GameView.WIDTH * 0.04;\n    let start2 = GameView.WIDTH * 0.96;\n    let barSize = GameView.WIDTH * 0.4;\n    let healthyColor = \"0, 220, 0\";\n    let hurtColor = \"170, 0, 0\";\n    objects.forEach(obj => {\n      ctx.resetTransform();\n      let startpos, barwidth, sign;\n      if (obj.name === \"player1\") {\n        startpos = [start1, start1];\n        barwidth = barSize;\n        sign = 1;\n      } else {\n        startpos = [start2, start1];\n        barwidth = -barSize;\n        sign = -1;\n      }\n      for (let i = 5; i >= 0; i--) {\n        if (obj.health === 100) {\n          ctx.strokeStyle = `rgb(${healthyColor}, ${0.25 + (5 - i) / 5 * 0.75})`;\n          ctx.lineWidth = barThickness + i;\n          ctx.beginPath();\n          ctx.moveTo(startpos[0] - i * sign, startpos[1]);\n          ctx.lineTo(startpos[0] + obj.health / 100 * barwidth + i * sign, startpos[1]);\n          ctx.stroke();\n        } else if (obj.health === 0) {\n          ctx.beginPath();\n          ctx.lineWidth = barThickness + i;\n          ctx.strokeStyle = `rgb(${hurtColor}, ${0.25 + (5 - i) / 5 * 0.75})`;\n          ctx.moveTo(startpos[0] + obj.health / 100 * barwidth - i * sign, startpos[1]);\n          ctx.lineTo(startpos[0] + barwidth + i * sign, startpos[1]);\n          ctx.stroke();\n        } else {\n          ctx.strokeStyle = `rgb(${healthyColor}, ${0.25 + (5 - i) / 5 * 0.75})`;\n          ctx.lineWidth = barThickness + i;\n          ctx.beginPath();\n          ctx.moveTo(startpos[0] - i * sign, startpos[1]);\n          ctx.lineTo(startpos[0] + obj.health / 100 * barwidth, startpos[1]);\n          ctx.stroke();\n          ctx.beginPath();\n          ctx.strokeStyle = `rgb(${hurtColor}, ${0.25 + (5 - i) / 5 * 0.75})`;\n          ctx.moveTo(startpos[0] + obj.health / 100 * barwidth, startpos[1]);\n          ctx.lineTo(startpos[0] + barwidth + i * sign, startpos[1]);\n          ctx.stroke();\n        }\n      }\n    });\n  }\n  enforceCameraLimits(objects) {\n    objects.forEach(obj => {\n      // use body hurtbox to calculate x-limit\n      let bodyBox = obj.getHurtBoxes(GameView.MAIN_SCALE)[1];\n      let left = bodyBox[0];\n      let right = bodyBox[0] + bodyBox[2];\n      if (left - this.camera_location * GameView.MAIN_SCALE < -GameView.WIDTH / 2) {\n        let dx = left - this.camera_location * GameView.MAIN_SCALE + GameView.WIDTH / 2;\n        obj.pos[0] -= dx;\n      } else if (right - this.camera_location * GameView.MAIN_SCALE > GameView.WIDTH / 2) {\n        let dx = right - this.camera_location * GameView.MAIN_SCALE - GameView.WIDTH / 2;\n        obj.pos[0] -= dx;\n      }\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game_view.js\n");

/***/ }),

/***/ "./src/scripts/moveable.js":
/*!*********************************!*\
  !*** ./src/scripts/moveable.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Moveable\": function() { return /* binding */ Moveable; }\n/* harmony export */ });\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n/* harmony import */ var _game_view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game_view */ \"./src/scripts/game_view.js\");\n\n\nclass Moveable {\n  static GRAVITY = [0.5, 0.75];\n  constructor(options) {\n    this.pos = options[\"startpos\"];\n    this.vel = [0, 0];\n  }\n  move() {\n    if (this.pos[1] === _game__WEBPACK_IMPORTED_MODULE_0__.Game.FLOOR && this.currentAction !== \"run\") {\n      if (this.vel[0] < -Moveable.GRAVITY[0]) {\n        this.vel[0] += Moveable.GRAVITY[0];\n      } else if (this.vel[0] > Moveable.GRAVITY[0]) {\n        this.vel[0] -= Moveable.GRAVITY[0];\n      } else {\n        this.vel[0] = 0;\n      }\n    }\n    this.pos[0] += this.vel[0];\n    this.vel[1] += Moveable.GRAVITY[1];\n    this.pos[1] += this.vel[1];\n    this.checkFloor();\n    this.checkFacing();\n  }\n  checkFloor() {\n    // console.log(Game.FLOOR)\n    if (this.pos[1] > _game__WEBPACK_IMPORTED_MODULE_0__.Game.FLOOR) {\n      this.vel[1] = 0;\n      this.pos[1] = _game__WEBPACK_IMPORTED_MODULE_0__.Game.FLOOR;\n    }\n  }\n  checkFacing() {\n    if (this.vel[0] < 0) {\n      this.xFacing = -1;\n    } else if (this.vel[0] > 0) {\n      this.xFacing = 1;\n    }\n  }\n  draw() {\n    throw new Error(\"Draw not implemented?\");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tb3ZlYWJsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEI7QUFDUztBQUVoQyxNQUFNRSxRQUFRLENBQUM7RUFDbEIsT0FBT0MsT0FBTyxHQUFHLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQztFQUU1QkMsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFFO0lBQ2pCLElBQUksQ0FBQ0MsR0FBRyxHQUFHRCxPQUFPLENBQUMsVUFBVSxDQUFDO0lBQzlCLElBQUksQ0FBQ0UsR0FBRyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUNyQjtFQUVBQyxJQUFJQSxDQUFBLEVBQUc7SUFDSCxJQUFJLElBQUksQ0FBQ0YsR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLTiw2Q0FBVSxJQUFJLElBQUksQ0FBQ1UsYUFBYSxLQUFLLEtBQUssRUFBRTtNQUM1RCxJQUFJLElBQUksQ0FBQ0gsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUNMLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ3BDLElBQUksQ0FBQ0ksR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJTCxRQUFRLENBQUNDLE9BQU8sQ0FBQyxDQUFDLENBQUM7TUFDdEMsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUdMLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQzFDLElBQUksQ0FBQ0ksR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJTCxRQUFRLENBQUNDLE9BQU8sQ0FBQyxDQUFDLENBQUM7TUFDdEMsQ0FBQyxNQUFNO1FBQ0gsSUFBSSxDQUFDSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztNQUNuQjtJQUNKO0lBQ0EsSUFBSSxDQUFDRCxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFCLElBQUksQ0FBQ0EsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJTCxRQUFRLENBQUNDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDbEMsSUFBSSxDQUFDRyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBRTFCLElBQUksQ0FBQ0ksVUFBVSxDQUFDLENBQUM7SUFDakIsSUFBSSxDQUFDQyxXQUFXLENBQUMsQ0FBQztFQUN0QjtFQUVBRCxVQUFVQSxDQUFBLEVBQUc7SUFDVDtJQUNBLElBQUksSUFBSSxDQUFDTCxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUdOLDZDQUFVLEVBQUU7TUFDMUIsSUFBSSxDQUFDTyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztNQUNmLElBQUksQ0FBQ0QsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHTiw2Q0FBVTtJQUM1QjtFQUNKO0VBRUFZLFdBQVdBLENBQUEsRUFBRztJQUNWLElBQUksSUFBSSxDQUFDTCxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFO01BQ2pCLElBQUksQ0FBQ00sT0FBTyxHQUFHLENBQUMsQ0FBQztJQUNyQixDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUNOLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUU7TUFDeEIsSUFBSSxDQUFDTSxPQUFPLEdBQUcsQ0FBQztJQUNwQjtFQUNKO0VBRUFDLElBQUlBLENBQUEsRUFBRztJQUNILE1BQU0sSUFBSUMsS0FBSyxDQUFDLHVCQUF1QixDQUFDO0VBQzVDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QvLi9zcmMvc2NyaXB0cy9tb3ZlYWJsZS5qcz85MWI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdhbWUgfSBmcm9tIFwiLi9nYW1lXCI7XG5pbXBvcnQgeyBHYW1lVmlldyB9IGZyb20gXCIuL2dhbWVfdmlld1wiO1xuXG5leHBvcnQgY2xhc3MgTW92ZWFibGUge1xuICAgIHN0YXRpYyBHUkFWSVRZID0gWzAuNSwgMC43NV07XG5cbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHRoaXMucG9zID0gb3B0aW9uc1tcInN0YXJ0cG9zXCJdO1xuICAgICAgICB0aGlzLnZlbCA9IFswLCAwXTtcbiAgICB9XG5cbiAgICBtb3ZlKCkge1xuICAgICAgICBpZiAodGhpcy5wb3NbMV0gPT09IEdhbWUuRkxPT1IgJiYgdGhpcy5jdXJyZW50QWN0aW9uICE9PSBcInJ1blwiKSB7XG4gICAgICAgICAgICBpZiAodGhpcy52ZWxbMF0gPCAtTW92ZWFibGUuR1JBVklUWVswXSkge1xuICAgICAgICAgICAgICAgIHRoaXMudmVsWzBdICs9IE1vdmVhYmxlLkdSQVZJVFlbMF07XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMudmVsWzBdID4gTW92ZWFibGUuR1JBVklUWVswXSkge1xuICAgICAgICAgICAgICAgIHRoaXMudmVsWzBdIC09IE1vdmVhYmxlLkdSQVZJVFlbMF07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMudmVsWzBdID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBvc1swXSArPSB0aGlzLnZlbFswXTtcbiAgICAgICAgdGhpcy52ZWxbMV0gKz0gTW92ZWFibGUuR1JBVklUWVsxXTtcbiAgICAgICAgdGhpcy5wb3NbMV0gKz0gdGhpcy52ZWxbMV07XG5cbiAgICAgICAgdGhpcy5jaGVja0Zsb29yKCk7XG4gICAgICAgIHRoaXMuY2hlY2tGYWNpbmcoKTtcbiAgICB9XG5cbiAgICBjaGVja0Zsb29yKCkge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhHYW1lLkZMT09SKVxuICAgICAgICBpZiAodGhpcy5wb3NbMV0gPiBHYW1lLkZMT09SKSB7XG4gICAgICAgICAgICB0aGlzLnZlbFsxXSA9IDA7XG4gICAgICAgICAgICB0aGlzLnBvc1sxXSA9IEdhbWUuRkxPT1I7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjaGVja0ZhY2luZygpIHtcbiAgICAgICAgaWYgKHRoaXMudmVsWzBdIDwgMCkge1xuICAgICAgICAgICAgdGhpcy54RmFjaW5nID0gLTE7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy52ZWxbMF0gPiAwKSB7XG4gICAgICAgICAgICB0aGlzLnhGYWNpbmcgPSAxO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZHJhdygpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRHJhdyBub3QgaW1wbGVtZW50ZWQ/XCIpXG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIkdhbWUiLCJHYW1lVmlldyIsIk1vdmVhYmxlIiwiR1JBVklUWSIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsInBvcyIsInZlbCIsIm1vdmUiLCJGTE9PUiIsImN1cnJlbnRBY3Rpb24iLCJjaGVja0Zsb29yIiwiY2hlY2tGYWNpbmciLCJ4RmFjaW5nIiwiZHJhdyIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/moveable.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Player\": function() { return /* binding */ Player; }\n/* harmony export */ });\n/* harmony import */ var _Characters_samurai_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Characters/samurai.js */ \"./src/scripts/Characters/samurai.js\");\n/* harmony import */ var _moveable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./moveable.js */ \"./src/scripts/moveable.js\");\n\n\nclass Player extends _moveable_js__WEBPACK_IMPORTED_MODULE_1__.Moveable {\n  constructor(startpos, name) {\n    let options = {\n      startpos: startpos\n    };\n    super(options);\n    this.name = name;\n    if (name === \"player1\") {\n      this.xFacing = 1;\n    } else {\n      this.xFacing = -1;\n    }\n    this.moveSpeed = 10;\n    this.scale = 3.15;\n    this.health = Math.random() * 100;\n    this.character = new _Characters_samurai_js__WEBPACK_IMPORTED_MODULE_0__.Samurai(this); // change later when introduce other sprites?\n    this.currentAction = \"idle\";\n    this.renderBoxes = false;\n    console.log(`${name} created successfully`);\n  }\n  draw(ctx) {\n    this.move();\n    this.character.currentAction(this.currentAction);\n    this.character.draw(ctx, this.pos, this.scale);\n  }\n  assignController(controller) {\n    this.controller = controller;\n  }\n  getHurtBoxes(main_scale) {\n    if (this.character.hurtboxes) {\n      return this.calculateBoxes(main_scale, this.character.hurtboxes);\n    } else {\n      return [];\n    }\n  }\n  getHitBoxes(main_scale) {\n    if (this.character.hitboxes) {\n      return this.calculateBoxes(main_scale, this.character.hitboxes);\n    } else {\n      return [];\n    }\n  }\n  calculateBoxes(main_scale, boxes) {\n    let objBoxes = boxes;\n    let pos = this.pos;\n    let xFacing = this.xFacing;\n    let scale = this.scale;\n    let frameWidth = this.character.frameWidth;\n    let outputBoxes = [];\n    for (let k = 0; k < objBoxes.length; k++) {\n      let box = objBoxes[k].slice();\n      if (xFacing === 1) {\n        box[0] = pos[0] - frameWidth * scale / 2 + box[0] * scale;\n      } else {\n        box[0] = pos[0] + frameWidth * scale / 2 - box[0] * scale - box[2] * scale;\n      }\n      box[1] = pos[1] + box[1] * scale;\n      box[2] *= scale;\n      box[3] *= scale;\n      box[0] *= main_scale;\n      box[1] *= main_scale;\n      box[2] *= main_scale;\n      box[3] *= main_scale;\n      outputBoxes.push(box);\n    }\n    return outputBoxes;\n  }\n  toggleRenderBoxes() {\n    this.renderBoxes = !this.renderBoxes;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFHLENBQUMsQ0FBQyxDQUFDLEdBQUdmLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBR1csVUFBVSxHQUFDdkIsS0FBSyxHQUFDLENBQUMsR0FBRzJCLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQzNCLEtBQUs7TUFDdkQsQ0FBQyxNQUFNO1FBQ0gyQixHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUdmLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBR1csVUFBVSxHQUFDdkIsS0FBSyxHQUFDLENBQUMsR0FBRzJCLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQzNCLEtBQUssR0FBRzJCLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBQzNCLEtBQUs7TUFDdEU7TUFDQTJCLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBR2YsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHZSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUMzQixLQUFLO01BQzlCMkIsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJM0IsS0FBSztNQUNmMkIsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJM0IsS0FBSztNQUVmMkIsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJWCxVQUFVO01BQ3BCVyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUlYLFVBQVU7TUFDcEJXLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSVgsVUFBVTtNQUNwQlcsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJWCxVQUFVO01BRXBCUSxXQUFXLENBQUNLLElBQUksQ0FBQ0YsR0FBRyxDQUFDO0lBQ3pCO0lBQ0EsT0FBT0gsV0FBVztFQUN0QjtFQUVBTSxpQkFBaUJBLENBQUEsRUFBRztJQUNoQixJQUFJLENBQUN4QixXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUNBLFdBQVc7RUFDeEM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzcHJvamVjdC8uL3NyYy9zY3JpcHRzL3BsYXllci5qcz82NDcxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNhbXVyYWkgfSBmcm9tIFwiLi9DaGFyYWN0ZXJzL3NhbXVyYWkuanNcIjtcbmltcG9ydCB7IE1vdmVhYmxlIH0gZnJvbSBcIi4vbW92ZWFibGUuanNcIjtcblxuZXhwb3J0IGNsYXNzIFBsYXllciBleHRlbmRzIE1vdmVhYmxle1xuICAgIGNvbnN0cnVjdG9yKHN0YXJ0cG9zLCBuYW1lKSB7XG4gICAgICAgIGxldCBvcHRpb25zID0ge3N0YXJ0cG9zOiBzdGFydHBvc307XG4gICAgICAgIHN1cGVyKG9wdGlvbnMpO1xuXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIGlmIChuYW1lID09PSBcInBsYXllcjFcIikge1xuICAgICAgICAgICAgdGhpcy54RmFjaW5nID0gMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMueEZhY2luZyA9IC0xO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubW92ZVNwZWVkID0gMTA7XG4gICAgICAgIHRoaXMuc2NhbGUgPSAzLjE1O1xuXG4gICAgICAgIHRoaXMuaGVhbHRoID0gTWF0aC5yYW5kb20oKSoxMDA7XG5cbiAgICAgICAgdGhpcy5jaGFyYWN0ZXIgPSBuZXcgU2FtdXJhaSh0aGlzKTsgLy8gY2hhbmdlIGxhdGVyIHdoZW4gaW50cm9kdWNlIG90aGVyIHNwcml0ZXM/XG4gICAgICAgIHRoaXMuY3VycmVudEFjdGlvbiA9IFwiaWRsZVwiO1xuICAgICAgICB0aGlzLnJlbmRlckJveGVzID0gZmFsc2U7XG5cbiAgICAgICAgY29uc29sZS5sb2coYCR7bmFtZX0gY3JlYXRlZCBzdWNjZXNzZnVsbHlgKVxuICAgIH1cblxuICAgIGRyYXcoY3R4KXtcbiAgICAgICAgdGhpcy5tb3ZlKCk7XG4gICAgICAgIHRoaXMuY2hhcmFjdGVyLmN1cnJlbnRBY3Rpb24odGhpcy5jdXJyZW50QWN0aW9uKTtcbiAgICAgICAgdGhpcy5jaGFyYWN0ZXIuZHJhdyhjdHgsIHRoaXMucG9zLCB0aGlzLnNjYWxlKTtcbiAgICB9XG5cbiAgICBhc3NpZ25Db250cm9sbGVyKGNvbnRyb2xsZXIpIHtcbiAgICAgICAgdGhpcy5jb250cm9sbGVyID0gY29udHJvbGxlcjtcbiAgICB9XG5cbiAgICBnZXRIdXJ0Qm94ZXMobWFpbl9zY2FsZSkge1xuICAgICAgICBpZiAodGhpcy5jaGFyYWN0ZXIuaHVydGJveGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jYWxjdWxhdGVCb3hlcyhtYWluX3NjYWxlLCB0aGlzLmNoYXJhY3Rlci5odXJ0Ym94ZXMpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXRIaXRCb3hlcyhtYWluX3NjYWxlKSB7XG4gICAgICAgIGlmICh0aGlzLmNoYXJhY3Rlci5oaXRib3hlcykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2FsY3VsYXRlQm94ZXMobWFpbl9zY2FsZSwgdGhpcy5jaGFyYWN0ZXIuaGl0Ym94ZXMpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjYWxjdWxhdGVCb3hlcyhtYWluX3NjYWxlLCBib3hlcyl7XG4gICAgICAgIGxldCBvYmpCb3hlcyA9IGJveGVzO1xuICAgICAgICBsZXQgcG9zID0gdGhpcy5wb3M7XG4gICAgICAgIGxldCB4RmFjaW5nID0gdGhpcy54RmFjaW5nO1xuICAgICAgICBsZXQgc2NhbGUgPSB0aGlzLnNjYWxlO1xuICAgICAgICBsZXQgZnJhbWVXaWR0aCA9IHRoaXMuY2hhcmFjdGVyLmZyYW1lV2lkdGg7XG5cbiAgICAgICAgbGV0IG91dHB1dEJveGVzID0gW107XG4gICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgb2JqQm94ZXMubGVuZ3RoOyBrKyspe1xuICAgICAgICAgICAgbGV0IGJveCA9IG9iakJveGVzW2tdLnNsaWNlKCk7XG5cbiAgICAgICAgICAgIGlmICh4RmFjaW5nID09PSAxKSB7XG4gICAgICAgICAgICAgICAgYm94WzBdID0gcG9zWzBdIC0gZnJhbWVXaWR0aCpzY2FsZS8yICsgYm94WzBdKnNjYWxlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBib3hbMF0gPSBwb3NbMF0gKyBmcmFtZVdpZHRoKnNjYWxlLzIgLSBib3hbMF0qc2NhbGUgLSBib3hbMl0qc2NhbGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBib3hbMV0gPSBwb3NbMV0gKyBib3hbMV0qc2NhbGU7XG4gICAgICAgICAgICBib3hbMl0gKj0gc2NhbGU7XG4gICAgICAgICAgICBib3hbM10gKj0gc2NhbGU7XG5cbiAgICAgICAgICAgIGJveFswXSAqPSBtYWluX3NjYWxlO1xuICAgICAgICAgICAgYm94WzFdICo9IG1haW5fc2NhbGU7XG4gICAgICAgICAgICBib3hbMl0gKj0gbWFpbl9zY2FsZTtcbiAgICAgICAgICAgIGJveFszXSAqPSBtYWluX3NjYWxlO1xuXG4gICAgICAgICAgICBvdXRwdXRCb3hlcy5wdXNoKGJveCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG91dHB1dEJveGVzO1xuICAgIH1cblxuICAgIHRvZ2dsZVJlbmRlckJveGVzKCkge1xuICAgICAgICB0aGlzLnJlbmRlckJveGVzID0gIXRoaXMucmVuZGVyQm94ZXM7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIlNhbXVyYWkiLCJNb3ZlYWJsZSIsIlBsYXllciIsImNvbnN0cnVjdG9yIiwic3RhcnRwb3MiLCJuYW1lIiwib3B0aW9ucyIsInhGYWNpbmciLCJtb3ZlU3BlZWQiLCJzY2FsZSIsImhlYWx0aCIsIk1hdGgiLCJyYW5kb20iLCJjaGFyYWN0ZXIiLCJjdXJyZW50QWN0aW9uIiwicmVuZGVyQm94ZXMiLCJjb25zb2xlIiwibG9nIiwiZHJhdyIsImN0eCIsIm1vdmUiLCJwb3MiLCJhc3NpZ25Db250cm9sbGVyIiwiY29udHJvbGxlciIsImdldEh1cnRCb3hlcyIsIm1haW5fc2NhbGUiLCJodXJ0Ym94ZXMiLCJjYWxjdWxhdGVCb3hlcyIsImdldEhpdEJveGVzIiwiaGl0Ym94ZXMiLCJib3hlcyIsIm9iakJveGVzIiwiZnJhbWVXaWR0aCIsIm91dHB1dEJveGVzIiwiayIsImxlbmd0aCIsImJveCIsInNsaWNlIiwicHVzaCIsInRvZ2dsZVJlbmRlckJveGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;