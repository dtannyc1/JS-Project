/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game_view */ \"./src/scripts/game_view.js\");\n/* harmony import */ var _scripts_mainmenu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/mainmenu */ \"./src/scripts/mainmenu.js\");\n\n\n// import * as Modal from \"./scripts/modals\";\n\nlet canvas = document.querySelector(\"#main-canvas\");\nconst ctx = canvas.getContext(\"2d\");\nlet controller1canvas = document.querySelector(\"#controller1\");\ncontroller1canvas.width = 663;\ncontroller1canvas.height = 227;\nconst controller1ctx = controller1canvas.getContext(\"2d\");\nlet controller2canvas = document.querySelector(\"#controller2\");\ncontroller2canvas.width = 663;\ncontroller2canvas.height = 227;\nconst controller2ctx = controller2canvas.getContext(\"2d\");\ncanvas.width = _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__.GameView.WIDTH;\ncanvas.height = _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__.GameView.HEIGHT;\ncanvas.style.backgroundColor = \"black\";\n\n// window.game = new Game(ctx, controller1ctx, controller2ctx);\n\nlet menu = new _scripts_mainmenu__WEBPACK_IMPORTED_MODULE_1__.MainMenu(ctx, controller1ctx, controller2ctx);\nwindow.menu = menu;\nfunction controllerConnectListener(event) {\n  menu.addGamePad(event.gamepad);\n}\nwindow.addEventListener(\"gamepadconnected\", controllerConnectListener);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQStDO0FBQ0Q7QUFDOUM7O0FBRUEsSUFBSUUsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxjQUFjLENBQUM7QUFDbkQsTUFBTUMsR0FBRyxHQUFHSCxNQUFNLENBQUNJLFVBQVUsQ0FBQyxJQUFJLENBQUM7QUFFbkMsSUFBSUMsaUJBQWlCLEdBQUdKLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLGNBQWMsQ0FBQztBQUM5REcsaUJBQWlCLENBQUNDLEtBQUssR0FBRyxHQUFHO0FBQzdCRCxpQkFBaUIsQ0FBQ0UsTUFBTSxHQUFHLEdBQUc7QUFDOUIsTUFBTUMsY0FBYyxHQUFHSCxpQkFBaUIsQ0FBQ0QsVUFBVSxDQUFDLElBQUksQ0FBQztBQUV6RCxJQUFJSyxpQkFBaUIsR0FBR1IsUUFBUSxDQUFDQyxhQUFhLENBQUMsY0FBYyxDQUFDO0FBQzlETyxpQkFBaUIsQ0FBQ0gsS0FBSyxHQUFHLEdBQUc7QUFDN0JHLGlCQUFpQixDQUFDRixNQUFNLEdBQUcsR0FBRztBQUM5QixNQUFNRyxjQUFjLEdBQUdELGlCQUFpQixDQUFDTCxVQUFVLENBQUMsSUFBSSxDQUFDO0FBRXpESixNQUFNLENBQUNNLEtBQUssR0FBR1IsOERBQWM7QUFDN0JFLE1BQU0sQ0FBQ08sTUFBTSxHQUFHVCwrREFBZTtBQUMvQkUsTUFBTSxDQUFDYSxLQUFLLENBQUNDLGVBQWUsR0FBRyxPQUFPOztBQUV0Qzs7QUFFQSxJQUFJQyxJQUFJLEdBQUcsSUFBSWhCLHVEQUFRLENBQUNJLEdBQUcsRUFBRUssY0FBYyxFQUFFRSxjQUFjLENBQUM7QUFDNURNLE1BQU0sQ0FBQ0QsSUFBSSxHQUFHQSxJQUFJO0FBRWxCLFNBQVNFLHlCQUF5QkEsQ0FBQ0MsS0FBSyxFQUFFO0VBQ3RDSCxJQUFJLENBQUNJLFVBQVUsQ0FBQ0QsS0FBSyxDQUFDRSxPQUFPLENBQUM7QUFDbEM7QUFFQUosTUFBTSxDQUFDSyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRUoseUJBQXlCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHYW1lVmlldyB9IGZyb20gXCIuL3NjcmlwdHMvZ2FtZV92aWV3XCI7XG5pbXBvcnQgeyBNYWluTWVudSB9IGZyb20gXCIuL3NjcmlwdHMvbWFpbm1lbnVcIjtcbi8vIGltcG9ydCAqIGFzIE1vZGFsIGZyb20gXCIuL3NjcmlwdHMvbW9kYWxzXCI7XG5cbmxldCBjYW52YXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21haW4tY2FudmFzXCIpO1xuY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcblxubGV0IGNvbnRyb2xsZXIxY2FudmFzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb250cm9sbGVyMVwiKVxuY29udHJvbGxlcjFjYW52YXMud2lkdGggPSA2NjM7XG5jb250cm9sbGVyMWNhbnZhcy5oZWlnaHQgPSAyMjc7XG5jb25zdCBjb250cm9sbGVyMWN0eCA9IGNvbnRyb2xsZXIxY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcblxubGV0IGNvbnRyb2xsZXIyY2FudmFzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb250cm9sbGVyMlwiKVxuY29udHJvbGxlcjJjYW52YXMud2lkdGggPSA2NjM7XG5jb250cm9sbGVyMmNhbnZhcy5oZWlnaHQgPSAyMjc7XG5jb25zdCBjb250cm9sbGVyMmN0eCA9IGNvbnRyb2xsZXIyY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcblxuY2FudmFzLndpZHRoID0gR2FtZVZpZXcuV0lEVEg7XG5jYW52YXMuaGVpZ2h0ID0gR2FtZVZpZXcuSEVJR0hUO1xuY2FudmFzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiYmxhY2tcIjtcblxuLy8gd2luZG93LmdhbWUgPSBuZXcgR2FtZShjdHgsIGNvbnRyb2xsZXIxY3R4LCBjb250cm9sbGVyMmN0eCk7XG5cbmxldCBtZW51ID0gbmV3IE1haW5NZW51KGN0eCwgY29udHJvbGxlcjFjdHgsIGNvbnRyb2xsZXIyY3R4KTtcbndpbmRvdy5tZW51ID0gbWVudTtcblxuZnVuY3Rpb24gY29udHJvbGxlckNvbm5lY3RMaXN0ZW5lcihldmVudCkge1xuICAgIG1lbnUuYWRkR2FtZVBhZChldmVudC5nYW1lcGFkKTtcbn1cblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJnYW1lcGFkY29ubmVjdGVkXCIsIGNvbnRyb2xsZXJDb25uZWN0TGlzdGVuZXIpO1xuIl0sIm5hbWVzIjpbIkdhbWVWaWV3IiwiTWFpbk1lbnUiLCJjYW52YXMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjdHgiLCJnZXRDb250ZXh0IiwiY29udHJvbGxlcjFjYW52YXMiLCJ3aWR0aCIsImhlaWdodCIsImNvbnRyb2xsZXIxY3R4IiwiY29udHJvbGxlcjJjYW52YXMiLCJjb250cm9sbGVyMmN0eCIsIldJRFRIIiwiSEVJR0hUIiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJtZW51Iiwid2luZG93IiwiY29udHJvbGxlckNvbm5lY3RMaXN0ZW5lciIsImV2ZW50IiwiYWRkR2FtZVBhZCIsImdhbWVwYWQiLCJhZGRFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/Backgrounds/train.js":
/*!******************************************!*\
  !*** ./src/scripts/Backgrounds/train.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Train\": function() { return /* binding */ Train; }\n/* harmony export */ });\nclass Train {\n  static BACKGROUND_OFFSET_X = -400;\n  static BACKGROUND_OFFSET_Y = -200;\n  static BACKGROUND_SCALE = 0.9;\n  static CAMERA_LIMIT_LEFT = -400;\n  static CAMERA_LIMIT_RIGHT = 225;\n  static FLOOR = 175;\n  static BACKGROUND_IMAGES = [[\"assets/images/Backgrounds/Postapocalypce4/Bright/bg.png\", 0], [\"assets/images/Backgrounds/Postapocalypce4/Bright/rail&wall.png\", 0.25], [\"assets/images/Backgrounds/Postapocalypce4/Bright/train.png\", 0.5], [\"assets/images/Backgrounds/Postapocalypce4/Bright/columns&floor.png\", 0.75]];\n  static FOREGROUND_IMAGES = [[\"assets/images/Backgrounds/Postapocalypce4/Bright/infopost&wires.png\", 1], [\"assets/images/Backgrounds/Postapocalypce4/Bright/wires.png\", 1], [\"assets/images/Backgrounds/Postapocalypce4/Bright/floor&underfloor.png\", 1]];\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.CAMERA_LIMIT_LEFT = Train.CAMERA_LIMIT_LEFT;\n    this.CAMERA_LIMIT_RIGHT = Train.CAMERA_LIMIT_RIGHT;\n    this.FLOOR = Train.FLOOR;\n    let body = document.querySelector(\"body\");\n    this.backgroundImgs = [];\n    this.foregroundImgs = [];\n    for (let i = 0; i < Train.BACKGROUND_IMAGES.length; i++) {\n      let img = document.createElement('img');\n      img.src = Train.BACKGROUND_IMAGES[i][0];\n      img.id = `background-${i}`;\n      img.hidden = true;\n      body.appendChild(img);\n      this.backgroundImgs.push(img);\n    }\n    for (let i = 0; i < Train.FOREGROUND_IMAGES.length; i++) {\n      let img = document.createElement('img');\n      img.src = Train.FOREGROUND_IMAGES[i][0];\n      img.id = `foreground-${i}`;\n      img.hidden = true;\n      body.appendChild(img);\n      this.foregroundImgs.push(img);\n    }\n  }\n  drawBackground(camera_location, scale) {\n    this.ctx.resetTransform();\n    for (let i = 0; i < Train.BACKGROUND_IMAGES.length; i++) {\n      let multiplier = Train.BACKGROUND_IMAGES[i][1];\n      let sx = -scale * (Train.BACKGROUND_OFFSET_X - camera_location * multiplier);\n      let sy = -scale * Train.BACKGROUND_OFFSET_Y;\n      let sw = 720 / Train.BACKGROUND_SCALE / scale;\n      let sh = 540 / Train.BACKGROUND_SCALE / scale;\n      this.ctx.drawImage(this.backgroundImgs[i], sx, sy, sw, sh, 0, 0, 720, 540);\n    }\n  }\n  drawForeground(camera_location, scale) {\n    this.ctx.resetTransform();\n    for (let i = 0; i < Train.FOREGROUND_IMAGES.length; i++) {\n      let multiplier = Train.FOREGROUND_IMAGES[i][1];\n      let sx = -(Train.BACKGROUND_OFFSET_X - camera_location * multiplier) / scale;\n      let sy = -Train.BACKGROUND_OFFSET_Y / scale;\n      let sw = 720 / Train.BACKGROUND_SCALE / scale;\n      let sh = 540 / Train.BACKGROUND_SCALE / scale;\n      this.ctx.drawImage(this.foregroundImgs[i], sx, sy, sw, sh, 0, 0, 720, 540);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Backgrounds/train.js\n");

/***/ }),

/***/ "./src/scripts/Backgrounds/war.js":
/*!****************************************!*\
  !*** ./src/scripts/Backgrounds/war.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"War\": function() { return /* binding */ War; }\n/* harmony export */ });\nclass War {\n  static BACKGROUND_OFFSET_X = -400;\n  static BACKGROUND_OFFSET_Y = -150;\n  static BACKGROUND_SCALE = 0.85;\n  static CAMERA_LIMIT_LEFT = -400;\n  static CAMERA_LIMIT_RIGHT = 190;\n  static FLOOR = 250;\n  static BACKGROUND_IMAGES = [[\"assets/images/Backgrounds/War3/Bright/sky_sun.png\", 0], [\"assets/images/Backgrounds/War3/Bright/houses3.png\", 0.25], [\"assets/images/Backgrounds/War3/Bright/houses2.png\", 0.5], [\"assets/images/Backgrounds/War3/Bright/trees.png\", 0.75], [\"assets/images/Backgrounds/War3/Bright/house&fountain.png\", 0.75]];\n  static FOREGROUND_IMAGES = [[\"assets/images/Backgrounds/War3/Bright/fence.png\", 1], [\"assets/images/Backgrounds/War3/Bright/road.png\", 1]];\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.FLOOR = War.FLOOR;\n    this.CAMERA_LIMIT_LEFT = War.CAMERA_LIMIT_LEFT;\n    this.CAMERA_LIMIT_RIGHT = War.CAMERA_LIMIT_RIGHT;\n    let body = document.querySelector(\"body\");\n    this.backgroundImgs = [];\n    this.foregroundImgs = [];\n    for (let i = 0; i < War.BACKGROUND_IMAGES.length; i++) {\n      let img = document.createElement('img');\n      img.src = War.BACKGROUND_IMAGES[i][0];\n      img.id = `background-${i}`;\n      img.hidden = true;\n      body.appendChild(img);\n      this.backgroundImgs.push(img);\n    }\n    for (let i = 0; i < War.FOREGROUND_IMAGES.length; i++) {\n      let img = document.createElement('img');\n      img.src = War.FOREGROUND_IMAGES[i][0];\n      img.id = `foreground-${i}`;\n      img.hidden = true;\n      body.appendChild(img);\n      this.foregroundImgs.push(img);\n    }\n  }\n  drawBackground(camera_location, scale) {\n    this.ctx.resetTransform();\n    for (let i = 0; i < War.BACKGROUND_IMAGES.length; i++) {\n      let multiplier = War.BACKGROUND_IMAGES[i][1];\n      let sx = -scale * (War.BACKGROUND_OFFSET_X - camera_location * multiplier);\n      let sy = -scale * War.BACKGROUND_OFFSET_Y;\n      let sw = 720 / War.BACKGROUND_SCALE / scale;\n      let sh = 540 / War.BACKGROUND_SCALE / scale;\n      this.ctx.drawImage(this.backgroundImgs[i], sx, sy, sw, sh, 0, 0, 720, 540);\n    }\n  }\n  drawForeground(camera_location, scale) {\n    this.ctx.resetTransform();\n    for (let i = 0; i < War.FOREGROUND_IMAGES.length; i++) {\n      let multiplier = War.FOREGROUND_IMAGES[i][1];\n      let sx = -(War.BACKGROUND_OFFSET_X - camera_location * multiplier) / scale;\n      let sy = -War.BACKGROUND_OFFSET_Y / scale;\n      let sw = 720 / War.BACKGROUND_SCALE / scale;\n      let sh = 540 / War.BACKGROUND_SCALE / scale;\n      this.ctx.drawImage(this.foregroundImgs[i], sx, sy, sw, sh, 0, 0, 720, 540);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Backgrounds/war.js\n");

/***/ }),

/***/ "./src/scripts/Characters/commander.js":
/*!*********************************************!*\
  !*** ./src/scripts/Characters/commander.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Commander\": function() { return /* binding */ Commander; }\n/* harmony export */ });\n/* harmony import */ var _general_character__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./general_character */ \"./src/scripts/Characters/general_character.js\");\n\nclass Commander extends _general_character__WEBPACK_IMPORTED_MODULE_0__.GeneralCharacter {\n  // Specific constants for Commander Sprite Sheet\n  static imgSrc = \"assets/images/Sprite Sheets/Samurai_Commander/SamuraiCommanderSheet.png\";\n  static frameWidth = 128;\n  static frameHeight = 128;\n  static animationFrameInfo = {\n    idle: {\n      framenum: 0,\n      originY: 0,\n      frames: Array(5).fill(12),\n      hurtboxes: [[[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]]]\n    },\n    run: {\n      framenum: 0,\n      originY: 1,\n      frames: Array(8).fill(6),\n      hurtboxes: [[[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]]]\n    },\n    walk: {\n      framenum: 0,\n      originY: 2,\n      frames: [4, 4, 4, 4, 4, 4, 4, 4, 4]\n    },\n    jump: {\n      framenum: 0,\n      originY: 3,\n      frames: [8, 8, 10, 9, 9, 8, 8],\n      // + 11\n      hurtboxes: [[[62, 68, 14, 14], [55, 80, 22, 30], [54, 110, 32, 16]], [[64, 48, 13, 14], [56, 59, 21, 35], [53, 92, 20, 28]], [[64, 53, 13, 14], [59, 62, 20, 30], [61, 89, 28, 22]], [[65, 53, 12, 14], [58, 63, 23, 29], [61, 93, 28, 20]], [[64, 55, 14, 14], [54, 67, 22, 32], [48, 99, 23, 21]], [[65, 80, 12, 15], [53, 86, 26, 27], [57, 110, 27, 16]], [[65, 80, 12, 15], [53, 86, 26, 27], [57, 110, 26, 16]]]\n    },\n    attack1: {\n      framenum: 0,\n      originY: 4,\n      frames: [2, 2, 3, 3],\n      hurtboxes: [[[48, 60, 16, 15], [43, 73, 27, 36], [34, 108, 41, 18]], [[48, 60, 16, 15], [43, 73, 27, 36], [34, 108, 41, 18]], [[59, 60, 15, 15], [42, 72, 42, 38], [34, 108, 41, 18]], [[58, 60, 17, 15], [41, 72, 34, 36], [36, 109, 40, 18]]],\n      hitboxes: [[0, 0, 0, 0], [0, 0, 0, 0], [83, 68, 38, 35], [79, 67, 37, 11]]\n    },\n    attack2: {\n      framenum: 0,\n      originY: 6,\n      frames: [6, 8, 6, 5],\n      hurtboxes: [[[63, 65, 13, 15], [43, 79, 33, 32], [35, 109, 39, 17]], [[56, 60, 12, 15], [47, 73, 24, 40], [35, 109, 39, 17]], [[61, 62, 10, 10], [44, 72, 34, 29], [35, 100, 40, 26]], [[61, 62, 10, 10], [44, 72, 34, 29], [35, 100, 40, 26]]],\n      hitboxes: [[0, 0, 0, 0], [0, 0, 0, 0], [84, 57, 32, 41], [83, 55, 15, 17]]\n    },\n    attack3: {\n      framenum: 0,\n      originY: 5,\n      frames: [3, 6, 8, 4, 4],\n      hurtboxes: [[[51, 59, 14, 11], [51, 69, 22, 39], [44, 107, 33, 19]], [[54, 59, 13, 10], [52, 69, 20, 38], [44, 108, 31, 18]], [[54, 59, 13, 10], [52, 69, 20, 38], [44, 108, 31, 18]], [[55, 59, 13, 13], [55, 72, 22, 34], [44, 104, 36, 22]], [[72, 65, 13, 15], [51, 79, 33, 30], [45, 108, 38, 18]]],\n      hitboxes: [[31, 50, 42, 9], [43, 27, 29, 28], [56, 21, 19, 32], [87, 28, 11, 37], [87, 75, 39, 35]]\n    },\n    hurt: {\n      framenum: 0,\n      originY: 7,\n      frames: [4, 4, 4],\n      hurtboxes: [[[46, 58, 13, 14], [46, 71, 24, 37], [43, 107, 28, 19]], [[45, 57, 13, 15], [45, 71, 23, 36], [43, 103, 29, 23]], [[44, 58, 13, 14], [44, 70, 24, 37], [42, 104, 31, 22]]]\n    },\n    dead: {\n      framenum: 0,\n      originY: 8,\n      frames: [4, 4, 6, 30, 6, 1000]\n    },\n    guard: {\n      framenum: 0,\n      originY: 9,\n      frames: [2, 2]\n    }\n  };\n  static POSSIBLE_MOVES = {\n    idle: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    run: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    walk: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    jump: [\"idle\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    attack1: [\"idle\", \"hurt\", \"dead\"],\n    attack2: [\"idle\", \"hurt\", \"dead\"],\n    attack3: [\"idle\", \"hurt\", \"dead\"],\n    hurt: [\"idle\", \"hurt\", \"dead\"],\n    dead: [],\n    guard: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"]\n  };\n  static SINGLE_ACTIONS = [\"attack1\", \"attack2\", \"attack3\", \"jump\", \"hurt\"];\n\n  // Class Methods:\n  constructor(player) {\n    super(player, Commander.imgSrc, Commander.frameWidth, Commander.frameHeight, Commander.animationFrameInfo, Commander.SINGLE_ACTIONS);\n    this.possibleMoves = Commander.POSSIBLE_MOVES;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Characters/commander.js\n");

/***/ }),

/***/ "./src/scripts/Characters/general_character.js":
/*!*****************************************************!*\
  !*** ./src/scripts/Characters/general_character.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GeneralCharacter\": function() { return /* binding */ GeneralCharacter; }\n/* harmony export */ });\nclass GeneralCharacter {\n  constructor(player, src, frameWidth, frameHeight, animationFrameInfo, singleActions) {\n    let body = document.querySelector(\"body\");\n    let img = document.createElement('img');\n    img.src = src;\n    img.id = `${player.name}-sprite`;\n    img.hidden = true;\n    body.appendChild(img);\n    this.player = player;\n    this.img = document.getElementById(img.id);\n    this.frameWidth = frameWidth;\n    this.frameHeight = frameHeight;\n    this.animationFrameInfo = animationFrameInfo;\n    this.singleActions = singleActions;\n    this.framePosX = 0;\n    this.framePosY = 0;\n    this.draw = this.draw.bind(this);\n    this.currentAction = this.currentAction.bind(this);\n    this.stopAction = this.stopAction.bind(this);\n    this.animate = this.animate.bind(this);\n    this.resetHurtBoxes();\n    this.resetHitBox();\n  }\n  draw(ctx, pos, scale) {\n    ctx.translate(pos[0], pos[1]);\n    if (this.player.xFacing === -1) {\n      ctx.scale(-1, 1);\n    }\n    ctx.drawImage(this.img, this.framePosX, this.framePosY, this.frameWidth, this.frameHeight, -this.frameWidth * scale / 2, 0, this.frameWidth * scale, this.frameHeight * scale);\n    ctx.scale(scale, scale);\n    ctx.translate(-this.frameWidth / 2, 0);\n    if (this.player.renderBoxes) {\n      // render hurtboxes\n      ctx.fillStyle = \"#00ff0025\";\n      this.hurtboxes.forEach(box => {\n        ctx.fillRect(...box);\n      });\n\n      // render hitbox\n      ctx.fillStyle = \"#ff000025\";\n      this.hitboxes.forEach(box => {\n        ctx.fillRect(...box);\n      });\n    }\n  }\n  currentAction(name) {\n    // console.log(this.prototype)\n    if (this.singleActions.includes(name)) {\n      this.animate(name, true);\n    } else {\n      this.animate(name);\n    }\n  }\n  stopAction(name) {\n    // reset animation\n    this.animationFrameInfo[name].framenum = 0;\n    if (this.player.controller.heldButtons.length > 0) {\n      let arr = this.player.controller.heldButtons;\n      let button = arr[arr.length - 1];\n      switch (button) {\n        case 'LEFT':\n          this.player.vel[0] = -1 * this.player.moveSpeed;\n          this.player.currentAction = \"run\";\n          break;\n        case 'RIGHT':\n          this.player.vel[0] = this.player.moveSpeed;\n          this.player.currentAction = \"run\";\n          break;\n        default:\n          this.player.currentAction = \"idle\";\n          break;\n      }\n    } else {\n      this.player.currentAction = \"idle\";\n    }\n  }\n  animate(name) {\n    let playOnce = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    // increment frame number\n    this.animationFrameInfo[name].framenum += 1;\n    let frameNum = this.animationFrameInfo[name].framenum;\n    let totalFrames = this.animationFrameInfo[name].frames.reduce((a, b) => a + b, 0);\n    if (playOnce && frameNum >= totalFrames) {\n      this.stopAction(name);\n    } else {\n      frameNum = (frameNum + totalFrames) % totalFrames;\n\n      // define local vars\n      let sum = 0;\n      let fnum;\n      for (let i = 0; i < this.animationFrameInfo[name].frames.length; i++) {\n        let dur = this.animationFrameInfo[name].frames[i];\n        sum += dur;\n        if (sum > frameNum) {\n          fnum = i;\n          break;\n        }\n      }\n      let originY = this.animationFrameInfo[name].originY;\n\n      // update frame\n      this.framePosX = fnum * this.frameWidth;\n      this.framePosY = originY * this.frameHeight;\n\n      // update hurtboxes\n      if (this.animationFrameInfo[name].hurtboxes) {\n        this.updateHurtboxes(this.animationFrameInfo[name].hurtboxes[fnum]);\n      } else {\n        this.resetHurtBoxes();\n      }\n\n      // update hitbox\n      if (this.animationFrameInfo[name].hitboxes) {\n        this.updateHitBox(this.animationFrameInfo[name].hitboxes[fnum]);\n      } else {\n        this.resetHitBox();\n      }\n    }\n  }\n  resetHurtBoxes() {\n    this.hurtboxes = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n  }\n  updateHurtboxes(hurtboxes) {\n    this.hurtboxes = hurtboxes;\n  }\n  resetHitBox() {\n    this.hitboxes = [[0, 0, 0, 0]];\n  }\n  updateHitBox(hitbox) {\n    this.hitboxes = [hitbox];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Characters/general_character.js\n");

/***/ }),

/***/ "./src/scripts/Characters/samurai.js":
/*!*******************************************!*\
  !*** ./src/scripts/Characters/samurai.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Samurai\": function() { return /* binding */ Samurai; }\n/* harmony export */ });\n/* harmony import */ var _general_character__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./general_character */ \"./src/scripts/Characters/general_character.js\");\n\nclass Samurai extends _general_character__WEBPACK_IMPORTED_MODULE_0__.GeneralCharacter {\n  // Specific constants for Samurai Sprite Sheet\n  static imgSrc = \"assets/images/Sprite Sheets/Samurai/SpriteSheet.png\";\n  static frameWidth = 128;\n  static frameHeight = 128;\n  static animationFrameInfo = {\n    idle: {\n      framenum: 0,\n      originY: 0,\n      frames: Array(6).fill(12),\n      hurtboxes: [[[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]]]\n    },\n    run: {\n      framenum: 0,\n      originY: 1,\n      frames: Array(8).fill(6),\n      hurtboxes: [[[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]]]\n    },\n    walk: {\n      framenum: 0,\n      originY: 2,\n      frames: [4, 4, 4, 4, 4, 4, 4, 4, 4]\n    },\n    jump: {\n      framenum: 0,\n      originY: 3,\n      frames: [4, 7, 7, 7, 7, 7, 7, 7, 7],\n      hurtboxes: [[[71, 58, 17, 15], [58, 71, 27, 38], [53, 110, 36, 16]], [[60, 65, 16, 14], [57, 77, 22, 34], [54, 109, 32, 17]], [[62, 68, 14, 14], [55, 80, 22, 30], [54, 110, 32, 16]], [[64, 48, 13, 14], [56, 59, 21, 35], [53, 92, 20, 28]], [[64, 53, 13, 14], [59, 62, 20, 30], [61, 89, 28, 22]], [[65, 53, 12, 14], [58, 63, 23, 29], [61, 93, 28, 20]], [[64, 55, 14, 14], [54, 67, 22, 32], [48, 99, 23, 21]], [[65, 80, 12, 15], [53, 86, 26, 27], [57, 110, 27, 16]], [[65, 80, 12, 15], [53, 86, 26, 27], [57, 110, 26, 16]]]\n    },\n    attack1: {\n      framenum: 0,\n      originY: 4,\n      frames: [2, 2, 3, 3],\n      hurtboxes: [[[48, 60, 16, 15], [43, 73, 27, 36], [34, 108, 41, 18]], [[48, 60, 16, 15], [43, 73, 27, 36], [34, 108, 41, 18]], [[59, 60, 15, 15], [42, 72, 42, 38], [34, 108, 41, 18]], [[58, 60, 17, 15], [41, 72, 34, 36], [36, 109, 40, 18]]],\n      hitboxes: [[0, 0, 0, 0], [0, 0, 0, 0], [83, 68, 38, 35], [79, 67, 37, 11]]\n    },\n    attack2: {\n      framenum: 0,\n      originY: 6,\n      frames: [6, 8, 6, 5],\n      hurtboxes: [[[63, 65, 13, 15], [43, 79, 33, 32], [35, 109, 39, 17]], [[56, 60, 12, 15], [47, 73, 24, 40], [35, 109, 39, 17]], [[61, 62, 10, 10], [44, 72, 34, 29], [35, 100, 40, 26]], [[61, 62, 10, 10], [44, 72, 34, 29], [35, 100, 40, 26]]],\n      hitboxes: [[0, 0, 0, 0], [0, 0, 0, 0], [84, 57, 32, 41], [83, 55, 15, 17]]\n    },\n    attack3: {\n      framenum: 0,\n      originY: 5,\n      frames: [3, 6, 8, 4, 4],\n      hurtboxes: [[[51, 59, 14, 11], [51, 69, 22, 39], [44, 107, 33, 19]], [[54, 59, 13, 10], [52, 69, 20, 38], [44, 108, 31, 18]], [[54, 59, 13, 10], [52, 69, 20, 38], [44, 108, 31, 18]], [[55, 59, 13, 13], [55, 72, 22, 34], [44, 104, 36, 22]], [[72, 65, 13, 15], [51, 79, 33, 30], [45, 108, 38, 18]]],\n      hitboxes: [[31, 50, 42, 9], [43, 27, 29, 28], [56, 21, 19, 32], [87, 28, 11, 37], [87, 75, 39, 35]]\n    },\n    hurt: {\n      framenum: 0,\n      originY: 7,\n      frames: [4, 4, 4],\n      hurtboxes: [[[46, 58, 13, 14], [46, 71, 24, 37], [43, 107, 28, 19]], [[45, 57, 13, 15], [45, 71, 23, 36], [43, 103, 29, 23]], [[44, 58, 13, 14], [44, 70, 24, 37], [42, 104, 31, 22]]]\n    },\n    dead: {\n      framenum: 0,\n      originY: 8,\n      frames: [4, 4, 6, 30, 6, 1000]\n    },\n    guard: {\n      framenum: 0,\n      originY: 9,\n      frames: [2, 2]\n    }\n  };\n  static POSSIBLE_MOVES = {\n    idle: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    run: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    walk: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    jump: [\"idle\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    attack1: [\"idle\", \"hurt\", \"dead\"],\n    attack2: [\"idle\", \"hurt\", \"dead\"],\n    attack3: [\"idle\", \"hurt\", \"dead\"],\n    hurt: [\"idle\", \"hurt\", \"dead\"],\n    dead: [],\n    guard: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"]\n  };\n  static SINGLE_ACTIONS = [\"attack1\", \"attack2\", \"attack3\", \"jump\", \"hurt\"];\n\n  // Class Methods:\n  constructor(player) {\n    super(player, Samurai.imgSrc, Samurai.frameWidth, Samurai.frameHeight, Samurai.animationFrameInfo, Samurai.SINGLE_ACTIONS);\n    this.possibleMoves = Samurai.POSSIBLE_MOVES;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9DaGFyYWN0ZXJzL3NhbXVyYWkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUQ7QUFFaEQsTUFBTUMsT0FBTyxTQUFTRCxnRUFBZ0IsQ0FBQztFQUUxQztFQUNBLE9BQU9FLE1BQU0sR0FBRyxxREFBcUQ7RUFDckUsT0FBT0MsVUFBVSxHQUFHLEdBQUc7RUFDdkIsT0FBT0MsV0FBVyxHQUFHLEdBQUc7RUFFeEIsT0FBT0Msa0JBQWtCLEdBQUc7SUFDeEJDLElBQUksRUFBRTtNQUNGQyxRQUFRLEVBQUUsQ0FBQztNQUNYQyxPQUFPLEVBQUUsQ0FBQztNQUNWQyxNQUFNLEVBQUVDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLEVBQUUsQ0FBQztNQUN6QkMsU0FBUyxFQUFFLENBQ1AsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUN2RCxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQ3ZELENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFDdkQsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUN2RCxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQ3ZELENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFL0QsQ0FBQztJQUNEQyxHQUFHLEVBQUU7TUFDRE4sUUFBUSxFQUFFLENBQUM7TUFDWEMsT0FBTyxFQUFFLENBQUM7TUFDVkMsTUFBTSxFQUFFQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUNDLElBQUksQ0FBQyxDQUFDLENBQUM7TUFDeEJDLFNBQVMsRUFBRSxDQUNQLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFDdkQsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUN2RCxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQ3ZELENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFDdkQsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUN2RCxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQ3ZELENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFDdkQsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUUvRCxDQUFDO0lBQ0RFLElBQUksRUFBRTtNQUNGUCxRQUFRLEVBQUUsQ0FBQztNQUNYQyxPQUFPLEVBQUUsQ0FBQztNQUNWQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7SUFDdEMsQ0FBQztJQUNETSxJQUFJLEVBQUU7TUFDRlIsUUFBUSxFQUFFLENBQUM7TUFDWEMsT0FBTyxFQUFFLENBQUM7TUFDVkMsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7TUFDbkNHLFNBQVMsRUFBRSxDQUNQLENBQUMsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLENBQUMsRUFDOUMsQ0FBQyxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsR0FBRyxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QyxDQUFDLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQzlDLENBQUMsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLENBQUMsRUFDN0MsQ0FBQyxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsQ0FBQyxFQUM3QyxDQUFDLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQzdDLENBQUMsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLENBQUMsRUFDN0MsQ0FBQyxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsR0FBRyxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QyxDQUFDLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRXRELENBQUM7SUFDREksT0FBTyxFQUFFO01BQ0xULFFBQVEsRUFBRSxDQUFDO01BQ1hDLE9BQU8sRUFBRSxDQUFDO01BQ1ZDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztNQUNwQkcsU0FBUyxFQUFFLENBQ1AsQ0FBQyxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsR0FBRyxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QyxDQUFDLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQzlDLENBQUMsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLENBQUMsRUFDOUMsQ0FBQyxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsR0FBRyxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsQ0FBQyxDQUNqRDtNQUNESyxRQUFRLEVBQUUsQ0FDTixDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUNULENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQ1QsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFDYixDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQztJQUVyQixDQUFDO0lBQ0RDLE9BQU8sRUFBRTtNQUNMWCxRQUFRLEVBQUUsQ0FBQztNQUNYQyxPQUFPLEVBQUUsQ0FBQztNQUNWQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7TUFDcEJHLFNBQVMsRUFBRSxDQUNQLENBQUMsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLENBQUMsRUFDOUMsQ0FBQyxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsR0FBRyxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QyxDQUFDLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQzlDLENBQUMsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLENBQUMsQ0FDakQ7TUFDREssUUFBUSxFQUFFLENBQ04sQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFDVCxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUNULENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQ2IsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUM7SUFFckIsQ0FBQztJQUNERSxPQUFPLEVBQUU7TUFDTFosUUFBUSxFQUFFLENBQUM7TUFDWEMsT0FBTyxFQUFFLENBQUM7TUFDVkMsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztNQUN2QkcsU0FBUyxFQUFFLENBQ1AsQ0FBQyxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsR0FBRyxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QyxDQUFDLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQzlDLENBQUMsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLENBQUMsRUFDOUMsQ0FBQyxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsR0FBRyxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsQ0FBQyxFQUM5QyxDQUFDLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxDQUFDLENBQ2pEO01BQ0RLLFFBQVEsRUFBRSxDQUNOLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDLEVBQ1osQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUMsRUFDYixDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUNiLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQ2IsQ0FBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLENBQUM7SUFFckIsQ0FBQztJQUNERyxJQUFJLEVBQUU7TUFDRmIsUUFBUSxFQUFFLENBQUM7TUFDWEMsT0FBTyxFQUFFLENBQUM7TUFDVkMsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUM7TUFDZkcsU0FBUyxFQUFFLENBQ1AsQ0FBQyxDQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDLEVBQUUsRUFBQyxFQUFFLEVBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxF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azovL2pzcHJvamVjdC8uL3NyYy9zY3JpcHRzL0NoYXJhY3RlcnMvc2FtdXJhaS5qcz9lMmY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdlbmVyYWxDaGFyYWN0ZXIgfSBmcm9tIFwiLi9nZW5lcmFsX2NoYXJhY3RlclwiO1xuXG5leHBvcnQgY2xhc3MgU2FtdXJhaSBleHRlbmRzIEdlbmVyYWxDaGFyYWN0ZXIge1xuXG4gICAgLy8gU3BlY2lmaWMgY29uc3RhbnRzIGZvciBTYW11cmFpIFNwcml0ZSBTaGVldFxuICAgIHN0YXRpYyBpbWdTcmMgPSBcImFzc2V0cy9pbWFnZXMvU3ByaXRlIFNoZWV0cy9TYW11cmFpL1Nwcml0ZVNoZWV0LnBuZ1wiO1xuICAgIHN0YXRpYyBmcmFtZVdpZHRoID0gMTI4O1xuICAgIHN0YXRpYyBmcmFtZUhlaWdodCA9IDEyODtcblxuICAgIHN0YXRpYyBhbmltYXRpb25GcmFtZUluZm8gPSB7XG4gICAgICAgIGlkbGU6IHtcbiAgICAgICAgICAgIGZyYW1lbnVtOiAwLFxuICAgICAgICAgICAgb3JpZ2luWTogMCxcbiAgICAgICAgICAgIGZyYW1lczogQXJyYXkoNikuZmlsbCgxMiksXG4gICAgICAgICAgICBodXJ0Ym94ZXM6IFtcbiAgICAgICAgICAgICAgICBbWzU0LCA1NywgMTgsIDE0XSwgWzUxLCA3MSwgMjcsIDQwXSwgWzUyLCAxMDksIDI2LCAxN11dLFxuICAgICAgICAgICAgICAgIFtbNTQsIDU3LCAxOCwgMTRdLCBbNTEsIDcxLCAyNywgNDBdLCBbNTIsIDEwOSwgMjYsIDE3XV0sXG4gICAgICAgICAgICAgICAgW1s1NCwgNTcsIDE4LCAxNF0sIFs1MSwgNzEsIDI3LCA0MF0sIFs1MiwgMTA5LCAyNiwgMTddXSxcbiAgICAgICAgICAgICAgICBbWzU0LCA1NywgMTgsIDE0XSwgWzUxLCA3MSwgMjcsIDQwXSwgWzUyLCAxMDksIDI2LCAxN11dLFxuICAgICAgICAgICAgICAgIFtbNTQsIDU3LCAxOCwgMTRdLCBbNTEsIDcxLCAyNywgNDBdLCBbNTIsIDEwOSwgMjYsIDE3XV0sXG4gICAgICAgICAgICAgICAgW1s1NCwgNTcsIDE4LCAxNF0sIFs1MSwgNzEsIDI3LCA0MF0sIFs1MiwgMTA5LCAyNiwgMTddXVxuICAgICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICBydW46IHtcbiAgICAgICAgICAgIGZyYW1lbnVtOiAwLFxuICAgICAgICAgICAgb3JpZ2luWTogMSxcbiAgICAgICAgICAgIGZyYW1lczogQXJyYXkoOCkuZmlsbCg2KSxcbiAgICAgICAgICAgIGh1cnRib3hlczogW1xuICAgICAgICAgICAgICAgIFtbNzksIDYwLCAxNSwgMTVdLCBbNTgsIDY5LCAzMCwgNDJdLCBbNTcsIDEwNCwgMjMsIDIyXV0sXG4gICAgICAgICAgICAgICAgW1s3OSwgNjAsIDE1LCAxNV0sIFs1OCwgNjksIDMwLCA0Ml0sIFs1NywgMTA0LCAyMywgMjJdXSxcbiAgICAgICAgICAgICAgICBbWzc5LCA2MCwgMTUsIDE1XSwgWzU4LCA2OSwgMzAsIDQyXSwgWzU1LCAxMDQsIDMyLCAyMl1dLFxuICAgICAgICAgICAgICAgIFtbNzksIDYwLCAxNSwgMTVdLCBbNTgsIDY5LCAzMCwgNDJdLCBbNTMsIDEwNCwgMzcsIDIyXV0sXG4gICAgICAgICAgICAgICAgW1s3OSwgNjAsIDE1LCAxNV0sIFs1OCwgNjksIDMwLCA0Ml0sIFs1NywgMTA0LCAyMywgMjJdXSxcbiAgICAgICAgICAgICAgICBbWzc5LCA2MCwgMTUsIDE1XSwgWzU4LCA2OSwgMzAsIDQyXSwgWzU3LCAxMDQsIDIzLCAyMl1dLFxuICAgICAgICAgICAgICAgIFtbNzksIDYwLCAxNSwgMTVdLCBbNTgsIDY5LCAzMCwgNDJdLCBbNTUsIDEwNCwgMzIsIDIyXV0sXG4gICAgICAgICAgICAgICAgW1s3OSwgNjAsIDE1LCAxNV0sIFs1OCwgNjksIDMwLCA0Ml0sIFs1MywgMTA0LCAzNywgMjJdXVxuICAgICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICB3YWxrOiB7XG4gICAgICAgICAgICBmcmFtZW51bTogMCxcbiAgICAgICAgICAgIG9yaWdpblk6IDIsXG4gICAgICAgICAgICBmcmFtZXM6IFs0LCA0LCA0LCA0LCA0LCA0LCA0LCA0LCA0XVxuICAgICAgICB9LFxuICAgICAgICBqdW1wOiB7XG4gICAgICAgICAgICBmcmFtZW51bTogMCxcbiAgICAgICAgICAgIG9yaWdpblk6IDMsXG4gICAgICAgICAgICBmcmFtZXM6IFs0LCA3LCA3LCA3LCA3LCA3LCA3LCA3LCA3XSxcbiAgICAgICAgICAgIGh1cnRib3hlczogW1xuICAgICAgICAgICAgICAgIFtbNzEsNTgsMTcsMTVdLCBbNTgsNzEsMjcsMzhdLCBbNTMsMTEwLDM2LDE2XV0sXG4gICAgICAgICAgICAgICAgW1s2MCw2NSwxNiwxNF0sIFs1Nyw3NywyMiwzNF0sIFs1NCwxMDksMzIsMTddXSxcbiAgICAgICAgICAgICAgICBbWzYyLDY4LDE0LDE0XSwgWzU1LDgwLDIyLDMwXSwgWzU0LDExMCwzMiwxNl1dLFxuICAgICAgICAgICAgICAgIFtbNjQsNDgsMTMsMTRdLCBbNTYsNTksMjEsMzVdLCBbNTMsOTIsMjAsMjhdXSxcbiAgICAgICAgICAgICAgICBbWzY0LDUzLDEzLDE0XSwgWzU5LDYyLDIwLDMwXSwgWzYxLDg5LDI4LDIyXV0sXG4gICAgICAgICAgICAgICAgW1s2NSw1MywxMiwxNF0sIFs1OCw2MywyMywyOV0sIFs2MSw5MywyOCwyMF1dLFxuICAgICAgICAgICAgICAgIFtbNjQsNTUsMTQsMTRdLCBbNTQsNjcsMjIsMzJdLCBbNDgsOTksMjMsMjFdXSxcbiAgICAgICAgICAgICAgICBbWzY1LDgwLDEyLDE1XSwgWzUzLDg2LDI2LDI3XSwgWzU3LDExMCwyNywxNl1dLFxuICAgICAgICAgICAgICAgIFtbNjUsODAsMTIsMTVdLCBbNTMsODYsMjYsMjddLCBbNTcsMTEwLDI2LDE2XV1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfSxcbiAgICAgICAgYXR0YWNrMToge1xuICAgICAgICAgICAgZnJhbWVudW06IDAsXG4gICAgICAgICAgICBvcmlnaW5ZOiA0LFxuICAgICAgICAgICAgZnJhbWVzOiBbMiwgMiwgMywgM10sXG4gICAgICAgICAgICBodXJ0Ym94ZXM6IFtcbiAgICAgICAgICAgICAgICBbWzQ4LDYwLDE2LDE1XSwgWzQzLDczLDI3LDM2XSwgWzM0LDEwOCw0MSwxOF1dLFxuICAgICAgICAgICAgICAgIFtbNDgsNjAsMTYsMTVdLCBbNDMsNzMsMjcsMzZdLCBbMzQsMTA4LDQxLDE4XV0sXG4gICAgICAgICAgICAgICAgW1s1OSw2MCwxNSwxNV0sIFs0Miw3Miw0MiwzOF0sIFszNCwxMDgsNDEsMThdXSxcbiAgICAgICAgICAgICAgICBbWzU4LDYwLDE3LDE1XSwgWzQxLDcyLDM0LDM2XSwgWzM2LDEwOSw0MCwxOF1dXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgaGl0Ym94ZXM6IFtcbiAgICAgICAgICAgICAgICBbMCwwLDAsMF0sXG4gICAgICAgICAgICAgICAgWzAsMCwwLDBdLFxuICAgICAgICAgICAgICAgIFs4Myw2OCwzOCwzNV0sXG4gICAgICAgICAgICAgICAgWzc5LDY3LDM3LDExXVxuICAgICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICBhdHRhY2syOiB7XG4gICAgICAgICAgICBmcmFtZW51bTogMCxcbiAgICAgICAgICAgIG9yaWdpblk6IDYsXG4gICAgICAgICAgICBmcmFtZXM6IFs2LCA4LCA2LCA1XSxcbiAgICAgICAgICAgIGh1cnRib3hlczogW1xuICAgICAgICAgICAgICAgIFtbNjMsNjUsMTMsMTVdLCBbNDMsNzksMzMsMzJdLCBbMzUsMTA5LDM5LDE3XV0sXG4gICAgICAgICAgICAgICAgW1s1Niw2MCwxMiwxNV0sIFs0Nyw3MywyNCw0MF0sIFszNSwxMDksMzksMTddXSxcbiAgICAgICAgICAgICAgICBbWzYxLDYyLDEwLDEwXSwgWzQ0LDcyLDM0LDI5XSwgWzM1LDEwMCw0MCwyNl1dLFxuICAgICAgICAgICAgICAgIFtbNjEsNjIsMTAsMTBdLCBbNDQsNzIsMzQsMjldLCBbMzUsMTAwLDQwLDI2XV1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBoaXRib3hlczogW1xuICAgICAgICAgICAgICAgIFswLDAsMCwwXSxcbiAgICAgICAgICAgICAgICBbMCwwLDAsMF0sXG4gICAgICAgICAgICAgICAgWzg0LDU3LDMyLDQxXSxcbiAgICAgICAgICAgICAgICBbODMsNTUsMTUsMTddXG4gICAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIGF0dGFjazM6IHtcbiAgICAgICAgICAgIGZyYW1lbnVtOiAwLFxuICAgICAgICAgICAgb3JpZ2luWTogNSxcbiAgICAgICAgICAgIGZyYW1lczogWzMsIDYsIDgsIDQsIDRdLFxuICAgICAgICAgICAgaHVydGJveGVzOiBbXG4gICAgICAgICAgICAgICAgW1s1MSw1OSwxNCwxMV0sIFs1MSw2OSwyMiwzOV0sIFs0NCwxMDcsMzMsMTldXSxcbiAgICAgICAgICAgICAgICBbWzU0LDU5LDEzLDEwXSwgWzUyLDY5LDIwLDM4XSwgWzQ0LDEwOCwzMSwxOF1dLFxuICAgICAgICAgICAgICAgIFtbNTQsNTksMTMsMTBdLCBbNTIsNjksMjAsMzhdLCBbNDQsMTA4LDMxLDE4XV0sXG4gICAgICAgICAgICAgICAgW1s1NSw1OSwxMywxM10sIFs1NSw3MiwyMiwzNF0sIFs0NCwxMDQsMzYsMjJdXSxcbiAgICAgICAgICAgICAgICBbWzcyLDY1LDEzLDE1XSwgWzUxLDc5LDMzLDMwXSwgWzQ1LDEwOCwzOCwxOF1dXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgaGl0Ym94ZXM6IFtcbiAgICAgICAgICAgICAgICBbMzEsNTAsNDIsOV0sXG4gICAgICAgICAgICAgICAgWzQzLDI3LDI5LDI4XSxcbiAgICAgICAgICAgICAgICBbNTYsMjEsMTksMzJdLFxuICAgICAgICAgICAgICAgIFs4NywyOCwxMSwzN10sXG4gICAgICAgICAgICAgICAgWzg3LDc1LDM5LDM1XVxuICAgICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICBodXJ0OiB7XG4gICAgICAgICAgICBmcmFtZW51bTogMCxcbiAgICAgICAgICAgIG9yaWdpblk6IDcsXG4gICAgICAgICAgICBmcmFtZXM6IFs0LDQsNF0sXG4gICAgICAgICAgICBodXJ0Ym94ZXM6IFtcbiAgICAgICAgICAgICAgICBbWzQ2LDU4LDEzLDE0XSwgWzQ2LDcxLDI0LDM3XSwgWzQzLDEwNywyOCwxOV1dLFxuICAgICAgICAgICAgICAgIFtbNDUsNTcsMTMsMTVdLCBbNDUsNzEsMjMsMzZdLCBbNDMsMTAzLDI5LDIzXV0sXG4gICAgICAgICAgICAgICAgW1s0NCw1OCwxMywxNF0sIFs0NCw3MCwyNCwzN10sIFs0MiwxMDQsMzEsMjJdXVxuICAgICAgICAgICAgXVxuICAgICAgICB9LFxuICAgICAgICBkZWFkOiB7XG4gICAgICAgICAgICBmcmFtZW51bTogMCxcbiAgICAgICAgICAgIG9yaWdpblk6IDgsXG4gICAgICAgICAgICBmcmFtZXM6IFs0LDQsNiwzMCw2LDEwMDBdXG4gICAgICAgIH0sXG4gICAgICAgIGd1YXJkOiB7XG4gICAgICAgICAgICBmcmFtZW51bTogMCxcbiAgICAgICAgICAgIG9yaWdpblk6IDksXG4gICAgICAgICAgICBmcmFtZXM6IFsyLDJdXG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgc3RhdGljIFBPU1NJQkxFX01PVkVTID0ge1xuICAgICAgICBpZGxlOiAgIFtcImlkbGVcIiwgXCJydW5cIiwgXCJ3YWxrXCIsIFwianVtcFwiLCBcImF0dGFjazFcIiwgXCJhdHRhY2syXCIsIFwiYXR0YWNrM1wiLCBcImh1cnRcIiwgXCJkZWFkXCIsIFwiZ3VhcmRcIl0sXG4gICAgICAgIHJ1bjogICAgW1wiaWRsZVwiLCBcInJ1blwiLCBcIndhbGtcIiwgXCJqdW1wXCIsIFwiYXR0YWNrMVwiLCBcImF0dGFjazJcIiwgXCJhdHRhY2szXCIsIFwiaHVydFwiLCBcImRlYWRcIiwgXCJndWFyZFwiXSxcbiAgICAgICAgd2FsazogICBbXCJpZGxlXCIsIFwicnVuXCIsIFwid2Fsa1wiLCBcImp1bXBcIiwgXCJhdHRhY2sxXCIsIFwiYXR0YWNrMlwiLCBcImF0dGFjazNcIiwgXCJodXJ0XCIsIFwiZGVhZFwiLCBcImd1YXJkXCJdLFxuICAgICAgICBqdW1wOiAgIFtcImlkbGVcIiwgXCJhdHRhY2sxXCIsIFwiYXR0YWNrMlwiLCBcImF0dGFjazNcIiwgXCJodXJ0XCIsIFwiZGVhZFwiLCBcImd1YXJkXCJdLFxuICAgICAgICBhdHRhY2sxOiBbXCJpZGxlXCIsIFwiaHVydFwiLCBcImRlYWRcIl0sXG4gICAgICAgIGF0dGFjazI6IFtcImlkbGVcIiwgXCJodXJ0XCIsIFwiZGVhZFwiXSxcbiAgICAgICAgYXR0YWNrMzogW1wiaWRsZVwiLCBcImh1cnRcIiwgXCJkZWFkXCJdLFxuICAgICAgICBodXJ0OiAgIFtcImlkbGVcIiwgXCJodXJ0XCIsIFwiZGVhZFwiXSxcbiAgICAgICAgZGVhZDogICBbXSxcbiAgICAgICAgZ3VhcmQ6ICBbXCJpZGxlXCIsIFwicnVuXCIsIFwid2Fsa1wiLCBcImp1bXBcIiwgXCJhdHRhY2sxXCIsIFwiYXR0YWNrMlwiLCBcImF0dGFjazNcIiwgXCJodXJ0XCIsIFwiZGVhZFwiLCBcImd1YXJkXCJdLFxuICAgIH07XG5cbiAgICBzdGF0aWMgU0lOR0xFX0FDVElPTlMgPSBbXCJhdHRhY2sxXCIsIFwiYXR0YWNrMlwiLCBcImF0dGFjazNcIiwgXCJqdW1wXCIsIFwiaHVydFwiXTtcblxuICAgIC8vIENsYXNzIE1ldGhvZHM6XG4gICAgY29uc3RydWN0b3IocGxheWVyKSB7XG4gICAgICAgIHN1cGVyKHBsYXllcixcbiAgICAgICAgICAgIFNhbXVyYWkuaW1nU3JjLFxuICAgICAgICAgICAgU2FtdXJhaS5mcmFtZVdpZHRoLFxuICAgICAgICAgICAgU2FtdXJhaS5mcmFtZUhlaWdodCxcbiAgICAgICAgICAgIFNhbXVyYWkuYW5pbWF0aW9uRnJhbWVJbmZvLFxuICAgICAgICAgICAgU2FtdXJhaS5TSU5HTEVfQUNUSU9OUyk7XG4gICAgICAgIHRoaXMucG9zc2libGVNb3ZlcyA9IFNhbXVyYWkuUE9TU0lCTEVfTU9WRVM7XG4gICAgfVxuXG59XG4iXSwibmFtZXMiOlsiR2VuZXJhbENoYXJhY3RlciIsIlNhbXVyYWkiLCJpbWdTcmMiLCJmcmFtZVdpZHRoIiwiZnJhbWVIZWlnaHQiLCJhbmltYXRpb25GcmFtZUluZm8iLCJpZGxlIiwiZnJhbWVudW0iLCJvcmlnaW5ZIiwiZnJhbWVzIiwiQXJyYXkiLCJmaWxsIiwiaHVydGJveGVzIiwicnVuIiwid2FsayIsImp1bXAiLCJhdHRhY2sxIiwiaGl0Ym94ZXMiLCJhdHRhY2syIiwiYXR0YWNrMyIsImh1cnQiLCJkZWFkIiwiZ3VhcmQiLCJQT1NTSUJMRV9NT1ZFUyIsIlNJTkdMRV9BQ1RJT05TIiwiY29uc3RydWN0b3IiLCJwbGF5ZXIiLCJwb3NzaWJsZU1vdmVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/Characters/samurai.js\n");

/***/ }),

/***/ "./src/scripts/computer_controller.js":
/*!********************************************!*\
  !*** ./src/scripts/computer_controller.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComputerController\": function() { return /* binding */ ComputerController; }\n/* harmony export */ });\n/* harmony import */ var _controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./controller */ \"./src/scripts/controller.js\");\n\nclass ComputerController extends _controller__WEBPACK_IMPORTED_MODULE_0__.Controller {\n  constructor(player, option, ctx, opponent) {\n    let difficulty = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6;\n    super(player, option, ctx, false);\n    this.player = player;\n    this.opponent = opponent;\n    this.chooseAction = this.chooseAction.bind(this);\n    this.takeAction = this.takeAction.bind(this);\n    this.pressButton = this.pressButton.bind(this);\n    this.releaseButton = this.releaseButton.bind(this);\n    this.updateDistanceFromOpponent = this.updateDistanceFromOpponent.bind(this);\n\n    // difficulty scales the update rate of actions\n    this.difficulty = difficulty;\n    this.buttonReleaseDelay = 250 + (10 - this.difficulty) * 250;\n    this.relPos = [1000, 1000];\n  }\n  startController() {\n    setInterval(this.chooseAction, 100 + (10 - this.difficulty) * 15);\n  }\n  assignOpponent(opponent) {\n    this.opponent = opponent;\n    if (this.opponent && this.player) {\n      this.startController();\n    }\n  }\n  chooseAction() {\n    this.updateDistanceFromOpponent();\n    if (Math.abs(this.relPos[0]) > 200 && Math.random() * 10 < this.difficulty) {\n      this.takeAction(\"run\");\n    } else {\n      if (Math.random() * 10 < this.difficulty) {\n        this.takeAction(\"attack\");\n      }\n      if (Math.abs(this.relPos[1]) > 20) {\n        if (Math.random() * 10 < this.difficulty) {\n          this.takeAction(\"jump\");\n        }\n      } else {\n        this.takeAction(\"idle\");\n      }\n    }\n  }\n  takeAction(action) {\n    if (action === \"attack\") {\n      let choices = [\"B\", \"Y\", \"X\"];\n      if (!this.heldButtons.includes(\"B\") && !this.heldButtons.includes(\"Y\") && !this.heldButtons.includes(\"X\")) {\n        let choice = choices[Math.floor(Math.random() * choices.length)];\n        this.pressButton(choice);\n        setTimeout(() => this.releaseButton(choice), this.buttonReleaseDelay);\n      }\n    } else if (action === \"run\") {\n      if (this.relPos[0] > 0) {\n        this.releaseButton(\"LEFT\");\n        if (this.player.vel[0] === 0) {\n          this.releaseButton(\"RIGHT\");\n        }\n        this.pressButton(\"RIGHT\");\n      } else if (this.relPos[0] < 0) {\n        this.releaseButton(\"RIGHT\");\n        if (this.player.vel[0] === 0) {\n          this.releaseButton(\"LEFT\");\n        }\n        this.pressButton(\"LEFT\");\n      }\n    } else if (action === \"jump\") {\n      this.pressButton(\"UP\");\n      setTimeout(() => this.releaseButton(\"UP\"), this.buttonReleaseDelay);\n    } else if (action === \"idle\") {\n      while (this.heldButtons.length > 0) {\n        this.releaseButton(this.heldButtons[0]);\n      }\n    }\n  }\n  pressButton(button) {\n    if (!this.heldButtons.includes(button)) {\n      this.heldButtons.push(button);\n      if (this.player) {\n        this.player.handleButtonPress(button);\n      }\n    }\n  }\n  releaseButton(button) {\n    if (this.heldButtons.indexOf(button) !== -1) {\n      this.heldButtons.splice(this.heldButtons.indexOf(button), 1);\n      if (this.player) {\n        this.player.handleButtonRelease(button);\n      }\n    }\n  }\n  updateDistanceFromOpponent() {\n    if (this.player && this.opponent) {\n      this.relPos[0] = this.opponent.pos[0] - this.player.pos[0];\n      this.relPos[1] = this.opponent.pos[1] - this.player.pos[1];\n    } else {\n      console.log(\"Missing player or opponent\");\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDTixXQUFXLENBQUNVLE1BQU0sQ0FBQyxJQUFJLENBQUNWLFdBQVcsQ0FBQ1MsT0FBTyxDQUFDSCxNQUFNLENBQUMsRUFBQyxDQUFDLENBQUM7TUFDM0QsSUFBSSxJQUFJLENBQUM5QixNQUFNLEVBQUU7UUFDYixJQUFJLENBQUNBLE1BQU0sQ0FBQ21DLG1CQUFtQixDQUFDTCxNQUFNLENBQUM7TUFDM0M7SUFDSjtFQUNKO0VBRUFqQiwwQkFBMEJBLENBQUEsRUFBRTtJQUN4QixJQUFJLElBQUksQ0FBQ2IsTUFBTSxJQUFJLElBQUksQ0FBQ0csUUFBUSxFQUFFO01BQzlCLElBQUksQ0FBQ1ksTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQ1osUUFBUSxDQUFDaUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQ3BDLE1BQU0sQ0FBQ29DLEdBQUcsQ0FBQyxDQUFDLENBQUM7TUFDMUQsSUFBSSxDQUFDckIsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQ1osUUFBUSxDQUFDaUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQ3BDLE1BQU0sQ0FBQ29DLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDOUQsQ0FBQyxNQUFNO01BQ0hDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDRCQUE0QixDQUFDO0lBQzdDO0VBQ0o7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzcHJvamVjdC8uL3NyYy9zY3JpcHRzL2NvbXB1dGVyX2NvbnRyb2xsZXIuanM/YzFiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb250cm9sbGVyIH0gZnJvbSBcIi4vY29udHJvbGxlclwiO1xuXG5leHBvcnQgY2xhc3MgQ29tcHV0ZXJDb250cm9sbGVyIGV4dGVuZHMgQ29udHJvbGxlciB7XG4gICAgY29uc3RydWN0b3IgKHBsYXllciwgb3B0aW9uLCBjdHgsIG9wcG9uZW50LCBkaWZmaWN1bHR5ID0gNil7XG4gICAgICAgIHN1cGVyKHBsYXllciwgb3B0aW9uLCBjdHgsIGZhbHNlKTtcblxuICAgICAgICB0aGlzLnBsYXllciA9IHBsYXllcjtcbiAgICAgICAgdGhpcy5vcHBvbmVudCA9IG9wcG9uZW50O1xuXG4gICAgICAgIHRoaXMuY2hvb3NlQWN0aW9uID0gdGhpcy5jaG9vc2VBY3Rpb24uYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy50YWtlQWN0aW9uID0gdGhpcy50YWtlQWN0aW9uLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMucHJlc3NCdXR0b24gPSB0aGlzLnByZXNzQnV0dG9uLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMucmVsZWFzZUJ1dHRvbiA9IHRoaXMucmVsZWFzZUJ1dHRvbi5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnVwZGF0ZURpc3RhbmNlRnJvbU9wcG9uZW50ID0gdGhpcy51cGRhdGVEaXN0YW5jZUZyb21PcHBvbmVudC5iaW5kKHRoaXMpO1xuXG4gICAgICAgIC8vIGRpZmZpY3VsdHkgc2NhbGVzIHRoZSB1cGRhdGUgcmF0ZSBvZiBhY3Rpb25zXG4gICAgICAgIHRoaXMuZGlmZmljdWx0eSA9IGRpZmZpY3VsdHk7XG4gICAgICAgIHRoaXMuYnV0dG9uUmVsZWFzZURlbGF5ID0gMjUwICsgKDEwLXRoaXMuZGlmZmljdWx0eSkqMjUwO1xuXG4gICAgICAgIHRoaXMucmVsUG9zID0gWzEwMDAsMTAwMF07XG4gICAgfVxuXG4gICAgc3RhcnRDb250cm9sbGVyKCkge1xuICAgICAgICBzZXRJbnRlcnZhbCh0aGlzLmNob29zZUFjdGlvbiwgMTAwICsgKDEwLXRoaXMuZGlmZmljdWx0eSkgKiAxNSk7XG4gICAgfVxuXG4gICAgYXNzaWduT3Bwb25lbnQob3Bwb25lbnQpIHtcbiAgICAgICAgdGhpcy5vcHBvbmVudCA9IG9wcG9uZW50O1xuICAgICAgICBpZiAodGhpcy5vcHBvbmVudCAmJiB0aGlzLnBsYXllcikge1xuICAgICAgICAgICAgdGhpcy5zdGFydENvbnRyb2xsZXIoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNob29zZUFjdGlvbigpIHtcbiAgICAgICAgdGhpcy51cGRhdGVEaXN0YW5jZUZyb21PcHBvbmVudCgpO1xuICAgICAgICBpZiAoTWF0aC5hYnModGhpcy5yZWxQb3NbMF0pID4gMjAwICYmIE1hdGgucmFuZG9tKCkqMTAgPCB0aGlzLmRpZmZpY3VsdHkpe1xuICAgICAgICAgICAgdGhpcy50YWtlQWN0aW9uKFwicnVuXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKE1hdGgucmFuZG9tKCkqMTAgPCB0aGlzLmRpZmZpY3VsdHkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnRha2VBY3Rpb24oXCJhdHRhY2tcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoTWF0aC5hYnModGhpcy5yZWxQb3NbMV0pID4gMjApIHtcbiAgICAgICAgICAgICAgICBpZiAoTWF0aC5yYW5kb20oKSoxMCA8IHRoaXMuZGlmZmljdWx0eSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRha2VBY3Rpb24oXCJqdW1wXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy50YWtlQWN0aW9uKFwiaWRsZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHRha2VBY3Rpb24oYWN0aW9uKXtcbiAgICAgICAgaWYgKGFjdGlvbiA9PT0gXCJhdHRhY2tcIikge1xuICAgICAgICAgICAgbGV0IGNob2ljZXMgPSBbXCJCXCIsIFwiWVwiLCBcIlhcIl07XG4gICAgICAgICAgICBpZiAoIXRoaXMuaGVsZEJ1dHRvbnMuaW5jbHVkZXMoXCJCXCIpICYmXG4gICAgICAgICAgICAgICAgICAgICF0aGlzLmhlbGRCdXR0b25zLmluY2x1ZGVzKFwiWVwiKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgIXRoaXMuaGVsZEJ1dHRvbnMuaW5jbHVkZXMoXCJYXCIpKSB7XG4gICAgICAgICAgICAgICAgbGV0IGNob2ljZSA9IGNob2ljZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKmNob2ljZXMubGVuZ3RoKV07XG4gICAgICAgICAgICAgICAgdGhpcy5wcmVzc0J1dHRvbihjaG9pY2UpO1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5yZWxlYXNlQnV0dG9uKGNob2ljZSksIHRoaXMuYnV0dG9uUmVsZWFzZURlbGF5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChhY3Rpb24gPT09IFwicnVuXCIpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnJlbFBvc1swXSA+IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbGVhc2VCdXR0b24oXCJMRUZUXCIpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnBsYXllci52ZWxbMF0gPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWxlYXNlQnV0dG9uKFwiUklHSFRcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMucHJlc3NCdXR0b24oXCJSSUdIVFwiKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5yZWxQb3NbMF0gPCAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZWxlYXNlQnV0dG9uKFwiUklHSFRcIik7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucGxheWVyLnZlbFswXSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbGVhc2VCdXR0b24oXCJMRUZUXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnByZXNzQnV0dG9uKFwiTEVGVFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChhY3Rpb24gPT09IFwianVtcFwiKSB7XG4gICAgICAgICAgICB0aGlzLnByZXNzQnV0dG9uKFwiVVBcIik7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMucmVsZWFzZUJ1dHRvbihcIlVQXCIpLCB0aGlzLmJ1dHRvblJlbGVhc2VEZWxheSk7XG4gICAgICAgIH0gZWxzZSBpZiAoYWN0aW9uID09PSBcImlkbGVcIikge1xuICAgICAgICAgICAgd2hpbGUgKHRoaXMuaGVsZEJ1dHRvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVsZWFzZUJ1dHRvbih0aGlzLmhlbGRCdXR0b25zWzBdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByZXNzQnV0dG9uKGJ1dHRvbikge1xuICAgICAgICBpZiAoIXRoaXMuaGVsZEJ1dHRvbnMuaW5jbHVkZXMoYnV0dG9uKSkge1xuICAgICAgICAgICAgdGhpcy5oZWxkQnV0dG9ucy5wdXNoKGJ1dHRvbik7XG4gICAgICAgICAgICBpZiAodGhpcy5wbGF5ZXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXllci5oYW5kbGVCdXR0b25QcmVzcyhidXR0b24pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVsZWFzZUJ1dHRvbihidXR0b24pe1xuICAgICAgICBpZiAodGhpcy5oZWxkQnV0dG9ucy5pbmRleE9mKGJ1dHRvbikgIT09IC0xKSB7XG4gICAgICAgICAgICB0aGlzLmhlbGRCdXR0b25zLnNwbGljZSh0aGlzLmhlbGRCdXR0b25zLmluZGV4T2YoYnV0dG9uKSwxKTtcbiAgICAgICAgICAgIGlmICh0aGlzLnBsYXllcikge1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyLmhhbmRsZUJ1dHRvblJlbGVhc2UoYnV0dG9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHVwZGF0ZURpc3RhbmNlRnJvbU9wcG9uZW50KCl7XG4gICAgICAgIGlmICh0aGlzLnBsYXllciAmJiB0aGlzLm9wcG9uZW50KSB7XG4gICAgICAgICAgICB0aGlzLnJlbFBvc1swXSA9IHRoaXMub3Bwb25lbnQucG9zWzBdIC0gdGhpcy5wbGF5ZXIucG9zWzBdO1xuICAgICAgICAgICAgdGhpcy5yZWxQb3NbMV0gPSB0aGlzLm9wcG9uZW50LnBvc1sxXSAtIHRoaXMucGxheWVyLnBvc1sxXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTWlzc2luZyBwbGF5ZXIgb3Igb3Bwb25lbnRcIilcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJDb250cm9sbGVyIiwiQ29tcHV0ZXJDb250cm9sbGVyIiwiY29uc3RydWN0b3IiLCJwbGF5ZXIiLCJvcHRpb24iLCJjdHgiLCJvcHBvbmVudCIsImRpZmZpY3VsdHkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJjaG9vc2VBY3Rpb24iLCJiaW5kIiwidGFrZUFjdGlvbiIsInByZXNzQnV0dG9uIiwicmVsZWFzZUJ1dHRvbiIsInVwZGF0ZURpc3RhbmNlRnJvbU9wcG9uZW50IiwiYnV0dG9uUmVsZWFzZURlbGF5IiwicmVsUG9zIiwic3RhcnRDb250cm9sbGVyIiwic2V0SW50ZXJ2YWwiLCJhc3NpZ25PcHBvbmVudCIsIk1hdGgiLCJhYnMiLCJyYW5kb20iLCJhY3Rpb24iLCJjaG9pY2VzIiwiaGVsZEJ1dHRvbnMiLCJpbmNsdWRlcyIsImNob2ljZSIsImZsb29yIiwic2V0VGltZW91dCIsInZlbCIsImJ1dHRvbiIsInB1c2giLCJoYW5kbGVCdXR0b25QcmVzcyIsImluZGV4T2YiLCJzcGxpY2UiLCJoYW5kbGVCdXR0b25SZWxlYXNlIiwicG9zIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/computer_controller.js\n");

/***/ }),

/***/ "./src/scripts/controller.js":
/*!***********************************!*\
  !*** ./src/scripts/controller.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Controller\": function() { return /* binding */ Controller; }\n/* harmony export */ });\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n\nclass Controller {\n  constructor(player, option, ctx) {\n    let bindKeys = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    this.buttonMapping = undefined;\n    this.imgs = [];\n    this.ctx = ctx;\n    this.player = player;\n    if (option === 1) {\n      this.buttonMapping = Controller.CONTROLLER_ONE;\n      let body = document.querySelector(\"body\");\n      for (const [key, src] of Object.entries(Controller.CONTROLLER_ONE_IMG_SRC)) {\n        let img = document.createElement('img');\n        img.src = src;\n        img.id = `controller1-${key}`;\n        img.hidden = true;\n        body.appendChild(img);\n        this.imgs.push([key, img]);\n      }\n    } else if (option === 2) {\n      this.buttonMapping = Controller.CONTROLLER_TWO;\n      let body = document.querySelector(\"body\");\n      for (const [key, src] of Object.entries(Controller.CONTROLLER_TWO_IMG_SRC)) {\n        let img = document.createElement('img');\n        img.src = src;\n        img.id = `controller2-${key}`;\n        img.hidden = true;\n        body.appendChild(img);\n        this.imgs.push([key, img]);\n      }\n    }\n    this.heldButtons = [];\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    if (bindKeys) {\n      this.addListeners();\n    }\n    this.draw = this.draw.bind(this);\n  }\n  addListeners() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n  removeListeners() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n  assignPlayer(player) {\n    this.player = player;\n  }\n  assignOpponent(opponent) {\n    this.opponent = opponent;\n  }\n  handleKeyDown(event) {\n    // debugger\n    if (this.buttonMapping[event.key]) {\n      if (!this.heldButtons.includes(this.buttonMapping[event.key])) {\n        this.heldButtons.push(this.buttonMapping[event.key]);\n        if (this.player) {\n          this.player.handleButtonPress(this.buttonMapping[event.key]);\n        }\n      }\n    }\n  }\n  handleKeyUp(event) {\n    if (this.buttonMapping[event.key]) {\n      if (this.heldButtons.includes(this.buttonMapping[event.key])) {\n        let idx = this.heldButtons.indexOf(this.buttonMapping[event.key]);\n        this.heldButtons.splice(idx, 1);\n        if (this.player) {\n          this.player.handleButtonRelease(this.buttonMapping[event.key]);\n        }\n      }\n    }\n  }\n  draw() {\n    this.ctx.resetTransform();\n    this.ctx.clearRect(0, 0, 663, 227);\n    // debugger\n    this.imgs.forEach(arr => {\n      let key = arr[0];\n      let img = arr[1];\n      if (this.heldButtons.includes(key)) {\n        this.ctx.drawImage(img, 0, 5, 663, 227);\n      } else {\n        this.ctx.drawImage(img, 0, 0, 663, 227);\n      }\n    });\n  }\n  static CONTROLLER_ONE = {\n    f: 'B',\n    g: 'Y',\n    h: 'X',\n    r: 'LB',\n    t: 'A',\n    y: 'RB',\n    w: 'UP',\n    s: 'DOWN',\n    a: 'LEFT',\n    d: 'RIGHT'\n  };\n  static CONTROLLER_TWO = {\n    \";\": 'B',\n    l: 'Y',\n    k: 'X',\n    \"i\": 'LB',\n    o: 'A',\n    p: 'RB',\n    ArrowUp: 'UP',\n    ArrowDown: 'DOWN',\n    ArrowLeft: 'LEFT',\n    ArrowRight: 'RIGHT'\n  };\n  static CONTROLLER_ONE_IMG_SRC = {\n    \"UP\": \"assets/images/ControllerKeys/1up.png\",\n    \"LEFT\": \"assets/images/ControllerKeys/1left.png\",\n    \"DOWN\": \"assets/images/ControllerKeys/1down.png\",\n    \"RIGHT\": \"assets/images/ControllerKeys/1right.png\",\n    \"B\": \"assets/images/ControllerKeys/1attack1.png\",\n    \"Y\": \"assets/images/ControllerKeys/1attack2.png\",\n    \"X\": \"assets/images/ControllerKeys/1attack3.png\"\n  };\n  static CONTROLLER_TWO_IMG_SRC = {\n    \"UP\": \"assets/images/ControllerKeys/2up.png\",\n    \"RIGHT\": \"assets/images/ControllerKeys/2right.png\",\n    \"DOWN\": \"assets/images/ControllerKeys/2down.png\",\n    \"LEFT\": \"assets/images/ControllerKeys/2left.png\",\n    \"B\": \"assets/images/ControllerKeys/2attack1.png\",\n    \"Y\": \"assets/images/ControllerKeys/2attack2.png\",\n    \"X\": \"assets/images/ControllerKeys/2attack3.png\"\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/controller.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Game\": function() { return /* binding */ Game; }\n/* harmony export */ });\n/* harmony import */ var _game_view_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game_view.js */ \"./src/scripts/game_view.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\n\n\nclass Game {\n  static PLAYER1_STARTX = -240;\n  static PLAYER2_STARTX = 240;\n  static KNOCKBACK = 10;\n  constructor(ctx, controller1, controller2, menu) {\n    this.gameView = new _game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView(ctx);\n    this.FLOOR = this.gameView.background.FLOOR;\n    this.player1 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player({\n      startpos: [Game.PLAYER1_STARTX, this.FLOOR * 0.75],\n      name: \"player1\",\n      floor: this.FLOOR\n    });\n    this.controller1 = controller1;\n    this.player1.assignController(this.controller1);\n    this.player2 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player({\n      startpos: [Game.PLAYER2_STARTX, this.FLOOR * 0.75],\n      name: \"player2\",\n      floor: this.FLOOR\n    });\n    this.controller2 = controller2;\n    this.player2.assignController(this.controller2);\n    this.controller1.assignOpponent(this.player2);\n    this.controller2.assignOpponent(this.player1);\n    this.objects = [this.player1, this.player2];\n    this.scores = [0, 0];\n    this.gameOver = false;\n    this.paused = true;\n    this.resetRound = this.resetRound.bind(this);\n    this.endGame = this.endGame.bind(this);\n    this.menu = menu;\n  }\n  start() {\n    this.paused = false;\n    this.resetRound();\n    this.runGame();\n  }\n  runGame() {\n    if (!this.paused) {\n      this.gameView.draw(this.objects);\n      this.gameView.renderScore(this.scores);\n      this.controller1.draw();\n      this.controller2.draw();\n      this.handleCollisions();\n    }\n    if (!this.gameOver) {\n      requestAnimationFrame(this.runGame.bind(this));\n    }\n  }\n  handleCollisions() {\n    this.handleHit();\n    this.handlePush();\n    this.handleSwordCollisions();\n  }\n  handlePush() {\n    for (let i = 0; i < this.objects.length; i++) {\n      let hurtboxes1 = this.objects[i].getHurtBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView.MAIN_SCALE);\n      for (let j = i + 1; j < this.objects.length; j++) {\n        let hurtboxes2 = this.objects[j].getHurtBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView.MAIN_SCALE);\n        let collide = false;\n        let collisionData = [];\n        for (let k = 0; k < hurtboxes1.length; k++) {\n          for (let m = 0; m < hurtboxes2.length; m++) {\n            let box1 = hurtboxes1[k].slice();\n            let box2 = hurtboxes2[m].slice();\n            collide = this.overlappingBoxes(box1, box2);\n            if (collide) {\n              collisionData.push(box1);\n              collisionData.push(box2);\n              break;\n            }\n          }\n          if (collide) {\n            break;\n          }\n        }\n        if (collide) {\n          let box1 = collisionData[0];\n          let box2 = collisionData[1];\n          let object1 = this.objects[i];\n          let object2 = this.objects[j];\n          if (box1[0] < box2[0]) {\n            let dx = (box1[0] + box1[3] - box2[0]) / 2;\n            object1.pos[0] -= dx;\n            object2.pos[0] += dx;\n          } else {\n            let dx = (box2[0] + box2[3] - box1[0]) / 2;\n            object2.pos[0] -= dx;\n            object1.pos[0] += dx;\n          }\n        }\n      }\n    }\n  }\n  handleHit() {\n    // determine who is hitting which box\n    let hits = [];\n    for (let i = 0; i < this.objects.length; i++) {\n      let hitbox = this.objects[i].getHitBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView.MAIN_SCALE);\n      if (hitbox) {\n        hitbox = hitbox[0];\n        for (let j = 0; j < this.objects.length; j++) {\n          if (j !== i) {\n            let hit = false;\n            let hurtboxes = this.objects[j].getHurtBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView.MAIN_SCALE);\n            for (let k = 0; k < hurtboxes.length; k++) {\n              if (this.overlappingBoxes(hitbox, hurtboxes[k])) {\n                hits.push([this.objects[i], this.objects[j], k]);\n                hit = true;\n                break;\n              }\n            }\n            if (hit) {\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    // actually deal with the hits\n    if (hits.length > 0) {\n      let roundEnd = false;\n      hits.forEach(hit => {\n        let origin = hit[0];\n        let target = hit[1];\n        let boxNum = hit[2];\n        let damage = 0;\n        switch (origin.currentAction) {\n          case \"attack1\":\n            damage = 1;\n            break;\n          case \"attack2\":\n            damage = 2;\n            break;\n          case \"attack3\":\n            damage = 3;\n            break;\n        }\n\n        // deal damage\n        target.health -= damage * (3 - boxNum) * 0.25;\n        if (target.health < 0) {\n          roundEnd = true;\n          target.health = 0;\n        }\n\n        // cause knockback\n        if (origin.pos[0] < target.pos[0]) {\n          target.pos[0] += Game.KNOCKBACK * damage;\n        } else {\n          target.pos[0] -= Game.KNOCKBACK * damage;\n        }\n      });\n      if (roundEnd) {\n        this.isRoundOver();\n      }\n    }\n  }\n  handleSwordCollisions() {\n    let hits = [];\n    for (let i = 0; i < this.objects.length; i++) {\n      let hitboxes1 = this.objects[i].getHitBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView.MAIN_SCALE);\n      if (hitboxes1) {\n        hitboxes1 = hitboxes1[0];\n        for (let j = 0; j < this.objects.length; j++) {\n          if (j !== i) {\n            let hitboxes2 = this.objects[j].getHitBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView.MAIN_SCALE);\n            if (hitboxes2) {\n              hitboxes2 = hitboxes2[0];\n              if (this.overlappingBoxes(hitboxes1, hitboxes2)) {\n                hits.push([this.objects[i], this.objects[j]]);\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    hits.forEach(hit => {\n      let origin = hit[0];\n      let target = hit[1];\n      let damage = 4;\n      switch (origin.currentAction) {\n        case \"attack1\":\n          damage *= 1;\n          break;\n        case \"attack2\":\n          damage *= 2;\n          break;\n        case \"attack3\":\n          damage *= 3;\n          break;\n      }\n      if (origin.pos[0] < target.pos[0]) {\n        target.pos[0] += Game.KNOCKBACK * damage;\n      } else {\n        target.pos[0] -= Game.KNOCKBACK * damage;\n      }\n    });\n  }\n  overlappingBoxes(box1, box2) {\n    let x1m, y1m, x1M, y1M;\n    let x2m, y2m, x2M, y2M;\n    [x1m, y1m, x1M, y1M] = [box1[0], box1[1], box1[0] + box1[2], box1[1] + box1[3]];\n    [x2m, y2m, x2M, y2M] = [box2[0], box2[1], box2[0] + box2[2], box2[1] + box2[3]];\n    if (x2m >= x1M || x1m >= x2M) {\n      return false;\n    } else if (y2m >= y1M || y1m >= y2M) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  toggleRenderBoxes() {\n    this.player1.toggleRenderBoxes();\n    this.player2.toggleRenderBoxes();\n  }\n  isRoundOver() {\n    if (this.player1.health === 0 || this.player2.health === 0) {\n      this.roundOver = true;\n      if (this.player1.health === 0 && this.player2.health === 0) {\n        this.player1.currentAction = \"dead\";\n        this.player2.currentAction = \"dead\";\n        this.player1.stun(5000);\n        this.player2.stun(5000);\n      } else if (this.player1.health === 0) {\n        this.scores[1] += 1;\n        this.player1.currentAction = \"dead\";\n        this.player2.runAnimationState(false);\n        this.player1.stun(5000);\n        this.player2.stun(5000);\n      } else {\n        this.scores[0] += 1;\n        this.player2.currentAction = \"dead\";\n        this.player1.runAnimationState(false);\n        this.player1.stun(5000);\n        this.player2.stun(5000);\n      }\n      if (!this.isGameOver()) {\n        setTimeout(this.resetRound, 4500);\n      } else {\n        setTimeout(this.endGame, 4500);\n      }\n    }\n  }\n  isGameOver() {\n    // end game if winning by 2\n    if (Math.abs(this.scores[0] - this.scores[1]) >= 2) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  endGame() {\n    this.gameOver = true;\n    this.player1.stun();\n    this.player2.stun();\n    // console.log(\"Game Over\")\n    this.menu.stopGame();\n  }\n  randomizeStage() {\n    this.gameView.randomizeStage();\n    this.FLOOR = this.gameView.background.FLOOR;\n    this.player1.setFloor(this.FLOOR);\n    this.player2.setFloor(this.FLOOR);\n  }\n  resetRound() {\n    this.randomizeStage();\n    this.player1.pos = [Game.PLAYER1_STARTX, this.FLOOR * 0.75];\n    this.player2.pos = [Game.PLAYER2_STARTX, this.FLOOR * 0.75];\n    this.player1.health = 100;\n    this.player2.health = 100;\n    this.player1.currentAction = \"jump\";\n    this.player2.currentAction = \"jump\";\n    this.player1.character.animationFrameInfo[\"jump\"].framenum = 32;\n    this.player2.character.animationFrameInfo[\"jump\"].framenum = 32;\n    this.player1.xFacing = 1;\n    this.player2.xFacing = -1;\n    this.player1.runAnimationState();\n    this.player2.runAnimationState();\n    this.player1.stun(1000);\n    this.player2.stun(1000);\n    this.roundOver = false;\n  }\n  pause() {\n    this.paused = true;\n    this.player1.stun();\n    this.player2.stun();\n  }\n  unpause() {\n    this.paused = false;\n    this.player1.unstun();\n    this.player2.unstun();\n  }\n  winner() {\n    return this.scores[0] > this.scores[1] ? \"Player 1\" : \"Player 2\";\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q3FFLElBQUksQ0FBQyxDQUFDO0lBQ25CLElBQUksQ0FBQ2hFLE9BQU8sQ0FBQ2dFLElBQUksQ0FBQyxDQUFDO0VBQ3ZCO0VBRUFjLE9BQU9BLENBQUEsRUFBRztJQUNOLElBQUksQ0FBQ3pFLE1BQU0sR0FBRyxLQUFLO0lBQ25CLElBQUksQ0FBQ1YsT0FBTyxDQUFDb0YsTUFBTSxDQUFDLENBQUM7SUFDckIsSUFBSSxDQUFDL0UsT0FBTyxDQUFDK0UsTUFBTSxDQUFDLENBQUM7RUFDekI7RUFFQUMsTUFBTUEsQ0FBQSxFQUFHO0lBQ0wsT0FBUSxJQUFJLENBQUM3RSxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDQSxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUksVUFBVSxHQUFHLFVBQVU7RUFDdEU7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL2pzcHJvamVjdC8uL3NyYy9zY3JpcHRzL2dhbWUuanM/Y2RjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHYW1lVmlldyB9IGZyb20gXCIuL2dhbWVfdmlldy5qc1wiO1xuaW1wb3J0IHsgUGxheWVyIH0gZnJvbSBcIi4vcGxheWVyLmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBHYW1lIHtcbiAgICBzdGF0aWMgUExBWUVSMV9TVEFSVFggPSAtMjQwO1xuICAgIHN0YXRpYyBQTEFZRVIyX1NUQVJUWCA9IDI0MDtcbiAgICBzdGF0aWMgS05PQ0tCQUNLID0gMTA7XG5cbiAgICBjb25zdHJ1Y3RvcihjdHgsIGNvbnRyb2xsZXIxLCBjb250cm9sbGVyMiwgbWVudSkge1xuICAgICAgICB0aGlzLmdhbWVWaWV3ID0gbmV3IEdhbWVWaWV3KGN0eCk7XG4gICAgICAgIHRoaXMuRkxPT1IgPSB0aGlzLmdhbWVWaWV3LmJhY2tncm91bmQuRkxPT1I7XG5cbiAgICAgICAgdGhpcy5wbGF5ZXIxID0gbmV3IFBsYXllcih7XG4gICAgICAgICAgICBzdGFydHBvczogW0dhbWUuUExBWUVSMV9TVEFSVFgsIHRoaXMuRkxPT1IqMC43NV0sXG4gICAgICAgICAgICBuYW1lOiBcInBsYXllcjFcIixcbiAgICAgICAgICAgIGZsb29yOiB0aGlzLkZMT09SfSk7XG4gICAgICAgIHRoaXMuY29udHJvbGxlcjEgPSBjb250cm9sbGVyMTtcbiAgICAgICAgdGhpcy5wbGF5ZXIxLmFzc2lnbkNvbnRyb2xsZXIodGhpcy5jb250cm9sbGVyMSk7XG5cbiAgICAgICAgdGhpcy5wbGF5ZXIyID0gbmV3IFBsYXllcih7XG4gICAgICAgICAgICBzdGFydHBvczogW0dhbWUuUExBWUVSMl9TVEFSVFgsIHRoaXMuRkxPT1IqMC43NV0sXG4gICAgICAgICAgICBuYW1lOiBcInBsYXllcjJcIixcbiAgICAgICAgICAgIGZsb29yOiB0aGlzLkZMT09SfSk7XG4gICAgICAgIHRoaXMuY29udHJvbGxlcjIgPSBjb250cm9sbGVyMjtcbiAgICAgICAgdGhpcy5wbGF5ZXIyLmFzc2lnbkNvbnRyb2xsZXIodGhpcy5jb250cm9sbGVyMik7XG5cbiAgICAgICAgdGhpcy5jb250cm9sbGVyMS5hc3NpZ25PcHBvbmVudCh0aGlzLnBsYXllcjIpO1xuICAgICAgICB0aGlzLmNvbnRyb2xsZXIyLmFzc2lnbk9wcG9uZW50KHRoaXMucGxheWVyMSk7XG5cbiAgICAgICAgdGhpcy5vYmplY3RzID0gW3RoaXMucGxheWVyMSwgdGhpcy5wbGF5ZXIyXTtcbiAgICAgICAgdGhpcy5zY29yZXMgPSBbMCwwXTtcbiAgICAgICAgdGhpcy5nYW1lT3ZlciA9IGZhbHNlO1xuICAgICAgICB0aGlzLnBhdXNlZCA9IHRydWU7XG5cbiAgICAgICAgdGhpcy5yZXNldFJvdW5kID0gdGhpcy5yZXNldFJvdW5kLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuZW5kR2FtZSA9IHRoaXMuZW5kR2FtZS5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLm1lbnUgPSBtZW51O1xuICAgIH1cblxuICAgIHN0YXJ0KCkge1xuICAgICAgICB0aGlzLnBhdXNlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnJlc2V0Um91bmQoKTtcbiAgICAgICAgdGhpcy5ydW5HYW1lKCk7XG4gICAgfVxuXG4gICAgcnVuR2FtZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnBhdXNlZCkge1xuICAgICAgICAgICAgdGhpcy5nYW1lVmlldy5kcmF3KHRoaXMub2JqZWN0cyk7XG4gICAgICAgICAgICB0aGlzLmdhbWVWaWV3LnJlbmRlclNjb3JlKHRoaXMuc2NvcmVzKTtcbiAgICAgICAgICAgIHRoaXMuY29udHJvbGxlcjEuZHJhdygpO1xuICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyMi5kcmF3KCk7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZUNvbGxpc2lvbnMoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuZ2FtZU92ZXIpIHtcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnJ1bkdhbWUuYmluZCh0aGlzKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGhhbmRsZUNvbGxpc2lvbnMoKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlSGl0KCk7XG4gICAgICAgIHRoaXMuaGFuZGxlUHVzaCgpO1xuICAgICAgICB0aGlzLmhhbmRsZVN3b3JkQ29sbGlzaW9ucygpO1xuICAgIH1cblxuICAgIGhhbmRsZVB1c2goKXtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm9iamVjdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGxldCBodXJ0Ym94ZXMxID0gdGhpcy5vYmplY3RzW2ldLmdldEh1cnRCb3hlcyhHYW1lVmlldy5NQUlOX1NDQUxFKTtcblxuICAgICAgICAgICAgZm9yIChsZXQgaiA9IGkrMTsgaiA8IHRoaXMub2JqZWN0cy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgIGxldCBodXJ0Ym94ZXMyID0gdGhpcy5vYmplY3RzW2pdLmdldEh1cnRCb3hlcyhHYW1lVmlldy5NQUlOX1NDQUxFKTtcblxuICAgICAgICAgICAgICAgIGxldCBjb2xsaWRlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgbGV0IGNvbGxpc2lvbkRhdGEgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBrID0gMDsgayA8IGh1cnRib3hlczEubGVuZ3RoOyBrKyspe1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBtID0gMDsgbSA8IGh1cnRib3hlczIubGVuZ3RoOyBtKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBib3gxID0gaHVydGJveGVzMVtrXS5zbGljZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGJveDIgPSBodXJ0Ym94ZXMyW21dLnNsaWNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xsaWRlID0gdGhpcy5vdmVybGFwcGluZ0JveGVzKGJveDEsIGJveDIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbGxpZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsaXNpb25EYXRhLnB1c2goYm94MSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGlzaW9uRGF0YS5wdXNoKGJveDIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChjb2xsaWRlKSB7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGNvbGxpZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGJveDEgPSBjb2xsaXNpb25EYXRhWzBdO1xuICAgICAgICAgICAgICAgICAgICBsZXQgYm94MiA9IGNvbGxpc2lvbkRhdGFbMV07XG4gICAgICAgICAgICAgICAgICAgIGxldCBvYmplY3QxID0gdGhpcy5vYmplY3RzW2ldO1xuICAgICAgICAgICAgICAgICAgICBsZXQgb2JqZWN0MiA9IHRoaXMub2JqZWN0c1tqXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJveDFbMF0gPCBib3gyWzBdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZHggPSAoKGJveDFbMF0gKyBib3gxWzNdKSAtIGJveDJbMF0pLzI7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QxLnBvc1swXSAtPSBkeDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdDIucG9zWzBdICs9IGR4O1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGR4ID0gKChib3gyWzBdICsgYm94MlszXSkgLSBib3gxWzBdKS8yO1xuICAgICAgICAgICAgICAgICAgICAgICAgb2JqZWN0Mi5wb3NbMF0gLT0gZHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QxLnBvc1swXSArPSBkeDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGhhbmRsZUhpdCgpe1xuICAgICAgICAvLyBkZXRlcm1pbmUgd2hvIGlzIGhpdHRpbmcgd2hpY2ggYm94XG4gICAgICAgIGxldCBoaXRzID0gW107XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5vYmplY3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgaGl0Ym94ID0gdGhpcy5vYmplY3RzW2ldLmdldEhpdEJveGVzKEdhbWVWaWV3Lk1BSU5fU0NBTEUpO1xuICAgICAgICAgICAgaWYgKGhpdGJveCkge1xuICAgICAgICAgICAgICAgIGhpdGJveCA9IGhpdGJveFswXTtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMub2JqZWN0cy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaiAhPT0gaSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGhpdCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGh1cnRib3hlcyA9IHRoaXMub2JqZWN0c1tqXS5nZXRIdXJ0Qm94ZXMoR2FtZVZpZXcuTUFJTl9TQ0FMRSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBrID0gMDsgayA8IGh1cnRib3hlcy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm92ZXJsYXBwaW5nQm94ZXMoaGl0Ym94LCBodXJ0Ym94ZXNba10pKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGl0cy5wdXNoKFt0aGlzLm9iamVjdHNbaV0sIHRoaXMub2JqZWN0c1tqXSwga10pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGl0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBhY3R1YWxseSBkZWFsIHdpdGggdGhlIGhpdHNcbiAgICAgICAgaWYgKGhpdHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgbGV0IHJvdW5kRW5kID0gZmFsc2U7XG4gICAgICAgICAgICBoaXRzLmZvckVhY2goKGhpdCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBvcmlnaW4gPSBoaXRbMF07XG4gICAgICAgICAgICAgICAgbGV0IHRhcmdldCA9IGhpdFsxXTtcbiAgICAgICAgICAgICAgICBsZXQgYm94TnVtID0gaGl0WzJdO1xuXG4gICAgICAgICAgICAgICAgbGV0IGRhbWFnZSA9IDA7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChvcmlnaW4uY3VycmVudEFjdGlvbil7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgKFwiYXR0YWNrMVwiKTpcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhbWFnZSA9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAoXCJhdHRhY2syXCIpOlxuICAgICAgICAgICAgICAgICAgICAgICAgZGFtYWdlID0gMjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIChcImF0dGFjazNcIik6XG4gICAgICAgICAgICAgICAgICAgICAgICBkYW1hZ2UgPSAzO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gZGVhbCBkYW1hZ2VcbiAgICAgICAgICAgICAgICB0YXJnZXQuaGVhbHRoIC09IGRhbWFnZSooMy1ib3hOdW0pKjAuMjU7XG4gICAgICAgICAgICAgICAgaWYgKHRhcmdldC5oZWFsdGggPCAwKXtcbiAgICAgICAgICAgICAgICAgICAgcm91bmRFbmQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuaGVhbHRoID0gMDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBjYXVzZSBrbm9ja2JhY2tcbiAgICAgICAgICAgICAgICBpZiAob3JpZ2luLnBvc1swXSA8IHRhcmdldC5wb3NbMF0pe1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQucG9zWzBdICs9IEdhbWUuS05PQ0tCQUNLKihkYW1hZ2UpO1xuICAgICAgICAgICAgICAgIH0gZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnBvc1swXSAtPSBHYW1lLktOT0NLQkFDSyooZGFtYWdlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICBpZiAocm91bmRFbmQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmlzUm91bmRPdmVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBoYW5kbGVTd29yZENvbGxpc2lvbnMoKSB7XG4gICAgICAgIGxldCBoaXRzID0gW107XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5vYmplY3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgaGl0Ym94ZXMxID0gdGhpcy5vYmplY3RzW2ldLmdldEhpdEJveGVzKEdhbWVWaWV3Lk1BSU5fU0NBTEUpO1xuICAgICAgICAgICAgaWYgKGhpdGJveGVzMSkge1xuICAgICAgICAgICAgICAgIGhpdGJveGVzMSA9IGhpdGJveGVzMVswXTtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMub2JqZWN0cy5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaiAhPT0gaSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGhpdGJveGVzMiA9IHRoaXMub2JqZWN0c1tqXS5nZXRIaXRCb3hlcyhHYW1lVmlldy5NQUlOX1NDQUxFKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChoaXRib3hlczIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXRib3hlczIgPSBoaXRib3hlczJbMF07XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5vdmVybGFwcGluZ0JveGVzKGhpdGJveGVzMSwgaGl0Ym94ZXMyKSl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpdHMucHVzaChbdGhpcy5vYmplY3RzW2ldLCB0aGlzLm9iamVjdHNbal1dKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaGl0cy5mb3JFYWNoKChoaXQpID0+IHtcbiAgICAgICAgICAgIGxldCBvcmlnaW4gPSBoaXRbMF07XG4gICAgICAgICAgICBsZXQgdGFyZ2V0ID0gaGl0WzFdO1xuXG4gICAgICAgICAgICBsZXQgZGFtYWdlID0gNDtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKG9yaWdpbi5jdXJyZW50QWN0aW9uKXtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAoXCJhdHRhY2sxXCIpOlxuICAgICAgICAgICAgICAgICAgICAgICAgZGFtYWdlICo9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAoXCJhdHRhY2syXCIpOlxuICAgICAgICAgICAgICAgICAgICAgICAgZGFtYWdlICo9IDI7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAoXCJhdHRhY2szXCIpOlxuICAgICAgICAgICAgICAgICAgICAgICAgZGFtYWdlICo9IDM7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChvcmlnaW4ucG9zWzBdIDwgdGFyZ2V0LnBvc1swXSl7XG4gICAgICAgICAgICAgICAgdGFyZ2V0LnBvc1swXSArPSBHYW1lLktOT0NLQkFDSyooZGFtYWdlKTtcbiAgICAgICAgICAgIH0gZWxzZXtcbiAgICAgICAgICAgICAgICB0YXJnZXQucG9zWzBdIC09IEdhbWUuS05PQ0tCQUNLKihkYW1hZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIG92ZXJsYXBwaW5nQm94ZXMoYm94MSwgYm94Mikge1xuICAgICAgICBsZXQgeDFtLCB5MW0sIHgxTSwgeTFNO1xuICAgICAgICBsZXQgeDJtLCB5Mm0sIHgyTSwgeTJNO1xuICAgICAgICBbeDFtLCB5MW0sIHgxTSwgeTFNXSA9IFtib3gxWzBdLCBib3gxWzFdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3gxWzBdICsgYm94MVsyXSwgYm94MVsxXSArIGJveDFbM11dO1xuICAgICAgICBbeDJtLCB5Mm0sIHgyTSwgeTJNXSA9IFtib3gyWzBdLCBib3gyWzFdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3gyWzBdICsgYm94MlsyXSwgYm94MlsxXSArIGJveDJbM11dO1xuXG4gICAgICAgIGlmICh4Mm0gPj0geDFNIHx8IHgxbSA+PSB4Mk0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSBlbHNlIGlmICh5Mm0gPj0geTFNIHx8IHkxbSA+PSB5Mk0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdG9nZ2xlUmVuZGVyQm94ZXMoKSB7XG4gICAgICAgIHRoaXMucGxheWVyMS50b2dnbGVSZW5kZXJCb3hlcygpO1xuICAgICAgICB0aGlzLnBsYXllcjIudG9nZ2xlUmVuZGVyQm94ZXMoKTtcbiAgICB9XG5cbiAgICBpc1JvdW5kT3ZlcigpIHtcbiAgICAgICAgaWYgKHRoaXMucGxheWVyMS5oZWFsdGggPT09IDAgfHwgdGhpcy5wbGF5ZXIyLmhlYWx0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5yb3VuZE92ZXIgPSB0cnVlO1xuICAgICAgICAgICAgaWYgKHRoaXMucGxheWVyMS5oZWFsdGggPT09IDAgJiYgdGhpcy5wbGF5ZXIyLmhlYWx0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyMS5jdXJyZW50QWN0aW9uID0gXCJkZWFkXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIyLmN1cnJlbnRBY3Rpb24gPSBcImRlYWRcIjtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXllcjEuc3R1big1MDAwKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXllcjIuc3R1big1MDAwKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5wbGF5ZXIxLmhlYWx0aCA9PT0gMCl7XG4gICAgICAgICAgICAgICAgdGhpcy5zY29yZXNbMV0gKz0gMTtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXllcjEuY3VycmVudEFjdGlvbiA9IFwiZGVhZFwiO1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyMi5ydW5BbmltYXRpb25TdGF0ZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIxLnN0dW4oNTAwMCk7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIyLnN0dW4oNTAwMCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc2NvcmVzWzBdICs9IDE7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIyLmN1cnJlbnRBY3Rpb24gPSBcImRlYWRcIjtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXllcjEucnVuQW5pbWF0aW9uU3RhdGUoZmFsc2UpO1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyMS5zdHVuKDUwMDApO1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyMi5zdHVuKDUwMDApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIXRoaXMuaXNHYW1lT3ZlcigpKSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCh0aGlzLnJlc2V0Um91bmQsIDQ1MDApO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHRoaXMuZW5kR2FtZSwgNDUwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpc0dhbWVPdmVyKCl7XG4gICAgICAgIC8vIGVuZCBnYW1lIGlmIHdpbm5pbmcgYnkgMlxuICAgICAgICBpZiAoTWF0aC5hYnModGhpcy5zY29yZXNbMF0gLSB0aGlzLnNjb3Jlc1sxXSkgPj0gMikge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBlbmRHYW1lKCl7XG4gICAgICAgIHRoaXMuZ2FtZU92ZXIgPSB0cnVlO1xuICAgICAgICB0aGlzLnBsYXllcjEuc3R1bigpO1xuICAgICAgICB0aGlzLnBsYXllcjIuc3R1bigpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIkdhbWUgT3ZlclwiKVxuICAgICAgICB0aGlzLm1lbnUuc3RvcEdhbWUoKTtcbiAgICB9XG5cbiAgICByYW5kb21pemVTdGFnZSgpIHtcbiAgICAgICAgdGhpcy5nYW1lVmlldy5yYW5kb21pemVTdGFnZSgpO1xuICAgICAgICB0aGlzLkZMT09SID0gdGhpcy5nYW1lVmlldy5iYWNrZ3JvdW5kLkZMT09SO1xuICAgICAgICB0aGlzLnBsYXllcjEuc2V0Rmxvb3IodGhpcy5GTE9PUik7XG4gICAgICAgIHRoaXMucGxheWVyMi5zZXRGbG9vcih0aGlzLkZMT09SKTtcbiAgICB9XG5cbiAgICByZXNldFJvdW5kKCkge1xuICAgICAgICB0aGlzLnJhbmRvbWl6ZVN0YWdlKCk7XG5cbiAgICAgICAgdGhpcy5wbGF5ZXIxLnBvcyA9IFtHYW1lLlBMQVlFUjFfU1RBUlRYLCB0aGlzLkZMT09SKjAuNzVdO1xuICAgICAgICB0aGlzLnBsYXllcjIucG9zID0gW0dhbWUuUExBWUVSMl9TVEFSVFgsIHRoaXMuRkxPT1IqMC43NV07XG5cbiAgICAgICAgdGhpcy5wbGF5ZXIxLmhlYWx0aCA9IDEwMDtcbiAgICAgICAgdGhpcy5wbGF5ZXIyLmhlYWx0aCA9IDEwMDtcblxuICAgICAgICB0aGlzLnBsYXllcjEuY3VycmVudEFjdGlvbiA9IFwianVtcFwiO1xuICAgICAgICB0aGlzLnBsYXllcjIuY3VycmVudEFjdGlvbiA9IFwianVtcFwiO1xuXG4gICAgICAgIHRoaXMucGxheWVyMS5jaGFyYWN0ZXIuYW5pbWF0aW9uRnJhbWVJbmZvW1wianVtcFwiXS5mcmFtZW51bSA9IDMyO1xuICAgICAgICB0aGlzLnBsYXllcjIuY2hhcmFjdGVyLmFuaW1hdGlvbkZyYW1lSW5mb1tcImp1bXBcIl0uZnJhbWVudW0gPSAzMjtcblxuICAgICAgICB0aGlzLnBsYXllcjEueEZhY2luZyA9IDE7XG4gICAgICAgIHRoaXMucGxheWVyMi54RmFjaW5nID0gLTE7XG5cbiAgICAgICAgdGhpcy5wbGF5ZXIxLnJ1bkFuaW1hdGlvblN0YXRlKCk7XG4gICAgICAgIHRoaXMucGxheWVyMi5ydW5BbmltYXRpb25TdGF0ZSgpO1xuXG4gICAgICAgIHRoaXMucGxheWVyMS5zdHVuKDEwMDApO1xuICAgICAgICB0aGlzLnBsYXllcjIuc3R1bigxMDAwKTtcblxuICAgICAgICB0aGlzLnJvdW5kT3ZlciA9IGZhbHNlO1xuICAgIH1cblxuICAgIHBhdXNlKCl7XG4gICAgICAgIHRoaXMucGF1c2VkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5wbGF5ZXIxLnN0dW4oKTtcbiAgICAgICAgdGhpcy5wbGF5ZXIyLnN0dW4oKTtcbiAgICB9XG5cbiAgICB1bnBhdXNlKCkge1xuICAgICAgICB0aGlzLnBhdXNlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnBsYXllcjEudW5zdHVuKCk7XG4gICAgICAgIHRoaXMucGxheWVyMi51bnN0dW4oKTtcbiAgICB9XG5cbiAgICB3aW5uZXIoKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5zY29yZXNbMF0gPiB0aGlzLnNjb3Jlc1sxXSkgPyBcIlBsYXllciAxXCIgOiBcIlBsYXllciAyXCI7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIkdhbWVWaWV3IiwiUGxheWVyIiwiR2FtZSIsIlBMQVlFUjFfU1RBUlRYIiwiUExBWUVSMl9TVEFSVFgiLCJLTk9DS0JBQ0siLCJjb25zdHJ1Y3RvciIsImN0eCIsImNvbnRyb2xsZXIxIiwiY29udHJvbGxlcjIiLCJtZW51IiwiZ2FtZVZpZXciLCJGTE9PUiIsImJhY2tncm91bmQiLCJwbGF5ZXIxIiwic3RhcnRwb3MiLCJuYW1lIiwiZmxvb3IiLCJhc3NpZ25Db250cm9sbGVyIiwicGxheWVyMiIsImFzc2lnbk9wcG9uZW50Iiwib2JqZWN0cyIsInNjb3JlcyIsImdhbWVPdmVyIiwicGF1c2VkIiwicmVzZXRSb3VuZCIsImJpbmQiLCJlbmRHYW1lIiwic3RhcnQiLCJydW5HYW1lIiwiZHJhdyIsInJlbmRlclNjb3JlIiwiaGFuZGxlQ29sbGlzaW9ucyIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImhhbmRsZUhpdCIsImhhbmRsZVB1c2giLCJoYW5kbGVTd29yZENvbGxpc2lvbnMiLCJpIiwibGVuZ3RoIiwiaHVydGJveGVzMSIsImdldEh1cnRCb3hlcyIsIk1BSU5fU0NBTEUiLCJqIiwiaHVydGJveGVzMiIsImNvbGxpZGUiLCJjb2xsaXNpb25EYXRhIiwiayIsIm0iLCJib3gxIiwic2xpY2UiLCJib3gyIiwib3ZlcmxhcHBpbmdCb3hlcyIsInB1c2giLCJvYmplY3QxIiwib2JqZWN0MiIsImR4IiwicG9zIiwiaGl0cyIsImhpdGJveCIsImdldEhpdEJveGVzIiwiaGl0IiwiaHVydGJveGVzIiwicm91bmRFbmQiLCJmb3JFYWNoIiwib3JpZ2luIiwidGFyZ2V0IiwiYm94TnVtIiwiZGFtYWdlIiwiY3VycmVudEFjdGlvbiIsImhlYWx0aCIsImlzUm91bmRPdmVyIiwiaGl0Ym94ZXMxIiwiaGl0Ym94ZXMyIiwieDFtIiwieTFtIiwieDFNIiwieTFNIiwieDJtIiwieTJtIiwieDJNIiwieTJNIiwidG9nZ2xlUmVuZGVyQm94ZXMiLCJyb3VuZE92ZXIiLCJzdHVuIiwicnVuQW5pbWF0aW9uU3RhdGUiLCJpc0dhbWVPdmVyIiwic2V0VGltZW91dCIsIk1hdGgiLCJhYnMiLCJzdG9wR2FtZSIsInJhbmRvbWl6ZVN0YWdlIiwic2V0Rmxvb3IiLCJjaGFyYWN0ZXIiLCJhbmltYXRpb25GcmFtZUluZm8iLCJmcmFtZW51bSIsInhGYWNpbmciLCJwYXVzZSIsInVucGF1c2UiLCJ1bnN0dW4iLCJ3aW5uZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/game_view.js":
/*!**********************************!*\
  !*** ./src/scripts/game_view.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameView\": function() { return /* binding */ GameView; }\n/* harmony export */ });\n/* harmony import */ var _Backgrounds_train__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Backgrounds/train */ \"./src/scripts/Backgrounds/train.js\");\n/* harmony import */ var _Backgrounds_war__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Backgrounds/war */ \"./src/scripts/Backgrounds/war.js\");\n\n\nclass GameView {\n  // Constants\n  static MAIN_SCALE = 0.75;\n  static WIDTH = 960 * GameView.MAIN_SCALE;\n  static HEIGHT = 720 * GameView.MAIN_SCALE;\n\n  // Class methods\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.camera_location = 0;\n    this.loadStages();\n    this.randomizeStage();\n  }\n  loadStages() {\n    this.stages = [];\n    this.stages.push(new _Backgrounds_train__WEBPACK_IMPORTED_MODULE_0__.Train(this.ctx));\n    this.stages.push(new _Backgrounds_war__WEBPACK_IMPORTED_MODULE_1__.War(this.ctx));\n  }\n  randomizeStage() {\n    this.background = this.stages[Math.floor(Math.random() * this.stages.length)];\n  }\n  draw(objects) {\n    let ctx = this.ctx;\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, GameView.WIDTH, GameView.HEIGHT);\n\n    // Calculate camera location\n    this.calculateCameraLocation(objects);\n\n    // draw background image\n    this.background.drawBackground(this.camera_location, GameView.MAIN_SCALE);\n\n    // draw fighters and other assets\n    objects.forEach(obj => {\n      ctx.resetTransform();\n      ctx.translate(GameView.WIDTH / 2, 0);\n      ctx.scale(GameView.MAIN_SCALE, GameView.MAIN_SCALE);\n      ctx.translate(-this.camera_location, 0);\n      obj.draw(ctx);\n    });\n\n    // enforce camera limits\n    this.enforceCameraLimits(objects);\n\n    // draw foreground image\n    this.background.drawForeground(this.camera_location, GameView.MAIN_SCALE);\n\n    // draw health bars\n    this.drawHealthBars(objects);\n  }\n  calculateCameraLocation(objects) {\n    let sumX = 0;\n    objects.forEach(obj => {\n      sumX += obj.pos[0];\n    });\n    let avgX = sumX / objects.length;\n    if (avgX < this.background.CAMERA_LIMIT_LEFT) {\n      this.camera_location = this.background.CAMERA_LIMIT_LEFT;\n    } else if (avgX > this.background.CAMERA_LIMIT_RIGHT) {\n      this.camera_location = this.background.CAMERA_LIMIT_RIGHT;\n    } else {\n      this.camera_location = avgX;\n    }\n  }\n  drawHealthBars(objects) {\n    let ctx = this.ctx;\n    let barThickness = 18;\n    let start1 = GameView.WIDTH * 0.04;\n    let start2 = GameView.WIDTH * 0.96;\n    let barSize = GameView.WIDTH * 0.4;\n    let healthyColor = \"0, 220, 0\";\n    let hurtColor = \"170, 0, 0\";\n    objects.forEach(obj => {\n      ctx.resetTransform();\n      let startpos, barwidth, sign;\n      if (obj.name === \"player1\") {\n        startpos = [start1, start1];\n        barwidth = barSize;\n        sign = 1;\n      } else {\n        startpos = [start2, start1];\n        barwidth = -barSize;\n        sign = -1;\n      }\n      for (let i = 5; i >= 0; i--) {\n        if (obj.health === 100) {\n          ctx.strokeStyle = `rgb(${healthyColor}, ${0.25 + (5 - i) / 5 * 0.75})`;\n          ctx.lineWidth = barThickness + i;\n          ctx.beginPath();\n          ctx.moveTo(startpos[0] - i * sign, startpos[1]);\n          ctx.lineTo(startpos[0] + obj.health / 100 * barwidth + i * sign, startpos[1]);\n          ctx.stroke();\n        } else if (obj.health === 0) {\n          ctx.beginPath();\n          ctx.lineWidth = barThickness + i;\n          ctx.strokeStyle = `rgb(${hurtColor}, ${0.25 + (5 - i) / 5 * 0.75})`;\n          ctx.moveTo(startpos[0] + obj.health / 100 * barwidth - i * sign, startpos[1]);\n          ctx.lineTo(startpos[0] + barwidth + i * sign, startpos[1]);\n          ctx.stroke();\n        } else {\n          ctx.strokeStyle = `rgb(${healthyColor}, ${0.25 + (5 - i) / 5 * 0.75})`;\n          ctx.lineWidth = barThickness + i;\n          ctx.beginPath();\n          ctx.moveTo(startpos[0] - i * sign, startpos[1]);\n          ctx.lineTo(startpos[0] + obj.health / 100 * barwidth, startpos[1]);\n          ctx.stroke();\n          ctx.beginPath();\n          ctx.strokeStyle = `rgb(${hurtColor}, ${0.25 + (5 - i) / 5 * 0.75})`;\n          ctx.moveTo(startpos[0] + obj.health / 100 * barwidth, startpos[1]);\n          ctx.lineTo(startpos[0] + barwidth + i * sign, startpos[1]);\n          ctx.stroke();\n        }\n      }\n    });\n  }\n  enforceCameraLimits(objects) {\n    objects.forEach(obj => {\n      // use body hurtbox to calculate x-limit\n      let bodyBox = obj.getHurtBoxes(GameView.MAIN_SCALE)[1];\n      let left = bodyBox[0];\n      let right = bodyBox[0] + bodyBox[2];\n      if (left - this.camera_location * GameView.MAIN_SCALE < -GameView.WIDTH / 2) {\n        let dx = left - this.camera_location * GameView.MAIN_SCALE + GameView.WIDTH / 2;\n        obj.pos[0] -= dx;\n      } else if (right - this.camera_location * GameView.MAIN_SCALE > GameView.WIDTH / 2) {\n        let dx = right - this.camera_location * GameView.MAIN_SCALE - GameView.WIDTH / 2;\n        obj.pos[0] -= dx;\n      }\n    });\n  }\n  renderScore(score) {\n    let formattedScore = score.join(' - ');\n    this.ctx.font = \"28px Arial\";\n    this.ctx.fillStyle = \"yellow\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillText(formattedScore, GameView.WIDTH * 0.5, GameView.WIDTH * 0.053);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUMsTUFBTSxJQUFJRCxLQUFLLEdBQUcsSUFBSSxDQUFDakQsZUFBZSxHQUFDTixRQUFRLENBQUNDLFVBQVUsR0FBR0QsUUFBUSxDQUFDRSxLQUFLLEdBQUMsQ0FBQyxFQUFFO1FBQzVFLElBQUlzRCxFQUFFLEdBQUdELEtBQUssR0FBRyxJQUFJLENBQUNqRCxlQUFlLEdBQUNOLFFBQVEsQ0FBQ0MsVUFBVSxHQUFHRCxRQUFRLENBQUNFLEtBQUssR0FBQyxDQUFDO1FBQzVFcUIsR0FBRyxDQUFDTyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUkwQixFQUFFO01BQ3BCO0lBQ0osQ0FBQyxDQUFDO0VBQ047RUFFQUMsV0FBV0EsQ0FBQ0MsS0FBSyxFQUFFO0lBQ2YsSUFBSUMsY0FBYyxHQUFHRCxLQUFLLENBQUNFLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDdEMsSUFBSSxDQUFDdkQsR0FBRyxDQUFDd0QsSUFBSSxHQUFHLFlBQVk7SUFDNUIsSUFBSSxDQUFDeEQsR0FBRyxDQUFDeUQsU0FBUyxHQUFHLFFBQVE7SUFDN0IsSUFBSSxDQUFDekQsR0FBRyxDQUFDMEQsU0FBUyxHQUFHLFFBQVE7SUFFN0IsSUFBSSxDQUFDMUQsR0FBRyxDQUFDMkQsUUFBUSxDQUFDTCxjQUFjLEVBQUUzRCxRQUFRLENBQUNFLEtBQUssR0FBQyxHQUFHLEVBQUVGLFFBQVEsQ0FBQ0UsS0FBSyxHQUFDLEtBQUssQ0FBQztFQUMvRTtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNwcm9qZWN0Ly4vc3JjL3NjcmlwdHMvZ2FtZV92aWV3LmpzPzgwZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHJhaW4gfSBmcm9tIFwiLi9CYWNrZ3JvdW5kcy90cmFpblwiO1xuaW1wb3J0IHsgV2FyIH0gZnJvbSBcIi4vQmFja2dyb3VuZHMvd2FyXCI7XG5cbmV4cG9ydCBjbGFzcyBHYW1lVmlldyB7XG4gICAgLy8gQ29uc3RhbnRzXG4gICAgc3RhdGljIE1BSU5fU0NBTEUgPSAwLjc1O1xuICAgIHN0YXRpYyBXSURUSCA9IDk2MCpHYW1lVmlldy5NQUlOX1NDQUxFO1xuICAgIHN0YXRpYyBIRUlHSFQgPSA3MjAqR2FtZVZpZXcuTUFJTl9TQ0FMRTtcblxuICAgIC8vIENsYXNzIG1ldGhvZHNcbiAgICBjb25zdHJ1Y3RvcihjdHgpIHtcbiAgICAgICAgdGhpcy5jdHggPSBjdHg7XG4gICAgICAgIHRoaXMuY2FtZXJhX2xvY2F0aW9uID0gMDtcblxuICAgICAgICB0aGlzLmxvYWRTdGFnZXMoKTtcblxuICAgICAgICB0aGlzLnJhbmRvbWl6ZVN0YWdlKCk7XG4gICAgfVxuXG4gICAgbG9hZFN0YWdlcygpIHtcbiAgICAgICAgdGhpcy5zdGFnZXMgPSBbXTtcbiAgICAgICAgdGhpcy5zdGFnZXMucHVzaChuZXcgVHJhaW4odGhpcy5jdHgpKTtcbiAgICAgICAgdGhpcy5zdGFnZXMucHVzaChuZXcgV2FyKHRoaXMuY3R4KSk7XG4gICAgfVxuXG4gICAgcmFuZG9taXplU3RhZ2UoKSB7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZCA9IHRoaXMuc3RhZ2VzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSp0aGlzLnN0YWdlcy5sZW5ndGgpXTtcbiAgICB9XG5cbiAgICBkcmF3KG9iamVjdHMpIHtcbiAgICAgICAgbGV0IGN0eCA9IHRoaXMuY3R4O1xuICAgICAgICBjdHgucmVzZXRUcmFuc2Zvcm0oKTtcbiAgICAgICAgY3R4LmNsZWFyUmVjdCgwLDAsR2FtZVZpZXcuV0lEVEgsIEdhbWVWaWV3LkhFSUdIVClcblxuICAgICAgICAvLyBDYWxjdWxhdGUgY2FtZXJhIGxvY2F0aW9uXG4gICAgICAgIHRoaXMuY2FsY3VsYXRlQ2FtZXJhTG9jYXRpb24ob2JqZWN0cyk7XG5cbiAgICAgICAgLy8gZHJhdyBiYWNrZ3JvdW5kIGltYWdlXG4gICAgICAgIHRoaXMuYmFja2dyb3VuZC5kcmF3QmFja2dyb3VuZCh0aGlzLmNhbWVyYV9sb2NhdGlvbiwgR2FtZVZpZXcuTUFJTl9TQ0FMRSk7XG5cbiAgICAgICAgLy8gZHJhdyBmaWdodGVycyBhbmQgb3RoZXIgYXNzZXRzXG4gICAgICAgIG9iamVjdHMuZm9yRWFjaCgob2JqKSA9PiB7XG4gICAgICAgICAgICBjdHgucmVzZXRUcmFuc2Zvcm0oKTtcbiAgICAgICAgICAgIGN0eC50cmFuc2xhdGUoR2FtZVZpZXcuV0lEVEgvMiwgMCk7XG4gICAgICAgICAgICBjdHguc2NhbGUoR2FtZVZpZXcuTUFJTl9TQ0FMRSwgR2FtZVZpZXcuTUFJTl9TQ0FMRSk7XG4gICAgICAgICAgICBjdHgudHJhbnNsYXRlKC10aGlzLmNhbWVyYV9sb2NhdGlvbiwgMCk7XG4gICAgICAgICAgICBvYmouZHJhdyhjdHgpO1xuICAgICAgICB9KVxuXG4gICAgICAgIC8vIGVuZm9yY2UgY2FtZXJhIGxpbWl0c1xuICAgICAgICB0aGlzLmVuZm9yY2VDYW1lcmFMaW1pdHMob2JqZWN0cyk7XG5cbiAgICAgICAgLy8gZHJhdyBmb3JlZ3JvdW5kIGltYWdlXG4gICAgICAgIHRoaXMuYmFja2dyb3VuZC5kcmF3Rm9yZWdyb3VuZCh0aGlzLmNhbWVyYV9sb2NhdGlvbiwgR2FtZVZpZXcuTUFJTl9TQ0FMRSk7XG5cbiAgICAgICAgLy8gZHJhdyBoZWFsdGggYmFyc1xuICAgICAgICB0aGlzLmRyYXdIZWFsdGhCYXJzKG9iamVjdHMpO1xuICAgIH1cblxuICAgIGNhbGN1bGF0ZUNhbWVyYUxvY2F0aW9uKG9iamVjdHMpe1xuICAgICAgICBsZXQgc3VtWCA9IDA7XG4gICAgICAgIG9iamVjdHMuZm9yRWFjaCgob2JqKSA9PiB7XG4gICAgICAgICAgICBzdW1YICs9IG9iai5wb3NbMF07XG4gICAgICAgIH0pXG4gICAgICAgIGxldCBhdmdYID0gc3VtWCAvIG9iamVjdHMubGVuZ3RoO1xuICAgICAgICBpZiAoYXZnWCA8IHRoaXMuYmFja2dyb3VuZC5DQU1FUkFfTElNSVRfTEVGVCkge1xuICAgICAgICAgICAgdGhpcy5jYW1lcmFfbG9jYXRpb24gPSB0aGlzLmJhY2tncm91bmQuQ0FNRVJBX0xJTUlUX0xFRlQ7XG4gICAgICAgIH0gZWxzZSBpZiAoYXZnWCA+IHRoaXMuYmFja2dyb3VuZC5DQU1FUkFfTElNSVRfUklHSFQpIHtcbiAgICAgICAgICAgIHRoaXMuY2FtZXJhX2xvY2F0aW9uID0gdGhpcy5iYWNrZ3JvdW5kLkNBTUVSQV9MSU1JVF9SSUdIVDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY2FtZXJhX2xvY2F0aW9uID0gYXZnWDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRyYXdIZWFsdGhCYXJzKG9iamVjdHMpe1xuICAgICAgICBsZXQgY3R4ID0gdGhpcy5jdHg7XG4gICAgICAgIGxldCBiYXJUaGlja25lc3MgPSAxODtcbiAgICAgICAgbGV0IHN0YXJ0MSA9IEdhbWVWaWV3LldJRFRIKjAuMDQ7XG4gICAgICAgIGxldCBzdGFydDIgPSBHYW1lVmlldy5XSURUSCowLjk2O1xuICAgICAgICBsZXQgYmFyU2l6ZSA9IEdhbWVWaWV3LldJRFRIKjAuNDtcbiAgICAgICAgbGV0IGhlYWx0aHlDb2xvciA9IFwiMCwgMjIwLCAwXCI7XG4gICAgICAgIGxldCBodXJ0Q29sb3IgPSBcIjE3MCwgMCwgMFwiO1xuXG4gICAgICAgIG9iamVjdHMuZm9yRWFjaCgob2JqKSA9PiB7XG4gICAgICAgICAgICBjdHgucmVzZXRUcmFuc2Zvcm0oKTtcbiAgICAgICAgICAgIGxldCBzdGFydHBvcywgYmFyd2lkdGgsIHNpZ247XG4gICAgICAgICAgICBpZiAob2JqLm5hbWUgPT09IFwicGxheWVyMVwiKSB7XG4gICAgICAgICAgICAgICAgc3RhcnRwb3MgPSBbc3RhcnQxLCBzdGFydDFdO1xuICAgICAgICAgICAgICAgIGJhcndpZHRoID0gYmFyU2l6ZTtcbiAgICAgICAgICAgICAgICBzaWduID0gMTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc3RhcnRwb3MgPSBbc3RhcnQyLCBzdGFydDFdO1xuICAgICAgICAgICAgICAgIGJhcndpZHRoID0gLWJhclNpemU7XG4gICAgICAgICAgICAgICAgc2lnbiA9IC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDU7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgICAgICAgaWYgKG9iai5oZWFsdGggPT09IDEwMCkge1xuICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBgcmdiKCR7aGVhbHRoeUNvbG9yfSwgJHswLjI1ICsgKDUtaSkvNSowLjc1fSlgO1xuICAgICAgICAgICAgICAgICAgICBjdHgubGluZVdpZHRoID0gYmFyVGhpY2tuZXNzK2k7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgICAgICAgICAgY3R4Lm1vdmVUbyhzdGFydHBvc1swXS1pKnNpZ24sIHN0YXJ0cG9zWzFdKTtcbiAgICAgICAgICAgICAgICAgICAgY3R4LmxpbmVUbyhzdGFydHBvc1swXSArIG9iai5oZWFsdGgvMTAwKmJhcndpZHRoICtpKnNpZ24sIHN0YXJ0cG9zWzFdKTtcbiAgICAgICAgICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAob2JqLmhlYWx0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSBiYXJUaGlja25lc3MraTtcbiAgICAgICAgICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gYHJnYigke2h1cnRDb2xvcn0sICR7MC4yNSArICg1LWkpLzUqMC43NX0pYDtcbiAgICAgICAgICAgICAgICAgICAgY3R4Lm1vdmVUbyhzdGFydHBvc1swXSArIG9iai5oZWFsdGgvMTAwKmJhcndpZHRoIC0gaSpzaWduLCBzdGFydHBvc1sxXSk7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5saW5lVG8oc3RhcnRwb3NbMF0gKyBiYXJ3aWR0aCArIGkqc2lnbiwgc3RhcnRwb3NbMV0pO1xuICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gYHJnYigke2hlYWx0aHlDb2xvcn0sICR7MC4yNSArICg1LWkpLzUqMC43NX0pYDtcbiAgICAgICAgICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IGJhclRoaWNrbmVzcytpO1xuICAgICAgICAgICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5tb3ZlVG8oc3RhcnRwb3NbMF0taSpzaWduLCBzdGFydHBvc1sxXSk7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5saW5lVG8oc3RhcnRwb3NbMF0gKyBvYmouaGVhbHRoLzEwMCpiYXJ3aWR0aCwgc3RhcnRwb3NbMV0pO1xuICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBgcmdiKCR7aHVydENvbG9yfSwgJHswLjI1ICsgKDUtaSkvNSowLjc1fSlgO1xuICAgICAgICAgICAgICAgICAgICBjdHgubW92ZVRvKHN0YXJ0cG9zWzBdICsgb2JqLmhlYWx0aC8xMDAqYmFyd2lkdGgsIHN0YXJ0cG9zWzFdKTtcbiAgICAgICAgICAgICAgICAgICAgY3R4LmxpbmVUbyhzdGFydHBvc1swXSArIGJhcndpZHRoICsgaSpzaWduLCBzdGFydHBvc1sxXSk7XG4gICAgICAgICAgICAgICAgICAgIGN0eC5zdHJva2UoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgZW5mb3JjZUNhbWVyYUxpbWl0cyhvYmplY3RzKXtcbiAgICAgICAgb2JqZWN0cy5mb3JFYWNoKChvYmopID0+IHtcbiAgICAgICAgICAgIC8vIHVzZSBib2R5IGh1cnRib3ggdG8gY2FsY3VsYXRlIHgtbGltaXRcbiAgICAgICAgICAgIGxldCBib2R5Qm94ID0gb2JqLmdldEh1cnRCb3hlcyhHYW1lVmlldy5NQUlOX1NDQUxFKVsxXVxuICAgICAgICAgICAgbGV0IGxlZnQgPSBib2R5Qm94WzBdO1xuICAgICAgICAgICAgbGV0IHJpZ2h0ID0gYm9keUJveFswXSArIGJvZHlCb3hbMl07XG5cbiAgICAgICAgICAgIGlmIChsZWZ0IC0gdGhpcy5jYW1lcmFfbG9jYXRpb24qR2FtZVZpZXcuTUFJTl9TQ0FMRSA8IC1HYW1lVmlldy5XSURUSC8yKXtcbiAgICAgICAgICAgICAgICBsZXQgZHggPSBsZWZ0IC0gdGhpcy5jYW1lcmFfbG9jYXRpb24qR2FtZVZpZXcuTUFJTl9TQ0FMRSArIEdhbWVWaWV3LldJRFRILzI7XG4gICAgICAgICAgICAgICAgb2JqLnBvc1swXSAtPSBkeDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocmlnaHQgLSB0aGlzLmNhbWVyYV9sb2NhdGlvbipHYW1lVmlldy5NQUlOX1NDQUxFID4gR2FtZVZpZXcuV0lEVEgvMikge1xuICAgICAgICAgICAgICAgIGxldCBkeCA9IHJpZ2h0IC0gdGhpcy5jYW1lcmFfbG9jYXRpb24qR2FtZVZpZXcuTUFJTl9TQ0FMRSAtIEdhbWVWaWV3LldJRFRILzI7XG4gICAgICAgICAgICAgICAgb2JqLnBvc1swXSAtPSBkeDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyU2NvcmUoc2NvcmUpIHtcbiAgICAgICAgbGV0IGZvcm1hdHRlZFNjb3JlID0gc2NvcmUuam9pbignIC0gJylcbiAgICAgICAgdGhpcy5jdHguZm9udCA9IFwiMjhweCBBcmlhbFwiO1xuICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSBcInllbGxvd1wiO1xuICAgICAgICB0aGlzLmN0eC50ZXh0QWxpZ24gPSBcImNlbnRlclwiO1xuXG4gICAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KGZvcm1hdHRlZFNjb3JlLCBHYW1lVmlldy5XSURUSCowLjUsIEdhbWVWaWV3LldJRFRIKjAuMDUzKVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJUcmFpbiIsIldhciIsIkdhbWVWaWV3IiwiTUFJTl9TQ0FMRSIsIldJRFRIIiwiSEVJR0hUIiwiY29uc3RydWN0b3IiLCJjdHgiLCJjYW1lcmFfbG9jYXRpb24iLCJsb2FkU3RhZ2VzIiwicmFuZG9taXplU3RhZ2UiLCJzdGFnZXMiLCJwdXNoIiwiYmFja2dyb3VuZCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImxlbmd0aCIsImRyYXciLCJvYmplY3RzIiwicmVzZXRUcmFuc2Zvcm0iLCJjbGVhclJlY3QiLCJjYWxjdWxhdGVDYW1lcmFMb2NhdGlvbiIsImRyYXdCYWNrZ3JvdW5kIiwiZm9yRWFjaCIsIm9iaiIsInRyYW5zbGF0ZSIsInNjYWxlIiwiZW5mb3JjZUNhbWVyYUxpbWl0cyIsImRyYXdGb3JlZ3JvdW5kIiwiZHJhd0hlYWx0aEJhcnMiLCJzdW1YIiwicG9zIiwiYXZnWCIsIkNBTUVSQV9MSU1JVF9MRUZUIiwiQ0FNRVJBX0xJTUlUX1JJR0hUIiwiYmFyVGhpY2tuZXNzIiwic3RhcnQxIiwic3RhcnQyIiwiYmFyU2l6ZSIsImhlYWx0aHlDb2xvciIsImh1cnRDb2xvciIsInN0YXJ0cG9zIiwiYmFyd2lkdGgiLCJzaWduIiwibmFtZSIsImkiLCJoZWFsdGgiLCJzdHJva2VTdHlsZSIsImxpbmVXaWR0aCIsImJlZ2luUGF0aCIsIm1vdmVUbyIsImxpbmVUbyIsInN0cm9rZSIsImJvZHlCb3giLCJnZXRIdXJ0Qm94ZXMiLCJsZWZ0IiwicmlnaHQiLCJkeCIsInJlbmRlclNjb3JlIiwic2NvcmUiLCJmb3JtYXR0ZWRTY29yZSIsImpvaW4iLCJmb250IiwiZmlsbFN0eWxlIiwidGV4dEFsaWduIiwiZmlsbFRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/game_view.js\n");

/***/ }),

/***/ "./src/scripts/gamepad_controller.js":
/*!*******************************************!*\
  !*** ./src/scripts/gamepad_controller.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GamePadController\": function() { return /* binding */ GamePadController; }\n/* harmony export */ });\n/* harmony import */ var _controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./controller */ \"./src/scripts/controller.js\");\n\nclass GamePadController extends _controller__WEBPACK_IMPORTED_MODULE_0__.Controller {\n  static BUTTON_MAPPING = {\n    0: 'UP',\n    // changed\n    1: 'X',\n    // changed\n    2: 'B',\n    // changed\n    3: 'Y',\n    // changed\n    4: 'LB',\n    5: 'RB',\n    6: 'LT',\n    7: 'RT',\n    8: 'M',\n    // minus\n    9: 'P',\n    // plus\n    10: 'LJ',\n    // left joystick\n    11: 'RJ',\n    // right joystick\n    12: 'UP',\n    // up\n    13: 'DOWN',\n    // down\n    14: 'LEFT',\n    15: 'RIGHT',\n    16: 'HOME',\n    17: 'SS'\n  };\n  constructor(gamepad, ctx) {\n    super(null, 3, ctx, false);\n    this.gamepad = gamepad;\n    this.buttonMapping = Gamepad.BUTTON_MAPPING;\n    this.gameLoop = this.gameLoop.bind(this);\n    setInterval(this.gameLoop, 100);\n  }\n  draw() {\n    this.ctx.clearRect(0, 0, 1000, 1000);\n  }\n  gameLoop() {\n    if (this.player) {\n      const gamepads = navigator.getGamepads();\n      let controller = gamepads[this.gamepad.index];\n      for (let i = 0; i < controller.buttons.length; i++) {\n        let button = GamePadController.BUTTON_MAPPING[i];\n        if (controller.buttons[i].pressed) {\n          this.player.handleButtonPress(button);\n        } else {\n          this.player.handleButtonRelease(button);\n        }\n      }\n      let leftJoystick = [controller.axes[0], controller.axes[1]];\n      if (leftJoystick[0] > 0.25) {\n        this.player.handleButtonRelease(\"LEFT\");\n        this.player.handleButtonPress(\"RIGHT\");\n      } else if (leftJoystick[0] < -0.25) {\n        this.player.handleButtonRelease(\"RIGHT\");\n        this.player.handleButtonPress(\"LEFT\");\n      }\n      // if (leftJoystick[1] < -0.25){\n      //     this.player.handleButtonPress(\"UP\");\n      // } else {\n      //     this.player.handleButtonRelease(\"UP\");\n      // }\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nYW1lcGFkX2NvbnRyb2xsZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFFbkMsTUFBTUMsaUJBQWlCLFNBQVNELG1EQUFVLENBQUM7RUFDOUMsT0FBT0UsY0FBYyxHQUFHO0lBQ3BCLENBQUMsRUFBRSxJQUFJO0lBQUU7SUFDVCxDQUFDLEVBQUUsR0FBRztJQUFHO0lBQ1QsQ0FBQyxFQUFFLEdBQUc7SUFBRTtJQUNSLENBQUMsRUFBRSxHQUFHO0lBQUU7SUFDUixDQUFDLEVBQUUsSUFBSTtJQUNQLENBQUMsRUFBRSxJQUFJO0lBQ1AsQ0FBQyxFQUFFLElBQUk7SUFDUCxDQUFDLEVBQUUsSUFBSTtJQUNQLENBQUMsRUFBRSxHQUFHO0lBQU07SUFDWixDQUFDLEVBQUUsR0FBRztJQUFNO0lBQ1osRUFBRSxFQUFFLElBQUk7SUFBSTtJQUNaLEVBQUUsRUFBRSxJQUFJO0lBQUk7SUFDWixFQUFFLEVBQUUsSUFBSTtJQUFJO0lBQ1osRUFBRSxFQUFFLE1BQU07SUFBSztJQUNmLEVBQUUsRUFBRSxNQUFNO0lBQ1YsRUFBRSxFQUFFLE9BQU87SUFDWCxFQUFFLEVBQUUsTUFBTTtJQUNWLEVBQUUsRUFBRTtFQUNSLENBQUM7RUFFREMsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFFQyxHQUFHLEVBQUU7SUFDdEIsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUVBLEdBQUcsRUFBRSxLQUFLLENBQUM7SUFDMUIsSUFBSSxDQUFDRCxPQUFPLEdBQUdBLE9BQU87SUFDdEIsSUFBSSxDQUFDRSxhQUFhLEdBQUdDLE9BQU8sQ0FBQ0wsY0FBYztJQUUzQyxJQUFJLENBQUNNLFFBQVEsR0FBRyxJQUFJLENBQUNBLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQztJQUV4Q0MsV0FBVyxDQUFDLElBQUksQ0FBQ0YsUUFBUSxFQUFFLEdBQUcsQ0FBQztFQUNuQztFQUVBRyxJQUFJQSxDQUFBLEVBQUc7SUFDSCxJQUFJLENBQUNOLEdBQUcsQ0FBQ08sU0FBUyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsSUFBSSxFQUFDLElBQUksQ0FBQztFQUNyQztFQUVBSixRQUFRQSxDQUFBLEVBQUc7SUFDUCxJQUFJLElBQUksQ0FBQ0ssTUFBTSxFQUFFO01BQ2IsTUFBTUMsUUFBUSxHQUFHQyxTQUFTLENBQUNDLFdBQVcsQ0FBQyxDQUFDO01BQ3hDLElBQUlDLFVBQVUsR0FBR0gsUUFBUSxDQUFDLElBQUksQ0FBQ1YsT0FBTyxDQUFDYyxLQUFLLENBQUM7TUFFN0MsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdGLFVBQVUsQ0FBQ0csT0FBTyxDQUFDQyxNQUFNLEVBQUVGLENBQUMsRUFBRSxFQUFFO1FBQ2hELElBQUlHLE1BQU0sR0FBR3JCLGlCQUFpQixDQUFDQyxjQUFjLENBQUNpQixDQUFDLENBQUM7UUFDaEQsSUFBSUYsVUFBVSxDQUFDRyxPQUFPLENBQUNELENBQUMsQ0FBQyxDQUFDSSxPQUFPLEVBQUU7VUFDL0IsSUFBSSxDQUFDVixNQUFNLENBQUNXLGlCQUFpQixDQUFDRixNQUFNLENBQUM7UUFDekMsQ0FBQyxNQUFNO1VBQ0gsSUFBSSxDQUFDVCxNQUFNLENBQUNZLG1CQUFtQixDQUFDSCxNQUFNLENBQUM7UUFDM0M7TUFDSjtNQUVBLElBQUlJLFlBQVksR0FBRyxDQUFDVCxVQUFVLENBQUNVLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRVYsVUFBVSxDQUFDVSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7TUFFM0QsSUFBSUQsWUFBWSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksRUFBQztRQUN2QixJQUFJLENBQUNiLE1BQU0sQ0FBQ1ksbUJBQW1CLENBQUMsTUFBTSxDQUFDO1FBQ3ZDLElBQUksQ0FBQ1osTUFBTSxDQUFDVyxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7TUFDMUMsQ0FBQyxNQUFNLElBQUlFLFlBQVksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRTtRQUNoQyxJQUFJLENBQUNiLE1BQU0sQ0FBQ1ksbUJBQW1CLENBQUMsT0FBTyxDQUFDO1FBQ3hDLElBQUksQ0FBQ1osTUFBTSxDQUFDVyxpQkFBaUIsQ0FBQyxNQUFNLENBQUM7TUFDekM7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBO0lBQ0o7RUFDSjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNwcm9qZWN0Ly4vc3JjL3NjcmlwdHMvZ2FtZXBhZF9jb250cm9sbGVyLmpzP2NkNGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udHJvbGxlciB9IGZyb20gXCIuL2NvbnRyb2xsZXJcIjtcblxuZXhwb3J0IGNsYXNzIEdhbWVQYWRDb250cm9sbGVyIGV4dGVuZHMgQ29udHJvbGxlciB7XG4gICAgc3RhdGljIEJVVFRPTl9NQVBQSU5HID0ge1xuICAgICAgICAwOiAnVVAnLCAvLyBjaGFuZ2VkXG4gICAgICAgIDE6ICdYJywgIC8vIGNoYW5nZWRcbiAgICAgICAgMjogJ0InLCAvLyBjaGFuZ2VkXG4gICAgICAgIDM6ICdZJywgLy8gY2hhbmdlZFxuICAgICAgICA0OiAnTEInLFxuICAgICAgICA1OiAnUkInLFxuICAgICAgICA2OiAnTFQnLFxuICAgICAgICA3OiAnUlQnLFxuICAgICAgICA4OiAnTScsICAgICAvLyBtaW51c1xuICAgICAgICA5OiAnUCcsICAgICAvLyBwbHVzXG4gICAgICAgIDEwOiAnTEonLCAgIC8vIGxlZnQgam95c3RpY2tcbiAgICAgICAgMTE6ICdSSicsICAgLy8gcmlnaHQgam95c3RpY2tcbiAgICAgICAgMTI6ICdVUCcsICAgLy8gdXBcbiAgICAgICAgMTM6ICdET1dOJywgICAgLy8gZG93blxuICAgICAgICAxNDogJ0xFRlQnLFxuICAgICAgICAxNTogJ1JJR0hUJyxcbiAgICAgICAgMTY6ICdIT01FJyxcbiAgICAgICAgMTc6ICdTUydcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcihnYW1lcGFkLCBjdHgpIHtcbiAgICAgICAgc3VwZXIobnVsbCwgMywgY3R4LCBmYWxzZSk7XG4gICAgICAgIHRoaXMuZ2FtZXBhZCA9IGdhbWVwYWQ7XG4gICAgICAgIHRoaXMuYnV0dG9uTWFwcGluZyA9IEdhbWVwYWQuQlVUVE9OX01BUFBJTkc7XG5cbiAgICAgICAgdGhpcy5nYW1lTG9vcCA9IHRoaXMuZ2FtZUxvb3AuYmluZCh0aGlzKTtcblxuICAgICAgICBzZXRJbnRlcnZhbCh0aGlzLmdhbWVMb29wLCAxMDApXG4gICAgfVxuXG4gICAgZHJhdygpIHtcbiAgICAgICAgdGhpcy5jdHguY2xlYXJSZWN0KDAsMCwxMDAwLDEwMDApO1xuICAgIH1cblxuICAgIGdhbWVMb29wKCkge1xuICAgICAgICBpZiAodGhpcy5wbGF5ZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGdhbWVwYWRzID0gbmF2aWdhdG9yLmdldEdhbWVwYWRzKCk7XG4gICAgICAgICAgICBsZXQgY29udHJvbGxlciA9IGdhbWVwYWRzW3RoaXMuZ2FtZXBhZC5pbmRleF07XG5cbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29udHJvbGxlci5idXR0b25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgbGV0IGJ1dHRvbiA9IEdhbWVQYWRDb250cm9sbGVyLkJVVFRPTl9NQVBQSU5HW2ldO1xuICAgICAgICAgICAgICAgIGlmIChjb250cm9sbGVyLmJ1dHRvbnNbaV0ucHJlc3NlZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBsYXllci5oYW5kbGVCdXR0b25QcmVzcyhidXR0b24pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGxheWVyLmhhbmRsZUJ1dHRvblJlbGVhc2UoYnV0dG9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGxldCBsZWZ0Sm95c3RpY2sgPSBbY29udHJvbGxlci5heGVzWzBdLCBjb250cm9sbGVyLmF4ZXNbMV1dO1xuXG4gICAgICAgICAgICBpZiAobGVmdEpveXN0aWNrWzBdID4gMC4yNSl7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIuaGFuZGxlQnV0dG9uUmVsZWFzZShcIkxFRlRcIik7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIuaGFuZGxlQnV0dG9uUHJlc3MoXCJSSUdIVFwiKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobGVmdEpveXN0aWNrWzBdIDwgLTAuMjUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXllci5oYW5kbGVCdXR0b25SZWxlYXNlKFwiUklHSFRcIik7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIuaGFuZGxlQnV0dG9uUHJlc3MoXCJMRUZUXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gaWYgKGxlZnRKb3lzdGlja1sxXSA8IC0wLjI1KXtcbiAgICAgICAgICAgIC8vICAgICB0aGlzLnBsYXllci5oYW5kbGVCdXR0b25QcmVzcyhcIlVQXCIpO1xuICAgICAgICAgICAgLy8gfSBlbHNlIHtcbiAgICAgICAgICAgIC8vICAgICB0aGlzLnBsYXllci5oYW5kbGVCdXR0b25SZWxlYXNlKFwiVVBcIik7XG4gICAgICAgICAgICAvLyB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOlsiQ29udHJvbGxlciIsIkdhbWVQYWRDb250cm9sbGVyIiwiQlVUVE9OX01BUFBJTkciLCJjb25zdHJ1Y3RvciIsImdhbWVwYWQiLCJjdHgiLCJidXR0b25NYXBwaW5nIiwiR2FtZXBhZCIsImdhbWVMb29wIiwiYmluZCIsInNldEludGVydmFsIiwiZHJhdyIsImNsZWFyUmVjdCIsInBsYXllciIsImdhbWVwYWRzIiwibmF2aWdhdG9yIiwiZ2V0R2FtZXBhZHMiLCJjb250cm9sbGVyIiwiaW5kZXgiLCJpIiwiYnV0dG9ucyIsImxlbmd0aCIsImJ1dHRvbiIsInByZXNzZWQiLCJoYW5kbGVCdXR0b25QcmVzcyIsImhhbmRsZUJ1dHRvblJlbGVhc2UiLCJsZWZ0Sm95c3RpY2siLCJheGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/gamepad_controller.js\n");

/***/ }),

/***/ "./src/scripts/mainmenu.js":
/*!*********************************!*\
  !*** ./src/scripts/mainmenu.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MainMenu\": function() { return /* binding */ MainMenu; }\n/* harmony export */ });\n/* harmony import */ var _computer_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computer_controller */ \"./src/scripts/computer_controller.js\");\n/* harmony import */ var _controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controller */ \"./src/scripts/controller.js\");\n/* harmony import */ var _gamepad_controller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gamepad_controller */ \"./src/scripts/gamepad_controller.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n/* harmony import */ var _game_view__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./game_view */ \"./src/scripts/game_view.js\");\n\n\n\n\n\nclass MainMenu {\n  constructor(ctx, controller1ctx, controller2ctx) {\n    this.ctx = ctx;\n    this.controller1ctx = controller1ctx;\n    this.controller2ctx = controller2ctx;\n    this.gameStarted = false;\n    // this.startGame();\n    // this.loadFont();\n    this.computerplayer1 = true;\n    this.computerplayer2 = true;\n    this.difficulty1 = 5;\n    this.difficulty2 = 5;\n    this.controller1 = new _controller__WEBPACK_IMPORTED_MODULE_1__.Controller(null, 1, this.controller1ctx);\n    this.controller2 = new _controller__WEBPACK_IMPORTED_MODULE_1__.Controller(null, 2, this.controller2ctx);\n    this.bindMethods();\n    this.modalHolder = document.querySelector(\"#modal-holder\");\n    this.modal = document.querySelector(\"#modal\");\n    this.modalContent = document.querySelector(\"#main-modal-content\");\n    this.modalButtons = document.querySelector(\"#modal-buttons\");\n    this.addListeners();\n    this.draw();\n    // this.startGame();\n\n    this.generateModal1();\n  }\n  generateModal1() {\n    let ul = document.createElement('ul');\n    let li1 = document.createElement('li');\n    let li2 = document.createElement('li');\n    let li3 = document.createElement('li');\n    li1.innerText = \"Welcome to a fast-action, sword-clashing, two-player fighting game!\";\n    li2.innerText = \"Are you ready to challenge your opponent to an epic battle to the death?\";\n    li3.innerText = \"Can you defeat the hyper aggressive level 10 computer player?\";\n    ul.appendChild(li1);\n    ul.appendChild(li2);\n    ul.appendChild(li3);\n    this.modalContent.innerHTML = '';\n    this.modalContent.appendChild(ul);\n    let button1 = document.createElement('div');\n    let button2 = document.createElement('div');\n    button1.innerText = \"Start Game\";\n    button2.innerText = \"How to Play\";\n    this.modalButtons.innerHTML = '';\n    this.modalButtons.appendChild(button1);\n    this.modalButtons.appendChild(button2);\n    button1.addEventListener(\"click\", this.hideModal);\n    this.showModal();\n  }\n  generateModal2() {\n    let ul = document.createElement('ul');\n    let li1 = document.createElement('li');\n    let li2 = document.createElement('li');\n    li1.innerText = \"GAME\";\n    li2.innerText = \"PAUSED\";\n    ul.appendChild(li1);\n    ul.appendChild(li2);\n    li1.style.fontSize = \"8vh\";\n    li2.style.fontSize = \"8vh\";\n    ul.style.lineHeight = \"9vh\";\n    this.modalContent.innerHTML = '';\n    this.modalContent.appendChild(ul);\n    let button1 = document.createElement('div');\n    let button2 = document.createElement('div');\n    button1.innerText = \"Resume Game\";\n    button2.innerText = \"How to Play\";\n    this.modalButtons.innerHTML = '';\n    this.modalButtons.appendChild(button1);\n    this.modalButtons.appendChild(button2);\n    button1.addEventListener(\"click\", () => {\n      this.game.unpause();\n      this.hideModal();\n    });\n    this.showModal();\n  }\n  generateModal3() {\n    let ul = document.createElement('ul');\n    let li1 = document.createElement('li');\n    let li2 = document.createElement('li');\n    let li3 = document.createElement('li');\n    li1.innerText = \"Thank you for playing!\";\n    li2.innerText = `The winner is ${this.lastWinner}!`;\n    li3.innerText = \"Play Again?\";\n    ul.appendChild(li1);\n    ul.appendChild(li2);\n    ul.appendChild(li3);\n    this.modalContent.innerHTML = '';\n    this.modalContent.appendChild(ul);\n    let button1 = document.createElement('div');\n    let button2 = document.createElement('div');\n    button1.innerText = \"Play Again\";\n    button2.innerText = \"Watch Computers Fight\";\n    button2.style.fontSize = \"1.5vh\";\n    this.modalButtons.innerHTML = '';\n    this.modalButtons.appendChild(button1);\n    this.modalButtons.appendChild(button2);\n    button1.addEventListener(\"click\", this.hideModal);\n    button2.addEventListener(\"click\", this.startComputerGame);\n    button2.onmouseover = () => {\n      button2.style.fontSize = \"1.65vh\";\n      button2.style.margin = \"16px 0px\";\n      button2.style.padding = \"24px\";\n    };\n    button2.onmouseout = () => {\n      button2.style.fontSize = \"1.5vh\";\n      button2.style.margin = \"20px 0px\";\n      button2.style.padding = \"20px\";\n    };\n    this.showModal();\n  }\n  startComputerGame() {\n    this.computerplayer1 = true;\n    this.computerplayer2 = true;\n    this.difficulty1 = 10;\n    this.difficulty2 = 10;\n    this.hideModal();\n    this.startGame();\n  }\n  bindMethods() {\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.addGamePad = this.addGamePad.bind(this);\n    this.generateModal1 = this.generateModal1.bind(this);\n    this.generateModal2 = this.generateModal2.bind(this);\n    this.generateModal3 = this.generateModal3.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.startComputerGame = this.startComputerGame.bind(this);\n  }\n  showModal() {\n    this.modalHolder.style.display = \"flex\";\n  }\n  hideModal() {\n    this.modalHolder.style.display = \"none\";\n  }\n  addListeners() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n  removeListeners() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n  draw() {\n    // console.log('menu running')\n    this.ctx.clearRect(0, 0, 1920, 1080);\n    this.ctx.fillStyle = \"rgb(52,52,255)\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.font = \"30px 'Press Start 2P'\";\n    let lineHeight = 30;\n    this.ctx.fillText(\"Are you ready to fight?\", _game_view__WEBPACK_IMPORTED_MODULE_4__.GameView.WIDTH / 2, _game_view__WEBPACK_IMPORTED_MODULE_4__.GameView.HEIGHT * 0.25);\n    this.ctx.font = \"20px 'Press Start 2P'\";\n    let menuInfo = [\"H: Join as Player 1\", \"K: Join as Player 2\", \"\", \"W/S: Computer 1 Difficulty Level\", \"Up/Down: Computer 2 Difficulty Level\", \"\", \"Press spacebar to start the game\"];\n    for (let i = 0; i < menuInfo.length; i++) {\n      this.ctx.fillText(menuInfo[i], _game_view__WEBPACK_IMPORTED_MODULE_4__.GameView.WIDTH * 0.5, _game_view__WEBPACK_IMPORTED_MODULE_4__.GameView.HEIGHT * 0.45 + i * lineHeight);\n    }\n\n    // draw controllers\n    this.controller1.draw();\n    this.controller2.draw();\n\n    // show if human or computer player\n    let ctx = this.controller1ctx;\n    ctx.fillStyle = \"yellow\";\n    ctx.textAlign = \"left\";\n    ctx.font = \"24px 'Press Start 2P'\";\n    if (this.computerplayer1) {\n      ctx.fillText(`Level ${this.difficulty1} Computer`, 225, 40);\n    } else {\n      ctx.fillText(\"Human Player 1\", 225, 40);\n    }\n    ctx = this.controller2ctx;\n    ctx.fillStyle = \"yellow\";\n    ctx.textAlign = \"right\";\n    ctx.font = \"24px 'Press Start 2P'\";\n    if (this.computerplayer2) {\n      ctx.fillText(`Level ${this.difficulty2} Computer`, 425, 40);\n    } else {\n      ctx.fillText(\"Human Player 2\", 425, 40);\n    }\n    if (!this.gameStarted) {\n      requestAnimationFrame(this.draw.bind(this));\n    }\n  }\n  handleKeyDown(event) {\n    if (this.gameStarted) {\n      let button = event.key;\n      if (button === \"ESC\") {\n        if (this.game.paused) {\n          this.hideModal();\n          this.game.unpause();\n        } else {\n          this.game.pause();\n          this.generateModal2();\n        }\n      }\n    } else {\n      let button = event.key;\n      if (button === \"h\") {\n        this.togglePlayer1();\n      } else if (button === \"k\") {\n        this.togglePlayer2();\n      } else if (button === \" \") {\n        this.startGame();\n      } else if (button === \"w\") {\n        this.difficulty1 += 1;\n        if (this.difficulty1 > 10) {\n          this.difficulty1 = 10;\n        }\n      } else if (button === \"s\") {\n        this.difficulty1 -= 1;\n        if (this.difficulty1 < 1) {\n          this.difficulty1 = 1;\n        }\n      } else if (button === \"ArrowUp\") {\n        this.difficulty2 += 1;\n        if (this.difficulty2 > 10) {\n          this.difficulty2 = 10;\n        }\n      } else if (button === \"ArrowDown\") {\n        this.difficulty2 -= 1;\n        if (this.difficulty2 < 1) {\n          this.difficulty2 = 1;\n        }\n      }\n    }\n  }\n  restartMenu() {\n    let gameEnded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.addListeners();\n    this.controller1.removeListeners();\n    this.controller2.removeListeners();\n    this.controller1.addListeners();\n    this.controller2.addListeners();\n    this.gameStarted = false;\n    this.draw();\n    if (gameEnded) {\n      this.generateModal3();\n    }\n  }\n  startGame() {\n    // this.removeListeners();\n    this.gameStarted = true;\n    let cont1, cont2;\n    if (this.computerplayer1) {\n      this.controller1.removeListeners();\n      cont1 = new _computer_controller__WEBPACK_IMPORTED_MODULE_0__.ComputerController(null, 1, this.controller1ctx, null, this.difficulty1);\n    } else {\n      cont1 = this.controller1;\n    }\n    if (this.computerplayer2) {\n      this.controller2.removeListeners();\n      cont2 = new _computer_controller__WEBPACK_IMPORTED_MODULE_0__.ComputerController(null, 2, this.controller2ctx, null, this.difficulty2);\n    } else {\n      cont2 = this.controller2;\n    }\n    this.game = new _game__WEBPACK_IMPORTED_MODULE_3__.Game(this.ctx, cont1, cont2, this);\n    this.game.start();\n  }\n  stopGame() {\n    this.lastWinner = this.game.winner();\n    delete this.game;\n    this.restartMenu(true);\n  }\n  togglePlayer1() {\n    this.computerplayer1 = !this.computerplayer1;\n  }\n  togglePlayer2() {\n    this.computerplayer2 = !this.computerplayer2;\n  }\n  addGamePad(gamepad) {\n    if (this.controller1.gamepad === undefined) {\n      // console.log(\"player1 assigned controller\")\n      this.controller1.removeListeners();\n      this.computerplayer1 = false;\n      this.controller1 = new _gamepad_controller__WEBPACK_IMPORTED_MODULE_2__.GamePadController(gamepad, this.controller1ctx);\n    } else if (this.controller2.gamepad === undefined) {\n      // console.log(\"player2 assigned controller\")\n      this.controller2.removeListeners();\n      this.computerplayer2 = false;\n      this.controller2 = new _gamepad_controller__WEBPACK_IMPORTED_MODULE_2__.GamePadController(gamepad, this.controller2ctx);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/mainmenu.js\n");

/***/ }),

/***/ "./src/scripts/moveable.js":
/*!*********************************!*\
  !*** ./src/scripts/moveable.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Moveable\": function() { return /* binding */ Moveable; }\n/* harmony export */ });\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n/* harmony import */ var _game_view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game_view */ \"./src/scripts/game_view.js\");\n\n\nclass Moveable {\n  static GRAVITY = [0.5, 0.75];\n  constructor(options) {\n    this.pos = options[\"startpos\"];\n    this.vel = [0, 0];\n    this.FLOOR = options[\"floor\"];\n  }\n  move() {\n    if (this.pos[1] === this.FLOOR && this.currentAction !== \"run\") {\n      if (this.vel[0] < -Moveable.GRAVITY[0]) {\n        this.vel[0] += Moveable.GRAVITY[0];\n      } else if (this.vel[0] > Moveable.GRAVITY[0]) {\n        this.vel[0] -= Moveable.GRAVITY[0];\n      } else {\n        this.vel[0] = 0;\n      }\n    }\n    this.pos[0] += this.vel[0];\n    this.vel[1] += Moveable.GRAVITY[1];\n    this.pos[1] += this.vel[1];\n    this.checkFloor();\n    this.checkFacing();\n  }\n  setFloor(floor) {\n    this.FLOOR = floor;\n  }\n  checkFloor() {\n    if (this.pos[1] > this.FLOOR) {\n      this.vel[1] = 0;\n      this.pos[1] = this.FLOOR;\n    }\n  }\n  checkFacing() {\n    if (this.vel[0] < 0) {\n      this.xFacing = -1;\n    } else if (this.vel[0] > 0) {\n      this.xFacing = 1;\n    }\n  }\n  draw() {\n    throw new Error(\"Draw not implemented?\");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tb3ZlYWJsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEI7QUFDUztBQUVoQyxNQUFNRSxRQUFRLENBQUM7RUFDbEIsT0FBT0MsT0FBTyxHQUFHLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQztFQUU1QkMsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFFO0lBQ2pCLElBQUksQ0FBQ0MsR0FBRyxHQUFHRCxPQUFPLENBQUMsVUFBVSxDQUFDO0lBQzlCLElBQUksQ0FBQ0UsR0FBRyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNqQixJQUFJLENBQUNDLEtBQUssR0FBR0gsT0FBTyxDQUFDLE9BQU8sQ0FBQztFQUNqQztFQUVBSSxJQUFJQSxDQUFBLEVBQUc7SUFDSCxJQUFJLElBQUksQ0FBQ0gsR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQ0UsS0FBSyxJQUFJLElBQUksQ0FBQ0UsYUFBYSxLQUFLLEtBQUssRUFBRTtNQUM1RCxJQUFJLElBQUksQ0FBQ0gsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUNMLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ3BDLElBQUksQ0FBQ0ksR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJTCxRQUFRLENBQUNDLE9BQU8sQ0FBQyxDQUFDLENBQUM7TUFDdEMsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUdMLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQzFDLElBQUksQ0FBQ0ksR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJTCxRQUFRLENBQUNDLE9BQU8sQ0FBQyxDQUFDLENBQUM7TUFDdEMsQ0FBQyxNQUFNO1FBQ0gsSUFBSSxDQUFDSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztNQUNuQjtJQUNKO0lBQ0EsSUFBSSxDQUFDRCxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFCLElBQUksQ0FBQ0EsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJTCxRQUFRLENBQUNDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDbEMsSUFBSSxDQUFDRyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBRTFCLElBQUksQ0FBQ0ksVUFBVSxDQUFDLENBQUM7SUFDakIsSUFBSSxDQUFDQyxXQUFXLENBQUMsQ0FBQztFQUN0QjtFQUVBQyxRQUFRQSxDQUFDQyxLQUFLLEVBQUU7SUFDWixJQUFJLENBQUNOLEtBQUssR0FBR00sS0FBSztFQUN0QjtFQUVBSCxVQUFVQSxDQUFBLEVBQUc7SUFDVCxJQUFJLElBQUksQ0FBQ0wsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQ0UsS0FBSyxFQUFFO01BQzFCLElBQUksQ0FBQ0QsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7TUFDZixJQUFJLENBQUNELEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUNFLEtBQUs7SUFDNUI7RUFDSjtFQUVBSSxXQUFXQSxDQUFBLEVBQUc7SUFDVixJQUFJLElBQUksQ0FBQ0wsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRTtNQUNqQixJQUFJLENBQUNRLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDckIsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDUixHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFO01BQ3hCLElBQUksQ0FBQ1EsT0FBTyxHQUFHLENBQUM7SUFDcEI7RUFDSjtFQUVBQyxJQUFJQSxDQUFBLEVBQUc7SUFDSCxNQUFNLElBQUlDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQztFQUM1QztBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNwcm9qZWN0Ly4vc3JjL3NjcmlwdHMvbW92ZWFibGUuanM/OTFiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHYW1lIH0gZnJvbSBcIi4vZ2FtZVwiO1xuaW1wb3J0IHsgR2FtZVZpZXcgfSBmcm9tIFwiLi9nYW1lX3ZpZXdcIjtcblxuZXhwb3J0IGNsYXNzIE1vdmVhYmxlIHtcbiAgICBzdGF0aWMgR1JBVklUWSA9IFswLjUsIDAuNzVdO1xuXG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgICAgICB0aGlzLnBvcyA9IG9wdGlvbnNbXCJzdGFydHBvc1wiXTtcbiAgICAgICAgdGhpcy52ZWwgPSBbMCwgMF07XG4gICAgICAgIHRoaXMuRkxPT1IgPSBvcHRpb25zW1wiZmxvb3JcIl07XG4gICAgfVxuXG4gICAgbW92ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMucG9zWzFdID09PSB0aGlzLkZMT09SICYmIHRoaXMuY3VycmVudEFjdGlvbiAhPT0gXCJydW5cIikge1xuICAgICAgICAgICAgaWYgKHRoaXMudmVsWzBdIDwgLU1vdmVhYmxlLkdSQVZJVFlbMF0pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnZlbFswXSArPSBNb3ZlYWJsZS5HUkFWSVRZWzBdO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnZlbFswXSA+IE1vdmVhYmxlLkdSQVZJVFlbMF0pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnZlbFswXSAtPSBNb3ZlYWJsZS5HUkFWSVRZWzBdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnZlbFswXSA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wb3NbMF0gKz0gdGhpcy52ZWxbMF07XG4gICAgICAgIHRoaXMudmVsWzFdICs9IE1vdmVhYmxlLkdSQVZJVFlbMV07XG4gICAgICAgIHRoaXMucG9zWzFdICs9IHRoaXMudmVsWzFdO1xuXG4gICAgICAgIHRoaXMuY2hlY2tGbG9vcigpO1xuICAgICAgICB0aGlzLmNoZWNrRmFjaW5nKCk7XG4gICAgfVxuXG4gICAgc2V0Rmxvb3IoZmxvb3IpIHtcbiAgICAgICAgdGhpcy5GTE9PUiA9IGZsb29yO1xuICAgIH1cblxuICAgIGNoZWNrRmxvb3IoKSB7XG4gICAgICAgIGlmICh0aGlzLnBvc1sxXSA+IHRoaXMuRkxPT1IpIHtcbiAgICAgICAgICAgIHRoaXMudmVsWzFdID0gMDtcbiAgICAgICAgICAgIHRoaXMucG9zWzFdID0gdGhpcy5GTE9PUjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNoZWNrRmFjaW5nKCkge1xuICAgICAgICBpZiAodGhpcy52ZWxbMF0gPCAwKSB7XG4gICAgICAgICAgICB0aGlzLnhGYWNpbmcgPSAtMTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnZlbFswXSA+IDApIHtcbiAgICAgICAgICAgIHRoaXMueEZhY2luZyA9IDE7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkcmF3KCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEcmF3IG5vdCBpbXBsZW1lbnRlZD9cIilcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiR2FtZSIsIkdhbWVWaWV3IiwiTW92ZWFibGUiLCJHUkFWSVRZIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwicG9zIiwidmVsIiwiRkxPT1IiLCJtb3ZlIiwiY3VycmVudEFjdGlvbiIsImNoZWNrRmxvb3IiLCJjaGVja0ZhY2luZyIsInNldEZsb29yIiwiZmxvb3IiLCJ4RmFjaW5nIiwiZHJhdyIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/moveable.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Player\": function() { return /* binding */ Player; }\n/* harmony export */ });\n/* harmony import */ var _Characters_commander_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Characters/commander.js */ \"./src/scripts/Characters/commander.js\");\n/* harmony import */ var _Characters_samurai_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Characters/samurai.js */ \"./src/scripts/Characters/samurai.js\");\n/* harmony import */ var _game_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./game.js */ \"./src/scripts/game.js\");\n/* harmony import */ var _moveable_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./moveable.js */ \"./src/scripts/moveable.js\");\n\n\n\n\nclass Player extends _moveable_js__WEBPACK_IMPORTED_MODULE_3__.Moveable {\n  constructor(options) {\n    // let options = {startpos: startpos};\n    super(options);\n    this.name = options[\"name\"];\n    if (this.name === \"player1\") {\n      this.xFacing = 1;\n      this.character = new _Characters_samurai_js__WEBPACK_IMPORTED_MODULE_1__.Samurai(this); // change later when introduce other sprites?\n    } else {\n      this.xFacing = -1;\n      this.character = new _Characters_commander_js__WEBPACK_IMPORTED_MODULE_0__.Commander(this); // change later when introduce other sprites?\n    }\n\n    this.moveSpeed = 10;\n    this.scale = 3.15;\n    this.health = 100;\n    this.currentAction = \"idle\";\n    this.renderBoxes = false;\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n    this.handleButtonRelease = this.handleButtonRelease.bind(this);\n    this.stun = this.stun.bind(this);\n    this.unstun = this.unstun.bind(this);\n    this.runAnimationState = this.runAnimationState.bind(this);\n    this.stunned = false;\n    this.runAnimation = true;\n    // console.log(`${name} created successfully`)\n  }\n\n  draw(ctx) {\n    this.move();\n    if (this.runAnimation) {\n      this.character.currentAction(this.currentAction);\n    }\n    this.character.draw(ctx, this.pos, this.scale);\n  }\n  assignController(controller) {\n    this.controller = controller;\n    this.controller.assignPlayer(this);\n  }\n  getHurtBoxes(main_scale) {\n    if (this.character.hurtboxes) {\n      return this.calculateBoxes(main_scale, this.character.hurtboxes);\n    } else {\n      return [];\n    }\n  }\n  getHitBoxes(main_scale) {\n    if (this.character.hitboxes) {\n      return this.calculateBoxes(main_scale, this.character.hitboxes);\n    } else {\n      return [];\n    }\n  }\n  calculateBoxes(main_scale, boxes) {\n    let objBoxes = boxes;\n    let pos = this.pos;\n    let xFacing = this.xFacing;\n    let scale = this.scale;\n    let frameWidth = this.character.frameWidth;\n    let outputBoxes = [];\n    for (let k = 0; k < objBoxes.length; k++) {\n      let box = objBoxes[k].slice();\n      if (xFacing === 1) {\n        box[0] = pos[0] - frameWidth * scale / 2 + box[0] * scale;\n      } else {\n        box[0] = pos[0] + frameWidth * scale / 2 - box[0] * scale - box[2] * scale;\n      }\n      box[1] = pos[1] + box[1] * scale;\n      box[2] *= scale;\n      box[3] *= scale;\n      box[0] *= main_scale;\n      box[1] *= main_scale;\n      box[2] *= main_scale;\n      box[3] *= main_scale;\n      outputBoxes.push(box);\n    }\n    return outputBoxes;\n  }\n  toggleRenderBoxes() {\n    this.renderBoxes = !this.renderBoxes;\n  }\n  handleButtonPress(button) {\n    if (!this.stunned) {\n      let moves = this.character.possibleMoves[this.currentAction];\n      switch (button) {\n        case 'LEFT':\n          if (moves.includes(\"run\")) {\n            this.vel[0] = -1 * this.moveSpeed;\n            this.currentAction = \"run\";\n          } else {\n            this.vel[0] = -1 * this.moveSpeed;\n          }\n          break;\n        case 'RIGHT':\n          if (moves.includes(\"run\")) {\n            this.vel[0] = 1 * this.moveSpeed;\n            this.currentAction = \"run\";\n          } else {\n            this.vel[0] = 1 * this.moveSpeed;\n          }\n          break;\n        case 'UP':\n          if (this.pos[1] === this.FLOOR && moves.includes(\"jump\")) {\n            this.vel[1] = -2 * this.moveSpeed;\n            this.currentAction = \"jump\";\n          }\n          break;\n        case 'B':\n          if (moves.includes(\"attack1\")) {\n            this.currentAction = \"attack1\";\n          }\n          break;\n        case 'Y':\n          if (moves.includes(\"attack2\")) {\n            this.currentAction = \"attack2\";\n          }\n          break;\n        case 'X':\n          if (moves.includes(\"attack3\")) {\n            this.currentAction = \"attack3\";\n          }\n          break;\n      }\n    }\n  }\n  handleButtonRelease(button) {\n    if (!this.stunned) {\n      switch (button) {\n        case 'LEFT':\n          if (this.vel[0] < 0 && this.currentAction === \"run\") {\n            this.vel[0] = 0;\n            this.character.stopAction(\"run\");\n          }\n          break;\n        case 'RIGHT':\n          if (this.vel[0] > 0 && this.currentAction === \"run\") {\n            this.vel[0] = 0;\n            this.character.stopAction(\"run\");\n          }\n          break;\n      }\n    }\n  }\n  stun(duration) {\n    this.stunned = true;\n    if (duration) {\n      setTimeout(this.unstun, duration);\n    }\n  }\n  unstun() {\n    this.stunned = false;\n  }\n  runAnimationState() {\n    let bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this.runAnimation = bool;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;