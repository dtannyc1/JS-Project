/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game_view */ \"./src/scripts/game_view.js\");\n/* harmony import */ var _scripts_mainmenu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/mainmenu */ \"./src/scripts/mainmenu.js\");\n\n\nlet canvas = document.querySelector(\"#main-canvas\");\nconst ctx = canvas.getContext(\"2d\");\nlet controller1canvas = document.querySelector(\"#controller1\");\ncontroller1canvas.width = 663;\ncontroller1canvas.height = 227;\nconst controller1ctx = controller1canvas.getContext(\"2d\");\nlet controller2canvas = document.querySelector(\"#controller2\");\ncontroller2canvas.width = 663;\ncontroller2canvas.height = 227;\nconst controller2ctx = controller2canvas.getContext(\"2d\");\ncanvas.width = _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__.GameView.WIDTH;\ncanvas.height = _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__.GameView.HEIGHT;\ncanvas.style.backgroundColor = \"black\";\nlet menu = new _scripts_mainmenu__WEBPACK_IMPORTED_MODULE_1__.MainMenu(ctx, controller1ctx, controller2ctx);\nfunction controllerConnectListener(event) {\n  menu.addGamePad(event.gamepad);\n}\nwindow.addEventListener(\"gamepadconnected\", controllerConnectListener);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQStDO0FBQ0Q7QUFFOUMsSUFBSUUsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxjQUFjLENBQUM7QUFDbkQsTUFBTUMsR0FBRyxHQUFHSCxNQUFNLENBQUNJLFVBQVUsQ0FBQyxJQUFJLENBQUM7QUFFbkMsSUFBSUMsaUJBQWlCLEdBQUdKLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLGNBQWMsQ0FBQztBQUM5REcsaUJBQWlCLENBQUNDLEtBQUssR0FBRyxHQUFHO0FBQzdCRCxpQkFBaUIsQ0FBQ0UsTUFBTSxHQUFHLEdBQUc7QUFDOUIsTUFBTUMsY0FBYyxHQUFHSCxpQkFBaUIsQ0FBQ0QsVUFBVSxDQUFDLElBQUksQ0FBQztBQUV6RCxJQUFJSyxpQkFBaUIsR0FBR1IsUUFBUSxDQUFDQyxhQUFhLENBQUMsY0FBYyxDQUFDO0FBQzlETyxpQkFBaUIsQ0FBQ0gsS0FBSyxHQUFHLEdBQUc7QUFDN0JHLGlCQUFpQixDQUFDRixNQUFNLEdBQUcsR0FBRztBQUM5QixNQUFNRyxjQUFjLEdBQUdELGlCQUFpQixDQUFDTCxVQUFVLENBQUMsSUFBSSxDQUFDO0FBRXpESixNQUFNLENBQUNNLEtBQUssR0FBR1IsOERBQWM7QUFDN0JFLE1BQU0sQ0FBQ08sTUFBTSxHQUFHVCwrREFBZTtBQUMvQkUsTUFBTSxDQUFDYSxLQUFLLENBQUNDLGVBQWUsR0FBRyxPQUFPO0FBRXRDLElBQUlDLElBQUksR0FBRyxJQUFJaEIsdURBQVEsQ0FBQ0ksR0FBRyxFQUFFSyxjQUFjLEVBQUVFLGNBQWMsQ0FBQztBQUU1RCxTQUFTTSx5QkFBeUJBLENBQUNDLEtBQUssRUFBRTtFQUN0Q0YsSUFBSSxDQUFDRyxVQUFVLENBQUNELEtBQUssQ0FBQ0UsT0FBTyxDQUFDO0FBQ2xDO0FBRUFDLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUVMLHlCQUF5QixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVsZW50bGVzc19jbGFzaC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdhbWVWaWV3IH0gZnJvbSBcIi4vc2NyaXB0cy9nYW1lX3ZpZXdcIjtcbmltcG9ydCB7IE1haW5NZW51IH0gZnJvbSBcIi4vc2NyaXB0cy9tYWlubWVudVwiO1xuXG5sZXQgY2FudmFzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtYWluLWNhbnZhc1wiKTtcbmNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG5cbmxldCBjb250cm9sbGVyMWNhbnZhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY29udHJvbGxlcjFcIilcbmNvbnRyb2xsZXIxY2FudmFzLndpZHRoID0gNjYzO1xuY29udHJvbGxlcjFjYW52YXMuaGVpZ2h0ID0gMjI3O1xuY29uc3QgY29udHJvbGxlcjFjdHggPSBjb250cm9sbGVyMWNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG5cbmxldCBjb250cm9sbGVyMmNhbnZhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY29udHJvbGxlcjJcIilcbmNvbnRyb2xsZXIyY2FudmFzLndpZHRoID0gNjYzO1xuY29udHJvbGxlcjJjYW52YXMuaGVpZ2h0ID0gMjI3O1xuY29uc3QgY29udHJvbGxlcjJjdHggPSBjb250cm9sbGVyMmNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG5cbmNhbnZhcy53aWR0aCA9IEdhbWVWaWV3LldJRFRIO1xuY2FudmFzLmhlaWdodCA9IEdhbWVWaWV3LkhFSUdIVDtcbmNhbnZhcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcImJsYWNrXCI7XG5cbmxldCBtZW51ID0gbmV3IE1haW5NZW51KGN0eCwgY29udHJvbGxlcjFjdHgsIGNvbnRyb2xsZXIyY3R4KTtcblxuZnVuY3Rpb24gY29udHJvbGxlckNvbm5lY3RMaXN0ZW5lcihldmVudCkge1xuICAgIG1lbnUuYWRkR2FtZVBhZChldmVudC5nYW1lcGFkKTtcbn1cblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJnYW1lcGFkY29ubmVjdGVkXCIsIGNvbnRyb2xsZXJDb25uZWN0TGlzdGVuZXIpO1xuIl0sIm5hbWVzIjpbIkdhbWVWaWV3IiwiTWFpbk1lbnUiLCJjYW52YXMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjdHgiLCJnZXRDb250ZXh0IiwiY29udHJvbGxlcjFjYW52YXMiLCJ3aWR0aCIsImhlaWdodCIsImNvbnRyb2xsZXIxY3R4IiwiY29udHJvbGxlcjJjYW52YXMiLCJjb250cm9sbGVyMmN0eCIsIldJRFRIIiwiSEVJR0hUIiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJtZW51IiwiY29udHJvbGxlckNvbm5lY3RMaXN0ZW5lciIsImV2ZW50IiwiYWRkR2FtZVBhZCIsImdhbWVwYWQiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/Backgrounds/train.js":
/*!******************************************!*\
  !*** ./src/scripts/Backgrounds/train.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Train\": function() { return /* binding */ Train; }\n/* harmony export */ });\nclass Train {\n  static BACKGROUND_OFFSET_X = -400;\n  static BACKGROUND_OFFSET_Y = -200;\n  static BACKGROUND_SCALE = 0.9;\n  static CAMERA_LIMIT_LEFT = -400;\n  static CAMERA_LIMIT_RIGHT = 225;\n  static FLOOR = 175;\n  static BACKGROUND_IMAGES = [[\"assets/images/Backgrounds/Postapocalypce4/Bright/bg.png\", 0], [\"assets/images/Backgrounds/Postapocalypce4/Bright/rail&wall.png\", 0.25], [\"assets/images/Backgrounds/Postapocalypce4/Bright/train.png\", 0.5], [\"assets/images/Backgrounds/Postapocalypce4/Bright/columns&floor.png\", 0.75]];\n  static FOREGROUND_IMAGES = [[\"assets/images/Backgrounds/Postapocalypce4/Bright/infopost&wires.png\", 1], [\"assets/images/Backgrounds/Postapocalypce4/Bright/wires.png\", 1], [\"assets/images/Backgrounds/Postapocalypce4/Bright/floor&underfloor.png\", 1]];\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.CAMERA_LIMIT_LEFT = Train.CAMERA_LIMIT_LEFT;\n    this.CAMERA_LIMIT_RIGHT = Train.CAMERA_LIMIT_RIGHT;\n    this.FLOOR = Train.FLOOR;\n    let body = document.querySelector(\"body\");\n    this.backgroundImgs = [];\n    this.foregroundImgs = [];\n    for (let i = 0; i < Train.BACKGROUND_IMAGES.length; i++) {\n      let img = document.createElement('img');\n      img.src = Train.BACKGROUND_IMAGES[i][0];\n      img.id = `background-${i}`;\n      img.hidden = true;\n      body.appendChild(img);\n      this.backgroundImgs.push(img);\n    }\n    for (let i = 0; i < Train.FOREGROUND_IMAGES.length; i++) {\n      let img = document.createElement('img');\n      img.src = Train.FOREGROUND_IMAGES[i][0];\n      img.id = `foreground-${i}`;\n      img.hidden = true;\n      body.appendChild(img);\n      this.foregroundImgs.push(img);\n    }\n  }\n  drawBackground(camera_location, scale) {\n    this.ctx.resetTransform();\n    for (let i = 0; i < Train.BACKGROUND_IMAGES.length; i++) {\n      let multiplier = Train.BACKGROUND_IMAGES[i][1];\n      let sx = -scale * (Train.BACKGROUND_OFFSET_X - camera_location * multiplier);\n      let sy = -scale * Train.BACKGROUND_OFFSET_Y;\n      let sw = 720 / Train.BACKGROUND_SCALE / scale;\n      let sh = 540 / Train.BACKGROUND_SCALE / scale;\n      this.ctx.drawImage(this.backgroundImgs[i], sx, sy, sw, sh, 0, 0, 720, 540);\n    }\n  }\n  drawForeground(camera_location, scale) {\n    this.ctx.resetTransform();\n    for (let i = 0; i < Train.FOREGROUND_IMAGES.length; i++) {\n      let multiplier = Train.FOREGROUND_IMAGES[i][1];\n      let sx = -(Train.BACKGROUND_OFFSET_X - camera_location * multiplier) / scale;\n      let sy = -Train.BACKGROUND_OFFSET_Y / scale;\n      let sw = 720 / Train.BACKGROUND_SCALE / scale;\n      let sh = 540 / Train.BACKGROUND_SCALE / scale;\n      this.ctx.drawImage(this.foregroundImgs[i], sx, sy, sw, sh, 0, 0, 720, 540);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Backgrounds/train.js\n");

/***/ }),

/***/ "./src/scripts/Backgrounds/war.js":
/*!****************************************!*\
  !*** ./src/scripts/Backgrounds/war.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"War\": function() { return /* binding */ War; }\n/* harmony export */ });\nclass War {\n  static BACKGROUND_OFFSET_X = -400;\n  static BACKGROUND_OFFSET_Y = -150;\n  static BACKGROUND_SCALE = 0.85;\n  static CAMERA_LIMIT_LEFT = -400;\n  static CAMERA_LIMIT_RIGHT = 190;\n  static FLOOR = 240;\n  static BACKGROUND_IMAGES = [[\"assets/images/Backgrounds/War3/Bright/sky_sun.png\", 0], [\"assets/images/Backgrounds/War3/Bright/houses3.png\", 0.25], [\"assets/images/Backgrounds/War3/Bright/houses2.png\", 0.5], [\"assets/images/Backgrounds/War3/Bright/trees.png\", 0.75], [\"assets/images/Backgrounds/War3/Bright/house&fountain.png\", 0.75]];\n  static FOREGROUND_IMAGES = [[\"assets/images/Backgrounds/War3/Bright/fence.png\", 1], [\"assets/images/Backgrounds/War3/Bright/road.png\", 1]];\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.FLOOR = War.FLOOR;\n    this.CAMERA_LIMIT_LEFT = War.CAMERA_LIMIT_LEFT;\n    this.CAMERA_LIMIT_RIGHT = War.CAMERA_LIMIT_RIGHT;\n    let body = document.querySelector(\"body\");\n    this.backgroundImgs = [];\n    this.foregroundImgs = [];\n    for (let i = 0; i < War.BACKGROUND_IMAGES.length; i++) {\n      let img = document.createElement('img');\n      img.src = War.BACKGROUND_IMAGES[i][0];\n      img.id = `background-${i}`;\n      img.hidden = true;\n      body.appendChild(img);\n      this.backgroundImgs.push(img);\n    }\n    for (let i = 0; i < War.FOREGROUND_IMAGES.length; i++) {\n      let img = document.createElement('img');\n      img.src = War.FOREGROUND_IMAGES[i][0];\n      img.id = `foreground-${i}`;\n      img.hidden = true;\n      body.appendChild(img);\n      this.foregroundImgs.push(img);\n    }\n  }\n  drawBackground(camera_location, scale) {\n    this.ctx.resetTransform();\n    for (let i = 0; i < War.BACKGROUND_IMAGES.length; i++) {\n      let multiplier = War.BACKGROUND_IMAGES[i][1];\n      let sx = -scale * (War.BACKGROUND_OFFSET_X - camera_location * multiplier);\n      let sy = -scale * War.BACKGROUND_OFFSET_Y;\n      let sw = 720 / War.BACKGROUND_SCALE / scale;\n      let sh = 540 / War.BACKGROUND_SCALE / scale;\n      this.ctx.drawImage(this.backgroundImgs[i], sx, sy, sw, sh, 0, 0, 720, 540);\n    }\n  }\n  drawForeground(camera_location, scale) {\n    this.ctx.resetTransform();\n    for (let i = 0; i < War.FOREGROUND_IMAGES.length; i++) {\n      let multiplier = War.FOREGROUND_IMAGES[i][1];\n      let sx = -(War.BACKGROUND_OFFSET_X - camera_location * multiplier) / scale;\n      let sy = -War.BACKGROUND_OFFSET_Y / scale;\n      let sw = 720 / War.BACKGROUND_SCALE / scale;\n      let sh = 540 / War.BACKGROUND_SCALE / scale;\n      this.ctx.drawImage(this.foregroundImgs[i], sx, sy, sw, sh, 0, 0, 720, 540);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Backgrounds/war.js\n");

/***/ }),

/***/ "./src/scripts/Characters/commander.js":
/*!*********************************************!*\
  !*** ./src/scripts/Characters/commander.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Commander\": function() { return /* binding */ Commander; }\n/* harmony export */ });\n/* harmony import */ var _general_character__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./general_character */ \"./src/scripts/Characters/general_character.js\");\n\nclass Commander extends _general_character__WEBPACK_IMPORTED_MODULE_0__.GeneralCharacter {\n  // Specific constants for Commander Sprite Sheet\n  static imgSrc = \"assets/images/Sprite Sheets/Samurai_Commander/SamuraiCommanderSheet.png\";\n  static frameWidth = 128;\n  static frameHeight = 128;\n  static animationFrameInfo = {\n    idle: {\n      framenum: 0,\n      originY: 0,\n      frames: Array(5).fill(12),\n      hurtboxes: [[[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]]]\n    },\n    run: {\n      framenum: 0,\n      originY: 1,\n      frames: Array(8).fill(6),\n      hurtboxes: [[[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]]]\n    },\n    walk: {\n      framenum: 0,\n      originY: 2,\n      frames: [4, 4, 4, 4, 4, 4, 4, 4, 4]\n    },\n    jump: {\n      framenum: 0,\n      originY: 3,\n      frames: [8, 8, 10, 9, 9, 8, 8],\n      // + 11\n      hurtboxes: [[[62, 68, 14, 14], [55, 80, 22, 30], [54, 110, 32, 16]], [[64, 48, 13, 14], [56, 59, 21, 35], [53, 92, 20, 28]], [[64, 53, 13, 14], [59, 62, 20, 30], [61, 89, 28, 22]], [[65, 53, 12, 14], [58, 63, 23, 29], [61, 93, 28, 20]], [[64, 55, 14, 14], [54, 67, 22, 32], [48, 99, 23, 21]], [[65, 80, 12, 15], [53, 86, 26, 27], [57, 110, 27, 16]], [[65, 80, 12, 15], [53, 86, 26, 27], [57, 110, 26, 16]]]\n    },\n    attack1: {\n      framenum: 0,\n      originY: 4,\n      frames: [2, 2, 3, 3],\n      hurtboxes: [[[48, 60, 16, 15], [43, 73, 27, 36], [34, 108, 41, 18]], [[48, 60, 16, 15], [43, 73, 27, 36], [34, 108, 41, 18]], [[59, 60, 15, 15], [42, 72, 42, 38], [34, 108, 41, 18]], [[58, 60, 17, 15], [41, 72, 34, 36], [36, 109, 40, 18]]],\n      hitboxes: [[0, 0, 0, 0], [0, 0, 0, 0], [83, 68, 38, 35], [79, 67, 37, 11]]\n    },\n    attack2: {\n      framenum: 0,\n      originY: 6,\n      frames: [6, 8, 6, 5],\n      hurtboxes: [[[63, 65, 13, 15], [43, 79, 33, 32], [35, 109, 39, 17]], [[56, 60, 12, 15], [47, 73, 24, 40], [35, 109, 39, 17]], [[61, 62, 10, 10], [44, 72, 34, 29], [35, 100, 40, 26]], [[61, 62, 10, 10], [44, 72, 34, 29], [35, 100, 40, 26]]],\n      hitboxes: [[0, 0, 0, 0], [0, 0, 0, 0], [84, 57, 32, 41], [83, 55, 15, 17]]\n    },\n    attack3: {\n      framenum: 0,\n      originY: 5,\n      frames: [3, 6, 8, 4, 4],\n      hurtboxes: [[[51, 59, 14, 11], [51, 69, 22, 39], [44, 107, 33, 19]], [[54, 59, 13, 10], [52, 69, 20, 38], [44, 108, 31, 18]], [[54, 59, 13, 10], [52, 69, 20, 38], [44, 108, 31, 18]], [[55, 59, 13, 13], [55, 72, 22, 34], [44, 104, 36, 22]], [[72, 65, 13, 15], [51, 79, 33, 30], [45, 108, 38, 18]]],\n      hitboxes: [[31, 50, 42, 9], [43, 27, 29, 28], [56, 21, 19, 32], [87, 28, 11, 37], [87, 75, 39, 35]]\n    },\n    hurt: {\n      framenum: 0,\n      originY: 7,\n      frames: [4, 4, 4],\n      hurtboxes: [[[46, 58, 13, 14], [46, 71, 24, 37], [43, 107, 28, 19]], [[45, 57, 13, 15], [45, 71, 23, 36], [43, 103, 29, 23]], [[44, 58, 13, 14], [44, 70, 24, 37], [42, 104, 31, 22]]]\n    },\n    dead: {\n      framenum: 0,\n      originY: 8,\n      frames: [4, 4, 6, 30, 6, 1000]\n    },\n    guard: {\n      framenum: 0,\n      originY: 9,\n      frames: [2, 2]\n    }\n  };\n  static POSSIBLE_MOVES = {\n    idle: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    run: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    walk: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    jump: [\"idle\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    attack1: [\"idle\", \"hurt\", \"dead\"],\n    attack2: [\"idle\", \"hurt\", \"dead\"],\n    attack3: [\"idle\", \"hurt\", \"dead\"],\n    hurt: [\"idle\", \"hurt\", \"dead\"],\n    dead: [],\n    guard: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"]\n  };\n  static SINGLE_ACTIONS = [\"attack1\", \"attack2\", \"attack3\", \"jump\", \"hurt\"];\n\n  // Class Methods:\n  constructor(player) {\n    super(player, Commander.imgSrc, Commander.frameWidth, Commander.frameHeight, Commander.animationFrameInfo, Commander.SINGLE_ACTIONS);\n    this.possibleMoves = Commander.POSSIBLE_MOVES;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Characters/commander.js\n");

/***/ }),

/***/ "./src/scripts/Characters/general_character.js":
/*!*****************************************************!*\
  !*** ./src/scripts/Characters/general_character.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GeneralCharacter\": function() { return /* binding */ GeneralCharacter; }\n/* harmony export */ });\nclass GeneralCharacter {\n  constructor(player, src, frameWidth, frameHeight, animationFrameInfo, singleActions) {\n    let body = document.querySelector(\"body\");\n    let img = document.createElement('img');\n    img.src = src;\n    img.id = `${player.name}-sprite`;\n    img.hidden = true;\n    body.appendChild(img);\n    this.player = player;\n    this.img = document.getElementById(img.id);\n    this.frameWidth = frameWidth;\n    this.frameHeight = frameHeight;\n    this.animationFrameInfo = animationFrameInfo;\n    this.singleActions = singleActions;\n    this.framePosX = 0;\n    this.framePosY = 0;\n    this.draw = this.draw.bind(this);\n    this.currentAction = this.currentAction.bind(this);\n    this.stopAction = this.stopAction.bind(this);\n    this.animate = this.animate.bind(this);\n    this.resetHurtBoxes();\n    this.resetHitBox();\n  }\n  draw(ctx, pos, scale) {\n    ctx.translate(pos[0], pos[1]);\n    if (this.player.xFacing === -1) {\n      ctx.scale(-1, 1);\n    }\n    ctx.drawImage(this.img, this.framePosX, this.framePosY, this.frameWidth, this.frameHeight, -this.frameWidth * scale / 2, 0, this.frameWidth * scale, this.frameHeight * scale);\n    ctx.scale(scale, scale);\n    ctx.translate(-this.frameWidth / 2, 0);\n    if (this.player.renderBoxes) {\n      // render hurtboxes\n      ctx.fillStyle = \"#00ff0050\";\n      this.hurtboxes.forEach(box => {\n        ctx.fillRect(...box);\n      });\n\n      // render hitbox\n      ctx.fillStyle = \"#ff000050\";\n      this.hitboxes.forEach(box => {\n        ctx.fillRect(...box);\n      });\n    }\n  }\n  currentAction(name) {\n    // console.log(this.prototype)\n    if (this.singleActions.includes(name)) {\n      this.animate(name, true);\n    } else {\n      this.animate(name);\n    }\n  }\n  stopAction(name) {\n    // reset animation\n    this.animationFrameInfo[name].framenum = 0;\n    if (this.player.controller.heldButtons.length > 0) {\n      let arr = this.player.controller.heldButtons;\n      let button = arr[arr.length - 1];\n      switch (button) {\n        case 'LEFT':\n          this.player.vel[0] = -1 * this.player.moveSpeed;\n          this.player.currentAction = \"run\";\n          break;\n        case 'RIGHT':\n          this.player.vel[0] = this.player.moveSpeed;\n          this.player.currentAction = \"run\";\n          break;\n        default:\n          this.player.currentAction = \"idle\";\n          break;\n      }\n    } else {\n      this.player.currentAction = \"idle\";\n    }\n  }\n  animate(name) {\n    let playOnce = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    // increment frame number\n    this.animationFrameInfo[name].framenum += 1;\n    let frameNum = this.animationFrameInfo[name].framenum;\n    let totalFrames = this.animationFrameInfo[name].frames.reduce((a, b) => a + b, 0);\n    if (playOnce && frameNum >= totalFrames) {\n      this.stopAction(name);\n    } else {\n      frameNum = (frameNum + totalFrames) % totalFrames;\n\n      // define local vars\n      let sum = 0;\n      let fnum;\n      for (let i = 0; i < this.animationFrameInfo[name].frames.length; i++) {\n        let dur = this.animationFrameInfo[name].frames[i];\n        sum += dur;\n        if (sum > frameNum) {\n          fnum = i;\n          break;\n        }\n      }\n      let originY = this.animationFrameInfo[name].originY;\n\n      // update frame\n      this.framePosX = fnum * this.frameWidth;\n      this.framePosY = originY * this.frameHeight;\n\n      // update hurtboxes\n      if (this.animationFrameInfo[name].hurtboxes) {\n        this.updateHurtboxes(this.animationFrameInfo[name].hurtboxes[fnum]);\n      } else {\n        this.resetHurtBoxes();\n      }\n\n      // update hitbox\n      if (this.animationFrameInfo[name].hitboxes) {\n        this.updateHitBox(this.animationFrameInfo[name].hitboxes[fnum]);\n      } else {\n        this.resetHitBox();\n      }\n    }\n  }\n  resetHurtBoxes() {\n    this.hurtboxes = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n  }\n  updateHurtboxes(hurtboxes) {\n    this.hurtboxes = hurtboxes;\n  }\n  resetHitBox() {\n    this.hitboxes = [[0, 0, 0, 0]];\n  }\n  updateHitBox(hitbox) {\n    this.hitboxes = [hitbox];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Characters/general_character.js\n");

/***/ }),

/***/ "./src/scripts/Characters/samurai.js":
/*!*******************************************!*\
  !*** ./src/scripts/Characters/samurai.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Samurai\": function() { return /* binding */ Samurai; }\n/* harmony export */ });\n/* harmony import */ var _general_character__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./general_character */ \"./src/scripts/Characters/general_character.js\");\n\nclass Samurai extends _general_character__WEBPACK_IMPORTED_MODULE_0__.GeneralCharacter {\n  // Specific constants for Samurai Sprite Sheet\n  static imgSrc = \"assets/images/Sprite Sheets/Samurai/SpriteSheet.png\";\n  static frameWidth = 128;\n  static frameHeight = 128;\n  static animationFrameInfo = {\n    idle: {\n      framenum: 0,\n      originY: 0,\n      frames: Array(6).fill(12),\n      hurtboxes: [[[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]], [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]]]\n    },\n    run: {\n      framenum: 0,\n      originY: 1,\n      frames: Array(8).fill(6),\n      hurtboxes: [[[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]], [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]]]\n    },\n    walk: {\n      framenum: 0,\n      originY: 2,\n      frames: [4, 4, 4, 4, 4, 4, 4, 4, 4]\n    },\n    jump: {\n      framenum: 0,\n      originY: 3,\n      frames: [4, 7, 7, 7, 7, 7, 7, 7, 7],\n      hurtboxes: [[[71, 58, 17, 15], [58, 71, 27, 38], [53, 110, 36, 16]], [[60, 65, 16, 14], [57, 77, 22, 34], [54, 109, 32, 17]], [[62, 68, 14, 14], [55, 80, 22, 30], [54, 110, 32, 16]], [[64, 48, 13, 14], [56, 59, 21, 35], [53, 92, 20, 28]], [[64, 53, 13, 14], [59, 62, 20, 30], [61, 89, 28, 22]], [[65, 53, 12, 14], [58, 63, 23, 29], [61, 93, 28, 20]], [[64, 55, 14, 14], [54, 67, 22, 32], [48, 99, 23, 21]], [[65, 80, 12, 15], [53, 86, 26, 27], [57, 110, 27, 16]], [[65, 80, 12, 15], [53, 86, 26, 27], [57, 110, 26, 16]]]\n    },\n    attack1: {\n      framenum: 0,\n      originY: 4,\n      frames: [2, 2, 3, 3],\n      hurtboxes: [[[48, 60, 16, 15], [43, 73, 27, 36], [34, 108, 41, 18]], [[48, 60, 16, 15], [43, 73, 27, 36], [34, 108, 41, 18]], [[59, 60, 15, 15], [42, 72, 42, 38], [34, 108, 41, 18]], [[58, 60, 17, 15], [41, 72, 34, 36], [36, 109, 40, 18]]],\n      hitboxes: [[0, 0, 0, 0], [0, 0, 0, 0], [83, 68, 38, 35], [79, 67, 37, 11]]\n    },\n    attack2: {\n      framenum: 0,\n      originY: 6,\n      frames: [6, 8, 6, 5],\n      hurtboxes: [[[63, 65, 13, 15], [43, 79, 33, 32], [35, 109, 39, 17]], [[56, 60, 12, 15], [47, 73, 24, 40], [35, 109, 39, 17]], [[61, 62, 10, 10], [44, 72, 34, 29], [35, 100, 40, 26]], [[61, 62, 10, 10], [44, 72, 34, 29], [35, 100, 40, 26]]],\n      hitboxes: [[0, 0, 0, 0], [0, 0, 0, 0], [84, 57, 32, 41], [83, 55, 15, 17]]\n    },\n    attack3: {\n      framenum: 0,\n      originY: 5,\n      frames: [3, 6, 8, 4, 4],\n      hurtboxes: [[[51, 59, 14, 11], [51, 69, 22, 39], [44, 107, 33, 19]], [[54, 59, 13, 10], [52, 69, 20, 38], [44, 108, 31, 18]], [[54, 59, 13, 10], [52, 69, 20, 38], [44, 108, 31, 18]], [[55, 59, 13, 13], [55, 72, 22, 34], [44, 104, 36, 22]], [[72, 65, 13, 15], [51, 79, 33, 30], [45, 108, 38, 18]]],\n      hitboxes: [[31, 50, 42, 9], [43, 27, 29, 28], [56, 21, 19, 32], [87, 28, 11, 37], [87, 75, 39, 35]]\n    },\n    hurt: {\n      framenum: 0,\n      originY: 7,\n      frames: [4, 4, 4],\n      hurtboxes: [[[46, 58, 13, 14], [46, 71, 24, 37], [43, 107, 28, 19]], [[45, 57, 13, 15], [45, 71, 23, 36], [43, 103, 29, 23]], [[44, 58, 13, 14], [44, 70, 24, 37], [42, 104, 31, 22]]]\n    },\n    dead: {\n      framenum: 0,\n      originY: 8,\n      frames: [4, 4, 6, 30, 6, 1000]\n    },\n    guard: {\n      framenum: 0,\n      originY: 9,\n      frames: [2, 2]\n    }\n  };\n  static POSSIBLE_MOVES = {\n    idle: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    run: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    walk: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    jump: [\"idle\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    attack1: [\"idle\", \"hurt\", \"dead\"],\n    attack2: [\"idle\", \"hurt\", \"dead\"],\n    attack3: [\"idle\", \"hurt\", \"dead\"],\n    hurt: [\"idle\", \"hurt\", \"dead\"],\n    dead: [],\n    guard: [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"]\n  };\n  static SINGLE_ACTIONS = [\"attack1\", \"attack2\", \"attack3\", \"jump\", \"hurt\"];\n\n  // Class Methods:\n  constructor(player) {\n    super(player, Samurai.imgSrc, Samurai.frameWidth, Samurai.frameHeight, Samurai.animationFrameInfo, Samurai.SINGLE_ACTIONS);\n    this.possibleMoves = Samurai.POSSIBLE_MOVES;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Characters/samurai.js\n");

/***/ }),

/***/ "./src/scripts/computer_controller.js":
/*!********************************************!*\
  !*** ./src/scripts/computer_controller.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComputerController\": function() { return /* binding */ ComputerController; }\n/* harmony export */ });\n/* harmony import */ var _controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./controller */ \"./src/scripts/controller.js\");\n\nclass ComputerController extends _controller__WEBPACK_IMPORTED_MODULE_0__.Controller {\n  constructor(player, option, ctx, opponent) {\n    let difficulty = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6;\n    super(player, option, ctx, false);\n    this.player = player;\n    this.opponent = opponent;\n    this.chooseAction = this.chooseAction.bind(this);\n    this.takeAction = this.takeAction.bind(this);\n    this.pressButton = this.pressButton.bind(this);\n    this.releaseButton = this.releaseButton.bind(this);\n    this.updateDistanceFromOpponent = this.updateDistanceFromOpponent.bind(this);\n\n    // difficulty scales the update rate of actions\n    this.difficulty = difficulty;\n    this.buttonReleaseDelay = 250 + (10 - this.difficulty) * 250;\n    this.relPos = [1000, 1000];\n  }\n  startController() {\n    setInterval(this.chooseAction, 100 + (10 - this.difficulty) * 15);\n  }\n  assignOpponent(opponent) {\n    this.opponent = opponent;\n    if (this.opponent && this.player) {\n      this.startController();\n    }\n  }\n  chooseAction() {\n    this.updateDistanceFromOpponent();\n    if (Math.abs(this.relPos[0]) > 200 && Math.random() * 10 < this.difficulty) {\n      this.takeAction(\"run\");\n    } else {\n      if (Math.random() * 10 < this.difficulty) {\n        this.takeAction(\"attack\");\n      }\n      if (Math.abs(this.relPos[1]) > 20) {\n        if (Math.random() * 10 < this.difficulty) {\n          this.takeAction(\"jump\");\n        }\n      } else {\n        this.takeAction(\"idle\");\n      }\n    }\n  }\n  takeAction(action) {\n    if (action === \"attack\") {\n      let choices = [\"B\", \"Y\", \"X\"];\n      if (!this.heldButtons.includes(\"B\") && !this.heldButtons.includes(\"Y\") && !this.heldButtons.includes(\"X\")) {\n        let choice = choices[Math.floor(Math.random() * choices.length)];\n        this.pressButton(choice);\n        setTimeout(() => this.releaseButton(choice), this.buttonReleaseDelay);\n      }\n    } else if (action === \"run\") {\n      if (this.relPos[0] > 0) {\n        this.releaseButton(\"LEFT\");\n        if (this.player.vel[0] === 0) {\n          this.releaseButton(\"RIGHT\");\n        }\n        this.pressButton(\"RIGHT\");\n      } else if (this.relPos[0] < 0) {\n        this.releaseButton(\"RIGHT\");\n        if (this.player.vel[0] === 0) {\n          this.releaseButton(\"LEFT\");\n        }\n        this.pressButton(\"LEFT\");\n      }\n    } else if (action === \"jump\") {\n      this.pressButton(\"UP\");\n      setTimeout(() => this.releaseButton(\"UP\"), this.buttonReleaseDelay);\n    } else if (action === \"idle\") {\n      while (this.heldButtons.length > 0) {\n        this.releaseButton(this.heldButtons[0]);\n      }\n    }\n  }\n  pressButton(button) {\n    if (!this.heldButtons.includes(button)) {\n      this.heldButtons.push(button);\n      if (this.player) {\n        this.player.handleButtonPress(button);\n      }\n    }\n  }\n  releaseButton(button) {\n    if (this.heldButtons.indexOf(button) !== -1) {\n      this.heldButtons.splice(this.heldButtons.indexOf(button), 1);\n      if (this.player) {\n        this.player.handleButtonRelease(button);\n      }\n    }\n  }\n  updateDistanceFromOpponent() {\n    if (this.player && this.opponent) {\n      this.relPos[0] = this.opponent.pos[0] - this.player.pos[0];\n      this.relPos[1] = this.opponent.pos[1] - this.player.pos[1];\n    } else {\n      console.log(\"Missing player or opponent\");\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/computer_controller.js\n");

/***/ }),

/***/ "./src/scripts/controller.js":
/*!***********************************!*\
  !*** ./src/scripts/controller.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Controller\": function() { return /* binding */ Controller; }\n/* harmony export */ });\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n\nclass Controller {\n  constructor(player, option, ctx) {\n    let bindKeys = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    this.buttonMapping = undefined;\n    this.imgs = [];\n    this.ctx = ctx;\n    this.player = player;\n    if (option === 1) {\n      this.buttonMapping = Controller.CONTROLLER_ONE;\n      let body = document.querySelector(\"body\");\n      for (const [key, src] of Object.entries(Controller.CONTROLLER_ONE_IMG_SRC)) {\n        let img = document.createElement('img');\n        img.src = src;\n        img.id = `controller1-${key}`;\n        img.hidden = true;\n        body.appendChild(img);\n        this.imgs.push([key, img]);\n      }\n    } else if (option === 2) {\n      this.buttonMapping = Controller.CONTROLLER_TWO;\n      let body = document.querySelector(\"body\");\n      for (const [key, src] of Object.entries(Controller.CONTROLLER_TWO_IMG_SRC)) {\n        let img = document.createElement('img');\n        img.src = src;\n        img.id = `controller2-${key}`;\n        img.hidden = true;\n        body.appendChild(img);\n        this.imgs.push([key, img]);\n      }\n    }\n    this.heldButtons = [];\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    if (bindKeys) {\n      this.addListeners();\n    }\n    this.draw = this.draw.bind(this);\n  }\n  addListeners() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n  removeListeners() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n  assignPlayer(player) {\n    this.player = player;\n  }\n  assignOpponent(opponent) {\n    this.opponent = opponent;\n  }\n  handleKeyDown(event) {\n    // debugger\n    if (this.buttonMapping[event.key]) {\n      if (!this.heldButtons.includes(this.buttonMapping[event.key])) {\n        this.heldButtons.push(this.buttonMapping[event.key]);\n        if (this.player) {\n          this.player.handleButtonPress(this.buttonMapping[event.key]);\n        }\n      }\n    }\n  }\n  handleKeyUp(event) {\n    if (this.buttonMapping[event.key]) {\n      if (this.heldButtons.includes(this.buttonMapping[event.key])) {\n        let idx = this.heldButtons.indexOf(this.buttonMapping[event.key]);\n        this.heldButtons.splice(idx, 1);\n        if (this.player) {\n          this.player.handleButtonRelease(this.buttonMapping[event.key]);\n        }\n      }\n    }\n  }\n  draw() {\n    this.ctx.resetTransform();\n    this.ctx.clearRect(0, 0, 663, 227);\n    // debugger\n    this.imgs.forEach(arr => {\n      let key = arr[0];\n      let img = arr[1];\n      if (this.heldButtons.includes(key)) {\n        this.ctx.drawImage(img, 0, 5, 663, 227);\n      } else {\n        this.ctx.drawImage(img, 0, 0, 663, 227);\n      }\n    });\n  }\n  static CONTROLLER_ONE = {\n    f: 'B',\n    g: 'Y',\n    h: 'X',\n    r: 'LB',\n    t: 'A',\n    y: 'RB',\n    w: 'UP',\n    s: 'DOWN',\n    a: 'LEFT',\n    d: 'RIGHT'\n  };\n  static CONTROLLER_TWO = {\n    \";\": 'B',\n    l: 'Y',\n    k: 'X',\n    \"i\": 'LB',\n    o: 'A',\n    p: 'RB',\n    ArrowUp: 'UP',\n    ArrowDown: 'DOWN',\n    ArrowLeft: 'LEFT',\n    ArrowRight: 'RIGHT'\n  };\n  static CONTROLLER_ONE_IMG_SRC = {\n    \"UP\": \"assets/images/ControllerKeys/1up.png\",\n    \"LEFT\": \"assets/images/ControllerKeys/1left.png\",\n    \"DOWN\": \"assets/images/ControllerKeys/1down.png\",\n    \"RIGHT\": \"assets/images/ControllerKeys/1right.png\",\n    \"B\": \"assets/images/ControllerKeys/1attack1.png\",\n    \"Y\": \"assets/images/ControllerKeys/1attack2.png\",\n    \"X\": \"assets/images/ControllerKeys/1attack3.png\"\n  };\n  static CONTROLLER_TWO_IMG_SRC = {\n    \"UP\": \"assets/images/ControllerKeys/2up.png\",\n    \"RIGHT\": \"assets/images/ControllerKeys/2right.png\",\n    \"DOWN\": \"assets/images/ControllerKeys/2down.png\",\n    \"LEFT\": \"assets/images/ControllerKeys/2left.png\",\n    \"B\": \"assets/images/ControllerKeys/2attack1.png\",\n    \"Y\": \"assets/images/ControllerKeys/2attack2.png\",\n    \"X\": \"assets/images/ControllerKeys/2attack3.png\"\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/controller.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Game\": function() { return /* binding */ Game; }\n/* harmony export */ });\n/* harmony import */ var _game_view_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game_view.js */ \"./src/scripts/game_view.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\n\n\nclass Game {\n  static PLAYER1_STARTX = -240;\n  static PLAYER2_STARTX = 240;\n  static KNOCKBACK = 10;\n  constructor(ctx, controller1, controller2, menu) {\n    this.gameView = new _game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView(ctx);\n    this.FLOOR = this.gameView.background.FLOOR;\n    this.player1 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player({\n      startpos: [Game.PLAYER1_STARTX, this.FLOOR * 0.75],\n      name: \"player1\",\n      floor: this.FLOOR\n    });\n    this.controller1 = controller1;\n    this.player1.assignController(this.controller1);\n    this.player2 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player({\n      startpos: [Game.PLAYER2_STARTX, this.FLOOR * 0.75],\n      name: \"player2\",\n      floor: this.FLOOR\n    });\n    this.controller2 = controller2;\n    this.player2.assignController(this.controller2);\n    this.controller1.assignOpponent(this.player2);\n    this.controller2.assignOpponent(this.player1);\n    this.objects = [this.player1, this.player2];\n    this.scores = [0, 0];\n    this.gameOver = false;\n    this.paused = true;\n    this.setupMusic();\n    this.resetRound = this.resetRound.bind(this);\n    this.endGame = this.endGame.bind(this);\n    this.togglePlayingAudio = this.togglePlayingAudio.bind(this);\n    this.mute = this.mute.bind(this);\n    this.unmute = this.unmute.bind(this);\n    this.menu = menu;\n  }\n  start() {\n    this.paused = false;\n    this.resetRound();\n    this.runGame();\n  }\n  runGame() {\n    if (!this.paused) {\n      this.gameView.draw(this.objects);\n      this.gameView.renderScore(this.scores);\n      this.controller1.draw();\n      this.controller2.draw();\n      this.handleCollisions();\n    }\n    if (!this.gameOver) {\n      requestAnimationFrame(this.runGame.bind(this));\n    }\n  }\n  handleCollisions() {\n    this.handleHit();\n    this.handlePush();\n    this.handleSwordCollisions();\n  }\n  handlePush() {\n    for (let i = 0; i < this.objects.length; i++) {\n      let hurtboxes1 = this.objects[i].getHurtBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView.MAIN_SCALE);\n      for (let j = i + 1; j < this.objects.length; j++) {\n        let hurtboxes2 = this.objects[j].getHurtBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView.MAIN_SCALE);\n        let collide = false;\n        let collisionData = [];\n        for (let k = 0; k < hurtboxes1.length; k++) {\n          for (let m = 0; m < hurtboxes2.length; m++) {\n            let box1 = hurtboxes1[k].slice();\n            let box2 = hurtboxes2[m].slice();\n            collide = this.overlappingBoxes(box1, box2);\n            if (collide) {\n              collisionData.push(box1);\n              collisionData.push(box2);\n              break;\n            }\n          }\n          if (collide) {\n            break;\n          }\n        }\n        if (collide) {\n          let box1 = collisionData[0];\n          let box2 = collisionData[1];\n          let object1 = this.objects[i];\n          let object2 = this.objects[j];\n          if (box1[0] < box2[0]) {\n            let dx = (box1[0] + box1[3] - box2[0]) / 2;\n            object1.pos[0] -= dx;\n            object2.pos[0] += dx;\n          } else {\n            let dx = (box2[0] + box2[3] - box1[0]) / 2;\n            object2.pos[0] -= dx;\n            object1.pos[0] += dx;\n          }\n        }\n      }\n    }\n  }\n  handleHit() {\n    // determine who is hitting which box\n    let hits = [];\n    for (let i = 0; i < this.objects.length; i++) {\n      let hitbox = this.objects[i].getHitBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView.MAIN_SCALE);\n      if (hitbox) {\n        hitbox = hitbox[0];\n        for (let j = 0; j < this.objects.length; j++) {\n          if (j !== i) {\n            let hit = false;\n            let hurtboxes = this.objects[j].getHurtBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView.MAIN_SCALE);\n            for (let k = 0; k < hurtboxes.length; k++) {\n              if (this.overlappingBoxes(hitbox, hurtboxes[k])) {\n                hits.push([this.objects[i], this.objects[j], k]);\n                hit = true;\n                break;\n              }\n            }\n            if (hit) {\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    // actually deal with the hits\n    if (hits.length > 0) {\n      let roundEnd = false;\n      hits.forEach(hit => {\n        let origin = hit[0];\n        let target = hit[1];\n        let boxNum = hit[2];\n        let damage = 0;\n        switch (origin.currentAction) {\n          case \"attack1\":\n            damage = 1;\n            break;\n          case \"attack2\":\n            damage = 2;\n            break;\n          case \"attack3\":\n            damage = 3;\n            break;\n        }\n\n        // deal damage\n        target.health -= damage * (3 - boxNum) * 0.25;\n        if (target.health < 0) {\n          roundEnd = true;\n          target.health = 0;\n        }\n\n        // cause knockback\n        if (origin.pos[0] < target.pos[0]) {\n          target.pos[0] += Game.KNOCKBACK * damage;\n        } else {\n          target.pos[0] -= Game.KNOCKBACK * damage;\n        }\n      });\n      if (roundEnd) {\n        this.isRoundOver();\n      }\n    }\n  }\n  handleSwordCollisions() {\n    let hits = [];\n    for (let i = 0; i < this.objects.length; i++) {\n      let hitboxes1 = this.objects[i].getHitBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView.MAIN_SCALE);\n      if (hitboxes1) {\n        hitboxes1 = hitboxes1[0];\n        for (let j = 0; j < this.objects.length; j++) {\n          if (j !== i) {\n            let hitboxes2 = this.objects[j].getHitBoxes(_game_view_js__WEBPACK_IMPORTED_MODULE_0__.GameView.MAIN_SCALE);\n            if (hitboxes2) {\n              hitboxes2 = hitboxes2[0];\n              if (this.overlappingBoxes(hitboxes1, hitboxes2)) {\n                hits.push([this.objects[i], this.objects[j]]);\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    if (hits.length > 0) {\n      if (!this.playingAudio) {\n        this.swordClashSound.play();\n        this.playingAudio = true;\n        setTimeout(this.togglePlayingAudio, 500);\n      }\n    }\n    hits.forEach(hit => {\n      let origin = hit[0];\n      let target = hit[1];\n      let damage = 4;\n      switch (origin.currentAction) {\n        case \"attack1\":\n          damage *= 1;\n          break;\n        case \"attack2\":\n          damage *= 2;\n          break;\n        case \"attack3\":\n          damage *= 3;\n          break;\n      }\n      if (origin.pos[0] < target.pos[0]) {\n        target.pos[0] += Game.KNOCKBACK * damage;\n      } else {\n        target.pos[0] -= Game.KNOCKBACK * damage;\n      }\n    });\n  }\n  overlappingBoxes(box1, box2) {\n    let x1m, y1m, x1M, y1M;\n    let x2m, y2m, x2M, y2M;\n    [x1m, y1m, x1M, y1M] = [box1[0], box1[1], box1[0] + box1[2], box1[1] + box1[3]];\n    [x2m, y2m, x2M, y2M] = [box2[0], box2[1], box2[0] + box2[2], box2[1] + box2[3]];\n    if (x2m >= x1M || x1m >= x2M) {\n      return false;\n    } else if (y2m >= y1M || y1m >= y2M) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  toggleRenderBoxes() {\n    this.player1.toggleRenderBoxes();\n    this.player2.toggleRenderBoxes();\n  }\n  isRoundOver() {\n    if (this.player1.health === 0 || this.player2.health === 0) {\n      this.roundOver = true;\n      if (this.player1.health === 0 && this.player2.health === 0) {\n        this.player1.currentAction = \"dead\";\n        this.player2.currentAction = \"dead\";\n        this.player1.stun(5000);\n        this.player2.stun(5000);\n      } else if (this.player1.health === 0) {\n        this.scores[1] += 1;\n        this.player1.currentAction = \"dead\";\n        this.player2.runAnimationState(false);\n        this.player1.stun(5000);\n        this.player2.stun(5000);\n      } else {\n        this.scores[0] += 1;\n        this.player2.currentAction = \"dead\";\n        this.player1.runAnimationState(false);\n        this.player1.stun(5000);\n        this.player2.stun(5000);\n      }\n      if (!this.isGameOver()) {\n        setTimeout(this.resetRound, 4500);\n      } else {\n        setTimeout(this.endGame, 4500);\n      }\n    }\n  }\n  isGameOver() {\n    // end game if winning by 2\n    if (Math.abs(this.scores[0] - this.scores[1]) >= 2) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  endGame() {\n    this.gameOver = true;\n    this.player1.stun();\n    this.player2.stun();\n    // console.log(\"Game Over\")\n    this.menu.stopGame();\n  }\n  randomizeStage() {\n    this.gameView.randomizeStage();\n    this.FLOOR = this.gameView.background.FLOOR;\n    this.player1.setFloor(this.FLOOR);\n    this.player2.setFloor(this.FLOOR);\n  }\n  resetRound() {\n    this.randomizeStage();\n    this.player1.pos = [Game.PLAYER1_STARTX, this.FLOOR * 0.75];\n    this.player2.pos = [Game.PLAYER2_STARTX, this.FLOOR * 0.75];\n    this.player1.health = 100;\n    this.player2.health = 100;\n    this.player1.currentAction = \"jump\";\n    this.player2.currentAction = \"jump\";\n    this.player1.character.animationFrameInfo[\"jump\"].framenum = 32;\n    this.player2.character.animationFrameInfo[\"jump\"].framenum = 32;\n    this.player1.xFacing = 1;\n    this.player2.xFacing = -1;\n    this.player1.runAnimationState();\n    this.player2.runAnimationState();\n    this.player1.stun(1000);\n    this.player2.stun(1000);\n    this.roundOver = false;\n  }\n  pause() {\n    this.paused = true;\n    this.player1.stun();\n    this.player2.stun();\n  }\n  unpause() {\n    this.paused = false;\n    this.player1.unstun();\n    this.player2.unstun();\n  }\n  winner() {\n    return this.scores[0] > this.scores[1] ? \"Player 1\" : \"Player 2\";\n  }\n  setupMusic() {\n    this.swordClashSound = new Audio(\"assets/music/SwordClash.mp3\");\n    this.swordClashSound.loop = false;\n    this.playingAudio = false;\n  }\n  mute() {\n    this.swordClashSound.volume = 0;\n    this.player1.mute();\n    this.player2.mute();\n  }\n  unmute() {\n    this.swordClashSound.volume = 1;\n    this.player1.unmute();\n    this.player2.unmute();\n  }\n  togglePlayingAudio() {\n    this.playingAudio = false;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/game_view.js":
/*!**********************************!*\
  !*** ./src/scripts/game_view.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameView\": function() { return /* binding */ GameView; }\n/* harmony export */ });\n/* harmony import */ var _Backgrounds_train__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Backgrounds/train */ \"./src/scripts/Backgrounds/train.js\");\n/* harmony import */ var _Backgrounds_war__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Backgrounds/war */ \"./src/scripts/Backgrounds/war.js\");\n\n\nclass GameView {\n  // Constants\n  static MAIN_SCALE = 0.75;\n  static WIDTH = 960 * GameView.MAIN_SCALE;\n  static HEIGHT = 720 * GameView.MAIN_SCALE;\n\n  // Class methods\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.camera_location = 0;\n    this.loadStages();\n    this.randomizeStage();\n  }\n  loadStages() {\n    this.stages = [];\n    this.stages.push(new _Backgrounds_train__WEBPACK_IMPORTED_MODULE_0__.Train(this.ctx));\n    this.stages.push(new _Backgrounds_war__WEBPACK_IMPORTED_MODULE_1__.War(this.ctx));\n  }\n  randomizeStage() {\n    this.background = this.stages[Math.floor(Math.random() * this.stages.length)];\n  }\n  draw(objects) {\n    let ctx = this.ctx;\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, GameView.WIDTH, GameView.HEIGHT);\n\n    // Calculate camera location\n    this.calculateCameraLocation(objects);\n\n    // draw background image\n    this.background.drawBackground(this.camera_location, GameView.MAIN_SCALE);\n\n    // draw fighters and other assets\n    objects.forEach(obj => {\n      ctx.resetTransform();\n      ctx.translate(GameView.WIDTH / 2, 0);\n      ctx.scale(GameView.MAIN_SCALE, GameView.MAIN_SCALE);\n      ctx.translate(-this.camera_location, 0);\n      obj.draw(ctx);\n    });\n\n    // enforce camera limits\n    this.enforceCameraLimits(objects);\n\n    // draw foreground image\n    this.background.drawForeground(this.camera_location, GameView.MAIN_SCALE);\n\n    // draw health bars\n    this.drawHealthBars(objects);\n  }\n  calculateCameraLocation(objects) {\n    let sumX = 0;\n    objects.forEach(obj => {\n      sumX += obj.pos[0];\n    });\n    let avgX = sumX / objects.length;\n    if (avgX < this.background.CAMERA_LIMIT_LEFT) {\n      this.camera_location = this.background.CAMERA_LIMIT_LEFT;\n    } else if (avgX > this.background.CAMERA_LIMIT_RIGHT) {\n      this.camera_location = this.background.CAMERA_LIMIT_RIGHT;\n    } else {\n      this.camera_location = avgX;\n    }\n  }\n  drawHealthBars(objects) {\n    let ctx = this.ctx;\n    let barThickness = 18;\n    let start1 = GameView.WIDTH * 0.04;\n    let start2 = GameView.WIDTH * 0.96;\n    let barSize = GameView.WIDTH * 0.4;\n    let healthyColor = \"0, 220, 0\";\n    let hurtColor = \"170, 0, 0\";\n    objects.forEach(obj => {\n      ctx.resetTransform();\n      let startpos, barwidth, sign;\n      if (obj.name === \"player1\") {\n        startpos = [start1, start1];\n        barwidth = barSize;\n        sign = 1;\n      } else {\n        startpos = [start2, start1];\n        barwidth = -barSize;\n        sign = -1;\n      }\n      for (let i = 5; i >= 0; i--) {\n        if (obj.health === 100) {\n          ctx.strokeStyle = `rgb(${healthyColor}, ${0.25 + (5 - i) / 5 * 0.75})`;\n          ctx.lineWidth = barThickness + i;\n          ctx.beginPath();\n          ctx.moveTo(startpos[0] - i * sign, startpos[1]);\n          ctx.lineTo(startpos[0] + obj.health / 100 * barwidth + i * sign, startpos[1]);\n          ctx.stroke();\n        } else if (obj.health === 0) {\n          ctx.beginPath();\n          ctx.lineWidth = barThickness + i;\n          ctx.strokeStyle = `rgb(${hurtColor}, ${0.25 + (5 - i) / 5 * 0.75})`;\n          ctx.moveTo(startpos[0] + obj.health / 100 * barwidth - i * sign, startpos[1]);\n          ctx.lineTo(startpos[0] + barwidth + i * sign, startpos[1]);\n          ctx.stroke();\n        } else {\n          ctx.strokeStyle = `rgb(${healthyColor}, ${0.25 + (5 - i) / 5 * 0.75})`;\n          ctx.lineWidth = barThickness + i;\n          ctx.beginPath();\n          ctx.moveTo(startpos[0] - i * sign, startpos[1]);\n          ctx.lineTo(startpos[0] + obj.health / 100 * barwidth, startpos[1]);\n          ctx.stroke();\n          ctx.beginPath();\n          ctx.strokeStyle = `rgb(${hurtColor}, ${0.25 + (5 - i) / 5 * 0.75})`;\n          ctx.moveTo(startpos[0] + obj.health / 100 * barwidth, startpos[1]);\n          ctx.lineTo(startpos[0] + barwidth + i * sign, startpos[1]);\n          ctx.stroke();\n        }\n      }\n    });\n  }\n  enforceCameraLimits(objects) {\n    objects.forEach(obj => {\n      // use body hurtbox to calculate x-limit\n      let bodyBox = obj.getHurtBoxes(GameView.MAIN_SCALE)[1];\n      let left = bodyBox[0];\n      let right = bodyBox[0] + bodyBox[2];\n      if (left - this.camera_location * GameView.MAIN_SCALE < -GameView.WIDTH / 2) {\n        let dx = left - this.camera_location * GameView.MAIN_SCALE + GameView.WIDTH / 2;\n        obj.pos[0] -= dx;\n      } else if (right - this.camera_location * GameView.MAIN_SCALE > GameView.WIDTH / 2) {\n        let dx = right - this.camera_location * GameView.MAIN_SCALE - GameView.WIDTH / 2;\n        obj.pos[0] -= dx;\n      }\n    });\n  }\n  renderScore(score) {\n    let formattedScore = score.join(' - ');\n    this.ctx.font = \"28px Arial\";\n    this.ctx.fillStyle = \"yellow\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillText(formattedScore, GameView.WIDTH * 0.5, GameView.WIDTH * 0.053);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game_view.js\n");

/***/ }),

/***/ "./src/scripts/gamepad_controller.js":
/*!*******************************************!*\
  !*** ./src/scripts/gamepad_controller.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GamePadController\": function() { return /* binding */ GamePadController; }\n/* harmony export */ });\n/* harmony import */ var _controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./controller */ \"./src/scripts/controller.js\");\n\nclass GamePadController extends _controller__WEBPACK_IMPORTED_MODULE_0__.Controller {\n  static BUTTON_MAPPING = {\n    0: 'UP',\n    // changed\n    1: 'X',\n    // changed\n    2: 'B',\n    // changed\n    3: 'Y',\n    // changed\n    4: 'LB',\n    5: 'RB',\n    6: 'LT',\n    7: 'RT',\n    8: 'M',\n    // minus\n    9: 'P',\n    // plus\n    10: 'LJ',\n    // left joystick\n    11: 'RJ',\n    // right joystick\n    12: 'UP',\n    // up\n    13: 'DOWN',\n    // down\n    14: 'LEFT',\n    15: 'RIGHT',\n    16: 'HOME',\n    17: 'SS'\n  };\n  constructor(gamepad, ctx) {\n    super(null, 3, ctx, false);\n    this.gamepad = gamepad;\n    this.buttonMapping = Gamepad.BUTTON_MAPPING;\n    this.gameLoop = this.gameLoop.bind(this);\n    setInterval(this.gameLoop, 100);\n  }\n  draw() {\n    this.ctx.clearRect(0, 0, 1000, 1000);\n  }\n  gameLoop() {\n    if (this.player) {\n      const gamepads = navigator.getGamepads();\n      let controller = gamepads[this.gamepad.index];\n      for (let i = 0; i < controller.buttons.length; i++) {\n        let button = GamePadController.BUTTON_MAPPING[i];\n        if (controller.buttons[i].pressed) {\n          this.player.handleButtonPress(button);\n        } else {\n          this.player.handleButtonRelease(button);\n        }\n      }\n      let leftJoystick = [controller.axes[0], controller.axes[1]];\n      if (leftJoystick[0] > 0.25) {\n        this.player.handleButtonRelease(\"LEFT\");\n        this.player.handleButtonPress(\"RIGHT\");\n      } else if (leftJoystick[0] < -0.25) {\n        this.player.handleButtonRelease(\"RIGHT\");\n        this.player.handleButtonPress(\"LEFT\");\n      }\n      // if (leftJoystick[1] < -0.25){\n      //     this.player.handleButtonPress(\"UP\");\n      // } else {\n      //     this.player.handleButtonRelease(\"UP\");\n      // }\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nYW1lcGFkX2NvbnRyb2xsZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFFbkMsTUFBTUMsaUJBQWlCLFNBQVNELG1EQUFVLENBQUM7RUFDOUMsT0FBT0UsY0FBYyxHQUFHO0lBQ3BCLENBQUMsRUFBRSxJQUFJO0lBQUU7SUFDVCxDQUFDLEVBQUUsR0FBRztJQUFHO0lBQ1QsQ0FBQyxFQUFFLEdBQUc7SUFBRTtJQUNSLENBQUMsRUFBRSxHQUFHO0lBQUU7SUFDUixDQUFDLEVBQUUsSUFBSTtJQUNQLENBQUMsRUFBRSxJQUFJO0lBQ1AsQ0FBQyxFQUFFLElBQUk7SUFDUCxDQUFDLEVBQUUsSUFBSTtJQUNQLENBQUMsRUFBRSxHQUFHO0lBQU07SUFDWixDQUFDLEVBQUUsR0FBRztJQUFNO0lBQ1osRUFBRSxFQUFFLElBQUk7SUFBSTtJQUNaLEVBQUUsRUFBRSxJQUFJO0lBQUk7SUFDWixFQUFFLEVBQUUsSUFBSTtJQUFJO0lBQ1osRUFBRSxFQUFFLE1BQU07SUFBSztJQUNmLEVBQUUsRUFBRSxNQUFNO0lBQ1YsRUFBRSxFQUFFLE9BQU87SUFDWCxFQUFFLEVBQUUsTUFBTTtJQUNWLEVBQUUsRUFBRTtFQUNSLENBQUM7RUFFREMsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFFQyxHQUFHLEVBQUU7SUFDdEIsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUVBLEdBQUcsRUFBRSxLQUFLLENBQUM7SUFDMUIsSUFBSSxDQUFDRCxPQUFPLEdBQUdBLE9BQU87SUFDdEIsSUFBSSxDQUFDRSxhQUFhLEdBQUdDLE9BQU8sQ0FBQ0wsY0FBYztJQUUzQyxJQUFJLENBQUNNLFFBQVEsR0FBRyxJQUFJLENBQUNBLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQztJQUV4Q0MsV0FBVyxDQUFDLElBQUksQ0FBQ0YsUUFBUSxFQUFFLEdBQUcsQ0FBQztFQUNuQztFQUVBRyxJQUFJQSxDQUFBLEVBQUc7SUFDSCxJQUFJLENBQUNOLEdBQUcsQ0FBQ08sU0FBUyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsSUFBSSxFQUFDLElBQUksQ0FBQztFQUNyQztFQUVBSixRQUFRQSxDQUFBLEVBQUc7SUFDUCxJQUFJLElBQUksQ0FBQ0ssTUFBTSxFQUFFO01BQ2IsTUFBTUMsUUFBUSxHQUFHQyxTQUFTLENBQUNDLFdBQVcsQ0FBQyxDQUFDO01BQ3hDLElBQUlDLFVBQVUsR0FBR0gsUUFBUSxDQUFDLElBQUksQ0FBQ1YsT0FBTyxDQUFDYyxLQUFLLENBQUM7TUFFN0MsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdGLFVBQVUsQ0FBQ0csT0FBTyxDQUFDQyxNQUFNLEVBQUVGLENBQUMsRUFBRSxFQUFFO1FBQ2hELElBQUlHLE1BQU0sR0FBR3JCLGlCQUFpQixDQUFDQyxjQUFjLENBQUNpQixDQUFDLENBQUM7UUFDaEQsSUFBSUYsVUFBVSxDQUFDRyxPQUFPLENBQUNELENBQUMsQ0FBQyxDQUFDSSxPQUFPLEVBQUU7VUFDL0IsSUFBSSxDQUFDVixNQUFNLENBQUNXLGlCQUFpQixDQUFDRixNQUFNLENBQUM7UUFDekMsQ0FBQyxNQUFNO1VBQ0gsSUFBSSxDQUFDVCxNQUFNLENBQUNZLG1CQUFtQixDQUFDSCxNQUFNLENBQUM7UUFDM0M7TUFDSjtNQUVBLElBQUlJLFlBQVksR0FBRyxDQUFDVCxVQUFVLENBQUNVLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRVYsVUFBVSxDQUFDVSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7TUFFM0QsSUFBSUQsWUFBWSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksRUFBQztRQUN2QixJQUFJLENBQUNiLE1BQU0sQ0FBQ1ksbUJBQW1CLENBQUMsTUFBTSxDQUFDO1FBQ3ZDLElBQUksQ0FBQ1osTUFBTSxDQUFDVyxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7TUFDMUMsQ0FBQyxNQUFNLElBQUlFLFlBQVksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRTtRQUNoQyxJQUFJLENBQUNiLE1BQU0sQ0FBQ1ksbUJBQW1CLENBQUMsT0FBTyxDQUFDO1FBQ3hDLElBQUksQ0FBQ1osTUFBTSxDQUFDVyxpQkFBaUIsQ0FBQyxNQUFNLENBQUM7TUFDekM7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBO0lBQ0o7RUFDSjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVsZW50bGVzc19jbGFzaC8uL3NyYy9zY3JpcHRzL2dhbWVwYWRfY29udHJvbGxlci5qcz9jZDRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRyb2xsZXIgfSBmcm9tIFwiLi9jb250cm9sbGVyXCI7XG5cbmV4cG9ydCBjbGFzcyBHYW1lUGFkQ29udHJvbGxlciBleHRlbmRzIENvbnRyb2xsZXIge1xuICAgIHN0YXRpYyBCVVRUT05fTUFQUElORyA9IHtcbiAgICAgICAgMDogJ1VQJywgLy8gY2hhbmdlZFxuICAgICAgICAxOiAnWCcsICAvLyBjaGFuZ2VkXG4gICAgICAgIDI6ICdCJywgLy8gY2hhbmdlZFxuICAgICAgICAzOiAnWScsIC8vIGNoYW5nZWRcbiAgICAgICAgNDogJ0xCJyxcbiAgICAgICAgNTogJ1JCJyxcbiAgICAgICAgNjogJ0xUJyxcbiAgICAgICAgNzogJ1JUJyxcbiAgICAgICAgODogJ00nLCAgICAgLy8gbWludXNcbiAgICAgICAgOTogJ1AnLCAgICAgLy8gcGx1c1xuICAgICAgICAxMDogJ0xKJywgICAvLyBsZWZ0IGpveXN0aWNrXG4gICAgICAgIDExOiAnUkonLCAgIC8vIHJpZ2h0IGpveXN0aWNrXG4gICAgICAgIDEyOiAnVVAnLCAgIC8vIHVwXG4gICAgICAgIDEzOiAnRE9XTicsICAgIC8vIGRvd25cbiAgICAgICAgMTQ6ICdMRUZUJyxcbiAgICAgICAgMTU6ICdSSUdIVCcsXG4gICAgICAgIDE2OiAnSE9NRScsXG4gICAgICAgIDE3OiAnU1MnXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoZ2FtZXBhZCwgY3R4KSB7XG4gICAgICAgIHN1cGVyKG51bGwsIDMsIGN0eCwgZmFsc2UpO1xuICAgICAgICB0aGlzLmdhbWVwYWQgPSBnYW1lcGFkO1xuICAgICAgICB0aGlzLmJ1dHRvbk1hcHBpbmcgPSBHYW1lcGFkLkJVVFRPTl9NQVBQSU5HO1xuXG4gICAgICAgIHRoaXMuZ2FtZUxvb3AgPSB0aGlzLmdhbWVMb29wLmJpbmQodGhpcyk7XG5cbiAgICAgICAgc2V0SW50ZXJ2YWwodGhpcy5nYW1lTG9vcCwgMTAwKVxuICAgIH1cblxuICAgIGRyYXcoKSB7XG4gICAgICAgIHRoaXMuY3R4LmNsZWFyUmVjdCgwLDAsMTAwMCwxMDAwKTtcbiAgICB9XG5cbiAgICBnYW1lTG9vcCgpIHtcbiAgICAgICAgaWYgKHRoaXMucGxheWVyKSB7XG4gICAgICAgICAgICBjb25zdCBnYW1lcGFkcyA9IG5hdmlnYXRvci5nZXRHYW1lcGFkcygpO1xuICAgICAgICAgICAgbGV0IGNvbnRyb2xsZXIgPSBnYW1lcGFkc1t0aGlzLmdhbWVwYWQuaW5kZXhdO1xuXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbnRyb2xsZXIuYnV0dG9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGxldCBidXR0b24gPSBHYW1lUGFkQ29udHJvbGxlci5CVVRUT05fTUFQUElOR1tpXTtcbiAgICAgICAgICAgICAgICBpZiAoY29udHJvbGxlci5idXR0b25zW2ldLnByZXNzZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIuaGFuZGxlQnV0dG9uUHJlc3MoYnV0dG9uKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBsYXllci5oYW5kbGVCdXR0b25SZWxlYXNlKGJ1dHRvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgbGVmdEpveXN0aWNrID0gW2NvbnRyb2xsZXIuYXhlc1swXSwgY29udHJvbGxlci5heGVzWzFdXTtcblxuICAgICAgICAgICAgaWYgKGxlZnRKb3lzdGlja1swXSA+IDAuMjUpe1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyLmhhbmRsZUJ1dHRvblJlbGVhc2UoXCJMRUZUXCIpO1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyLmhhbmRsZUJ1dHRvblByZXNzKFwiUklHSFRcIik7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGxlZnRKb3lzdGlja1swXSA8IC0wLjI1KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wbGF5ZXIuaGFuZGxlQnV0dG9uUmVsZWFzZShcIlJJR0hUXCIpO1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyLmhhbmRsZUJ1dHRvblByZXNzKFwiTEVGVFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGlmIChsZWZ0Sm95c3RpY2tbMV0gPCAtMC4yNSl7XG4gICAgICAgICAgICAvLyAgICAgdGhpcy5wbGF5ZXIuaGFuZGxlQnV0dG9uUHJlc3MoXCJVUFwiKTtcbiAgICAgICAgICAgIC8vIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyAgICAgdGhpcy5wbGF5ZXIuaGFuZGxlQnV0dG9uUmVsZWFzZShcIlVQXCIpO1xuICAgICAgICAgICAgLy8gfVxuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIkNvbnRyb2xsZXIiLCJHYW1lUGFkQ29udHJvbGxlciIsIkJVVFRPTl9NQVBQSU5HIiwiY29uc3RydWN0b3IiLCJnYW1lcGFkIiwiY3R4IiwiYnV0dG9uTWFwcGluZyIsIkdhbWVwYWQiLCJnYW1lTG9vcCIsImJpbmQiLCJzZXRJbnRlcnZhbCIsImRyYXciLCJjbGVhclJlY3QiLCJwbGF5ZXIiLCJnYW1lcGFkcyIsIm5hdmlnYXRvciIsImdldEdhbWVwYWRzIiwiY29udHJvbGxlciIsImluZGV4IiwiaSIsImJ1dHRvbnMiLCJsZW5ndGgiLCJidXR0b24iLCJwcmVzc2VkIiwiaGFuZGxlQnV0dG9uUHJlc3MiLCJoYW5kbGVCdXR0b25SZWxlYXNlIiwibGVmdEpveXN0aWNrIiwiYXhlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/gamepad_controller.js\n");

/***/ }),

/***/ "./src/scripts/mainmenu.js":
/*!*********************************!*\
  !*** ./src/scripts/mainmenu.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MainMenu\": function() { return /* binding */ MainMenu; }\n/* harmony export */ });\n/* harmony import */ var _computer_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computer_controller */ \"./src/scripts/computer_controller.js\");\n/* harmony import */ var _controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controller */ \"./src/scripts/controller.js\");\n/* harmony import */ var _gamepad_controller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gamepad_controller */ \"./src/scripts/gamepad_controller.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n/* harmony import */ var _game_view__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./game_view */ \"./src/scripts/game_view.js\");\n\n\n\n\n\nclass MainMenu {\n  constructor(ctx, controller1ctx, controller2ctx) {\n    this.ctx = ctx;\n    this.controller1ctx = controller1ctx;\n    this.controller2ctx = controller2ctx;\n    this.gameStarted = false;\n    // this.startGame();\n    // this.loadFont();\n    this.computerplayer1 = true;\n    this.computerplayer2 = true;\n    this.difficulty1 = 5;\n    this.difficulty2 = 5;\n    this.controller1 = new _controller__WEBPACK_IMPORTED_MODULE_1__.Controller(null, 1, this.controller1ctx);\n    this.controller2 = new _controller__WEBPACK_IMPORTED_MODULE_1__.Controller(null, 2, this.controller2ctx);\n    this.bindMethods();\n    this.modalHolder = document.querySelector(\"#modal-holder\");\n    this.modal = document.querySelector(\"#modal\");\n    this.modalContent = document.querySelector(\"#main-modal-content\");\n    this.modalButtons = document.querySelector(\"#modal-buttons\");\n    this.showingModal = false;\n    this.addListeners();\n    this.draw();\n    // this.startGame();\n    this.setupMusic();\n    this.generateStartModal();\n    this.muteButton = document.querySelector(\"#mute-button\");\n    this.muteButton.addEventListener(\"click\", this.toggleMute);\n  }\n  generateStartModal() {\n    let ul = document.createElement('ul');\n    ul.classList.add('start-modal');\n    let li1 = document.createElement('li');\n    let li2 = document.createElement('li');\n    let li3 = document.createElement('li');\n    li1.innerText = \"Welcome to a fast-action, sword-clashing, two-player fighting game!\";\n    li2.innerText = \"Are you ready to challenge your opponent to an epic battle to the death?\";\n    li3.innerText = \"Can you defeat the hyper aggressive level 10 computer player?\";\n    ul.appendChild(li1);\n    ul.appendChild(li2);\n    ul.appendChild(li3);\n    this.modalContent.innerHTML = '';\n    this.modalContent.appendChild(ul);\n    let button1 = document.createElement('div');\n    let button2 = document.createElement('div');\n    button1.innerText = \"Start Game\";\n    button2.innerText = \"How to Play\";\n    this.modalButtons.innerHTML = '';\n    this.modalButtons.appendChild(button1);\n    this.modalButtons.appendChild(button2);\n    button1.addEventListener(\"click\", () => {\n      this.hideModal();\n      this.menuMusic.play();\n    });\n    button2.addEventListener(\"click\", this.generateHowToModal);\n    this.showModal();\n  }\n  generateHowToModal() {\n    let ul = document.createElement('ul');\n    let li1 = document.createElement('li');\n    let li2 = document.createElement('li');\n    let li3 = document.createElement('li');\n    let li4 = document.createElement('li');\n    let li5 = document.createElement('li');\n    let li6 = document.createElement('li');\n    li1.innerText = \"A/D/⬅️/➡️ - Move Player\";\n    li2.innerText = \"W/⬆️ - Jump\";\n    li3.innerText = \"F/; - Light Attack\";\n    li4.innerText = \"G/L - Medium Attack\";\n    li5.innerText = \"H/K - Heavy Attack\";\n    li6.innerText = \"ESC - Pause Game\";\n    ul.appendChild(li1);\n    ul.appendChild(li2);\n    ul.appendChild(li3);\n    ul.appendChild(li4);\n    ul.appendChild(li5);\n    ul.appendChild(li6);\n    this.modalContent.innerHTML = '';\n    this.modalContent.appendChild(ul);\n    let button1 = document.createElement('div');\n    let button2 = document.createElement('div');\n    button1.innerText = \"Start Game\";\n    button2.innerText = \"Watch Computers Fight\";\n    this.modalButtons.innerHTML = '';\n    let fontsize = 2;\n    button1.style.fontSize = `${fontsize}vh`;\n    button2.style.fontSize = `${fontsize}vh`;\n    this.modalButtons.innerHTML = '';\n    this.modalButtons.appendChild(button1);\n    this.modalButtons.appendChild(button2);\n    button1.addEventListener(\"click\", this.hideModal);\n    button2.addEventListener(\"click\", this.startComputerGame);\n    button1.onmouseover = () => {\n      button1.style.fontSize = `${fontsize * 1.1}vh`;\n      button1.style.margin = \"16px 0px\";\n      button1.style.padding = \"24px\";\n    };\n    button1.onmouseout = () => {\n      button1.style.fontSize = `${fontsize}vh`;\n      button1.style.margin = \"20px 0px\";\n      button1.style.padding = \"20px\";\n    };\n    button2.onmouseover = () => {\n      button2.style.fontSize = `${fontsize * 1.1}vh`;\n      button2.style.margin = \"16px 0px\";\n      button2.style.padding = \"24px\";\n    };\n    button2.onmouseout = () => {\n      button2.style.fontSize = `${fontsize}vh`;\n      button2.style.margin = \"20px 0px\";\n      button2.style.padding = \"20px\";\n    };\n    this.showModal();\n  }\n  generatePauseModal() {\n    let ul = document.createElement('ul');\n    let li1 = document.createElement('li');\n    let li2 = document.createElement('li');\n    li1.innerText = \"GAME\";\n    li2.innerText = \"PAUSED\";\n    ul.appendChild(li1);\n    ul.appendChild(li2);\n    li1.style.fontSize = \"8vh\";\n    li2.style.fontSize = \"8vh\";\n    ul.style.lineHeight = \"9vh\";\n    this.modalContent.innerHTML = '';\n    this.modalContent.appendChild(ul);\n    let button1 = document.createElement('div');\n    let button2 = document.createElement('div');\n    button1.innerText = \"Resume Game\";\n    button2.innerText = \"Main Menu\";\n    this.modalButtons.innerHTML = '';\n    this.modalButtons.appendChild(button1);\n    this.modalButtons.appendChild(button2);\n    button1.addEventListener(\"click\", () => {\n      this.game.unpause();\n      this.hideModal();\n    });\n    button2.addEventListener(\"click\", () => {\n      delete this.game;\n      this.restartMenu();\n      this.hideModal();\n    });\n    this.modal.style.background = \"#00000080\";\n    this.showModal();\n  }\n  generateEndModal() {\n    let ul = document.createElement('ul');\n    let li1 = document.createElement('li');\n    let li2 = document.createElement('li');\n    let li3 = document.createElement('li');\n    li1.innerText = \"Thank you for playing!\";\n    if (this.lastWinner) {\n      li2.innerText = `The winner is ${this.lastWinner}!`;\n    }\n    li3.innerText = \"Play Again?\";\n    ul.appendChild(li1);\n    ul.appendChild(li2);\n    ul.appendChild(li3);\n    this.modalContent.innerHTML = '';\n    this.modalContent.appendChild(ul);\n    let button1 = document.createElement('div');\n    let button2 = document.createElement('div');\n    button1.innerText = \"Play Again\";\n    button2.innerText = \"Watch Computers Fight\";\n    let fontsize = 2;\n    button1.style.fontSize = `${fontsize}vh`;\n    button2.style.fontSize = `${fontsize}vh`;\n    this.modalButtons.innerHTML = '';\n    this.modalButtons.appendChild(button1);\n    this.modalButtons.appendChild(button2);\n    button1.addEventListener(\"click\", this.hideModal);\n    button2.addEventListener(\"click\", this.startComputerGame);\n    button1.onmouseover = () => {\n      button1.style.fontSize = `${fontsize * 1.1}vh`;\n      button1.style.margin = \"16px 0px\";\n      button1.style.padding = \"24px\";\n    };\n    button1.onmouseout = () => {\n      button1.style.fontSize = `${fontsize}vh`;\n      button1.style.margin = \"20px 0px\";\n      button1.style.padding = \"20px\";\n    };\n    button2.onmouseover = () => {\n      button2.style.fontSize = `${fontsize * 1.1}vh`;\n      button2.style.margin = \"16px 0px\";\n      button2.style.padding = \"24px\";\n    };\n    button2.onmouseout = () => {\n      button2.style.fontSize = `${fontsize}vh`;\n      button2.style.margin = \"20px 0px\";\n      button2.style.padding = \"20px\";\n    };\n    this.showModal();\n  }\n  startComputerGame() {\n    this.computerplayer1 = true;\n    this.computerplayer2 = true;\n    this.difficulty1 = 10;\n    this.difficulty2 = 10;\n    this.hideModal();\n    this.startGame();\n  }\n  bindMethods() {\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.addGamePad = this.addGamePad.bind(this);\n    this.generateStartModal = this.generateStartModal.bind(this);\n    this.generateHowToModal = this.generateHowToModal.bind(this);\n    this.generatePauseModal = this.generatePauseModal.bind(this);\n    this.generateEndModal = this.generateEndModal.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.startComputerGame = this.startComputerGame.bind(this);\n    this.mute = this.mute.bind(this);\n    this.unmute = this.unmute.bind(this);\n    this.toggleMute = this.toggleMute.bind(this);\n  }\n  showModal() {\n    this.showingModal = true;\n    this.modalHolder.style.display = \"flex\";\n  }\n  hideModal() {\n    this.showingModal = false;\n    this.modal.style.background = \"#000000\";\n    this.modalHolder.style.display = \"none\";\n  }\n  addListeners() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n  removeListeners() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n  draw() {\n    // console.log('menu running')\n    this.ctx.clearRect(0, 0, 1920, 1080);\n    this.ctx.fillStyle = \"rgb(52,52,255)\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.font = \"30px 'Press Start 2P'\";\n    let lineHeight = 30;\n    this.ctx.fillText(\"Are you ready to fight?\", _game_view__WEBPACK_IMPORTED_MODULE_4__.GameView.WIDTH / 2, _game_view__WEBPACK_IMPORTED_MODULE_4__.GameView.HEIGHT * 0.22);\n    this.ctx.font = \"20px 'Press Start 2P'\";\n    let menuInfo = [\"H: Join as Player 1\", \"K: Join as Player 2\", \"\", \"W/S: Computer 1 Difficulty Level\", \"Up/Down: Computer 2 Difficulty Level\", \"\", \"Press spacebar to start the game\", \"Press escape to pause the game\"];\n    for (let i = 0; i < menuInfo.length; i++) {\n      this.ctx.fillText(menuInfo[i], _game_view__WEBPACK_IMPORTED_MODULE_4__.GameView.WIDTH * 0.5, _game_view__WEBPACK_IMPORTED_MODULE_4__.GameView.HEIGHT * 0.42 + i * lineHeight);\n    }\n\n    // draw controllers\n    this.controller1.draw();\n    this.controller2.draw();\n\n    // show if human or computer player\n    let ctx = this.controller1ctx;\n    ctx.fillStyle = \"yellow\";\n    ctx.textAlign = \"left\";\n    ctx.font = \"24px 'Press Start 2P'\";\n    if (this.computerplayer1) {\n      ctx.fillText(`Level ${this.difficulty1} Computer`, 225, 40);\n    } else {\n      ctx.fillText(\"Human Player 1\", 225, 40);\n    }\n    ctx = this.controller2ctx;\n    ctx.fillStyle = \"yellow\";\n    ctx.textAlign = \"right\";\n    ctx.font = \"24px 'Press Start 2P'\";\n    if (this.computerplayer2) {\n      ctx.fillText(`Level ${this.difficulty2} Computer`, 425, 40);\n    } else {\n      ctx.fillText(\"Human Player 2\", 425, 40);\n    }\n    if (!this.gameStarted) {\n      requestAnimationFrame(this.draw.bind(this));\n    }\n  }\n  handleKeyDown(event) {\n    if (this.gameStarted) {\n      let button = event.key;\n      if (button === \"Escape\") {\n        if (this.game.paused) {\n          this.hideModal();\n          this.game.unpause();\n        } else {\n          this.game.pause();\n          this.generatePauseModal();\n        }\n      }\n    } else {\n      if (!this.showingModal) {\n        let button = event.key;\n        if (button === \"h\") {\n          this.togglePlayer1();\n        } else if (button === \"k\") {\n          this.togglePlayer2();\n        } else if (button === \" \") {\n          this.startGame();\n        } else if (button === \"w\") {\n          this.difficulty1 += 1;\n          if (this.difficulty1 > 10) {\n            this.difficulty1 = 10;\n          }\n        } else if (button === \"s\") {\n          this.difficulty1 -= 1;\n          if (this.difficulty1 < 1) {\n            this.difficulty1 = 1;\n          }\n        } else if (button === \"ArrowUp\") {\n          this.difficulty2 += 1;\n          if (this.difficulty2 > 10) {\n            this.difficulty2 = 10;\n          }\n        } else if (button === \"ArrowDown\") {\n          this.difficulty2 -= 1;\n          if (this.difficulty2 < 1) {\n            this.difficulty2 = 1;\n          }\n        }\n      }\n    }\n  }\n  restartMenu() {\n    let gameEnded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    // this.addListeners();\n    this.gameMusic.pause();\n    this.gameMusic.currentTime = 0;\n    this.menuMusic.currentTime = 0;\n    this.menuMusic.play();\n    this.controller1.removeListeners();\n    this.controller2.removeListeners();\n    this.controller1.addListeners();\n    this.controller2.addListeners();\n    this.gameStarted = false;\n    if (gameEnded) {\n      this.generateEndModal();\n    }\n    this.draw();\n  }\n  startGame() {\n    // this.removeListeners();\n    this.gameStarted = true;\n    this.menuMusic.pause();\n    this.menuMusic.currentTime = 0;\n    this.gameMusic.currentTime = 0;\n    this.gameMusic.play();\n    let cont1, cont2;\n    if (this.computerplayer1) {\n      this.controller1.removeListeners();\n      cont1 = new _computer_controller__WEBPACK_IMPORTED_MODULE_0__.ComputerController(null, 1, this.controller1ctx, null, this.difficulty1);\n    } else {\n      cont1 = this.controller1;\n    }\n    if (this.computerplayer2) {\n      this.controller2.removeListeners();\n      cont2 = new _computer_controller__WEBPACK_IMPORTED_MODULE_0__.ComputerController(null, 2, this.controller2ctx, null, this.difficulty2);\n    } else {\n      cont2 = this.controller2;\n    }\n    this.game = new _game__WEBPACK_IMPORTED_MODULE_3__.Game(this.ctx, cont1, cont2, this);\n    this.game.start();\n    if (this.muted) {\n      this.game.mute();\n    }\n  }\n  stopGame() {\n    this.lastWinner = this.game.winner();\n    this.game.mute();\n    delete this.game;\n    this.restartMenu(true);\n  }\n  togglePlayer1() {\n    this.computerplayer1 = !this.computerplayer1;\n  }\n  togglePlayer2() {\n    this.computerplayer2 = !this.computerplayer2;\n  }\n  addGamePad(gamepad) {\n    if (this.controller1.gamepad === undefined) {\n      // console.log(\"player1 assigned controller\")\n      this.controller1.removeListeners();\n      this.computerplayer1 = false;\n      this.controller1 = new _gamepad_controller__WEBPACK_IMPORTED_MODULE_2__.GamePadController(gamepad, this.controller1ctx);\n    } else if (this.controller2.gamepad === undefined) {\n      // console.log(\"player2 assigned controller\")\n      this.controller2.removeListeners();\n      this.computerplayer2 = false;\n      this.controller2 = new _gamepad_controller__WEBPACK_IMPORTED_MODULE_2__.GamePadController(gamepad, this.controller2ctx);\n    }\n  }\n  setupMusic() {\n    this.menuMusic = new Audio(\"assets/music/Dani Stob - Facing The Enemy.mp3\");\n    this.menuMusic.loop = true;\n    // this.menuMusic.play();\n\n    this.gameMusic = new Audio(\"assets/music/Dani Stob - Arena Fight.mp3\");\n    this.gameMusic.loop = true;\n    this.muted = false;\n  }\n  toggleMute() {\n    if (this.muted) {\n      this.unmute();\n      this.muted = false;\n    } else {\n      this.mute();\n      this.muted = true;\n    }\n  }\n  mute() {\n    this.menuMusic.volume = 0;\n    this.gameMusic.volume = 0;\n    if (this.game) {\n      this.game.mute();\n    }\n  }\n  unmute() {\n    this.menuMusic.volume = 1;\n    this.gameMusic.volume = 1;\n    if (this.game) {\n      this.game.unmute();\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/mainmenu.js\n");

/***/ }),

/***/ "./src/scripts/moveable.js":
/*!*********************************!*\
  !*** ./src/scripts/moveable.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Moveable\": function() { return /* binding */ Moveable; }\n/* harmony export */ });\nclass Moveable {\n  static GRAVITY = [0.5, 0.75];\n  constructor(options) {\n    this.pos = options[\"startpos\"];\n    this.vel = [0, 0];\n    this.FLOOR = options[\"floor\"];\n  }\n  move() {\n    if (this.pos[1] === this.FLOOR && this.currentAction !== \"run\") {\n      if (this.vel[0] < -Moveable.GRAVITY[0]) {\n        this.vel[0] += Moveable.GRAVITY[0];\n      } else if (this.vel[0] > Moveable.GRAVITY[0]) {\n        this.vel[0] -= Moveable.GRAVITY[0];\n      } else {\n        this.vel[0] = 0;\n      }\n    }\n    this.pos[0] += this.vel[0];\n    this.vel[1] += Moveable.GRAVITY[1];\n    this.pos[1] += this.vel[1];\n    this.checkFloor();\n    this.checkFacing();\n  }\n  setFloor(floor) {\n    this.FLOOR = floor;\n  }\n  checkFloor() {\n    if (this.pos[1] > this.FLOOR) {\n      this.vel[1] = 0;\n      this.pos[1] = this.FLOOR;\n    }\n  }\n  checkFacing() {\n    if (this.vel[0] < 0) {\n      this.xFacing = -1;\n    } else if (this.vel[0] > 0) {\n      this.xFacing = 1;\n    }\n  }\n  draw() {\n    throw new Error(\"Draw not implemented?\");\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tb3ZlYWJsZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsUUFBUSxDQUFDO0VBQ2xCLE9BQU9DLE9BQU8sR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUM7RUFFNUJDLFdBQVdBLENBQUNDLE9BQU8sRUFBRTtJQUNqQixJQUFJLENBQUNDLEdBQUcsR0FBR0QsT0FBTyxDQUFDLFVBQVUsQ0FBQztJQUM5QixJQUFJLENBQUNFLEdBQUcsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDakIsSUFBSSxDQUFDQyxLQUFLLEdBQUdILE9BQU8sQ0FBQyxPQUFPLENBQUM7RUFDakM7RUFFQUksSUFBSUEsQ0FBQSxFQUFHO0lBQ0gsSUFBSSxJQUFJLENBQUNILEdBQUcsQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLENBQUNFLEtBQUssSUFBSSxJQUFJLENBQUNFLGFBQWEsS0FBSyxLQUFLLEVBQUU7TUFDNUQsSUFBSSxJQUFJLENBQUNILEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDTCxRQUFRLENBQUNDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNwQyxJQUFJLENBQUNJLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSUwsUUFBUSxDQUFDQyxPQUFPLENBQUMsQ0FBQyxDQUFDO01BQ3RDLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQ0ksR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHTCxRQUFRLENBQUNDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUMxQyxJQUFJLENBQUNJLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSUwsUUFBUSxDQUFDQyxPQUFPLENBQUMsQ0FBQyxDQUFDO01BQ3RDLENBQUMsTUFBTTtRQUNILElBQUksQ0FBQ0ksR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7TUFDbkI7SUFDSjtJQUNBLElBQUksQ0FBQ0QsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUMxQixJQUFJLENBQUNBLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSUwsUUFBUSxDQUFDQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQ2xDLElBQUksQ0FBQ0csR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUUxQixJQUFJLENBQUNJLFVBQVUsQ0FBQyxDQUFDO0lBQ2pCLElBQUksQ0FBQ0MsV0FBVyxDQUFDLENBQUM7RUFDdEI7RUFFQUMsUUFBUUEsQ0FBQ0MsS0FBSyxFQUFFO0lBQ1osSUFBSSxDQUFDTixLQUFLLEdBQUdNLEtBQUs7RUFDdEI7RUFFQUgsVUFBVUEsQ0FBQSxFQUFHO0lBQ1QsSUFBSSxJQUFJLENBQUNMLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUNFLEtBQUssRUFBRTtNQUMxQixJQUFJLENBQUNELEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO01BQ2YsSUFBSSxDQUFDRCxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDRSxLQUFLO0lBQzVCO0VBQ0o7RUFFQUksV0FBV0EsQ0FBQSxFQUFHO0lBQ1YsSUFBSSxJQUFJLENBQUNMLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUU7TUFDakIsSUFBSSxDQUFDUSxPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ3JCLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQ1IsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRTtNQUN4QixJQUFJLENBQUNRLE9BQU8sR0FBRyxDQUFDO0lBQ3BCO0VBQ0o7RUFFQUMsSUFBSUEsQ0FBQSxFQUFHO0lBQ0gsTUFBTSxJQUFJQyxLQUFLLENBQUMsdUJBQXVCLENBQUM7RUFDNUM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlbGVudGxlc3NfY2xhc2gvLi9zcmMvc2NyaXB0cy9tb3ZlYWJsZS5qcz85MWI5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBNb3ZlYWJsZSB7XG4gICAgc3RhdGljIEdSQVZJVFkgPSBbMC41LCAwLjc1XTtcblxuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5wb3MgPSBvcHRpb25zW1wic3RhcnRwb3NcIl07XG4gICAgICAgIHRoaXMudmVsID0gWzAsIDBdO1xuICAgICAgICB0aGlzLkZMT09SID0gb3B0aW9uc1tcImZsb29yXCJdO1xuICAgIH1cblxuICAgIG1vdmUoKSB7XG4gICAgICAgIGlmICh0aGlzLnBvc1sxXSA9PT0gdGhpcy5GTE9PUiAmJiB0aGlzLmN1cnJlbnRBY3Rpb24gIT09IFwicnVuXCIpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnZlbFswXSA8IC1Nb3ZlYWJsZS5HUkFWSVRZWzBdKSB7XG4gICAgICAgICAgICAgICAgdGhpcy52ZWxbMF0gKz0gTW92ZWFibGUuR1JBVklUWVswXTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy52ZWxbMF0gPiBNb3ZlYWJsZS5HUkFWSVRZWzBdKSB7XG4gICAgICAgICAgICAgICAgdGhpcy52ZWxbMF0gLT0gTW92ZWFibGUuR1JBVklUWVswXTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy52ZWxbMF0gPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMucG9zWzBdICs9IHRoaXMudmVsWzBdO1xuICAgICAgICB0aGlzLnZlbFsxXSArPSBNb3ZlYWJsZS5HUkFWSVRZWzFdO1xuICAgICAgICB0aGlzLnBvc1sxXSArPSB0aGlzLnZlbFsxXTtcblxuICAgICAgICB0aGlzLmNoZWNrRmxvb3IoKTtcbiAgICAgICAgdGhpcy5jaGVja0ZhY2luZygpO1xuICAgIH1cblxuICAgIHNldEZsb29yKGZsb29yKSB7XG4gICAgICAgIHRoaXMuRkxPT1IgPSBmbG9vcjtcbiAgICB9XG5cbiAgICBjaGVja0Zsb29yKCkge1xuICAgICAgICBpZiAodGhpcy5wb3NbMV0gPiB0aGlzLkZMT09SKSB7XG4gICAgICAgICAgICB0aGlzLnZlbFsxXSA9IDA7XG4gICAgICAgICAgICB0aGlzLnBvc1sxXSA9IHRoaXMuRkxPT1I7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjaGVja0ZhY2luZygpIHtcbiAgICAgICAgaWYgKHRoaXMudmVsWzBdIDwgMCkge1xuICAgICAgICAgICAgdGhpcy54RmFjaW5nID0gLTE7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy52ZWxbMF0gPiAwKSB7XG4gICAgICAgICAgICB0aGlzLnhGYWNpbmcgPSAxO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZHJhdygpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRHJhdyBub3QgaW1wbGVtZW50ZWQ/XCIpXG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIk1vdmVhYmxlIiwiR1JBVklUWSIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsInBvcyIsInZlbCIsIkZMT09SIiwibW92ZSIsImN1cnJlbnRBY3Rpb24iLCJjaGVja0Zsb29yIiwiY2hlY2tGYWNpbmciLCJzZXRGbG9vciIsImZsb29yIiwieEZhY2luZyIsImRyYXciLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/moveable.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Player\": function() { return /* binding */ Player; }\n/* harmony export */ });\n/* harmony import */ var _Characters_commander_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Characters/commander.js */ \"./src/scripts/Characters/commander.js\");\n/* harmony import */ var _Characters_samurai_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Characters/samurai.js */ \"./src/scripts/Characters/samurai.js\");\n/* harmony import */ var _game_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./game.js */ \"./src/scripts/game.js\");\n/* harmony import */ var _moveable_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./moveable.js */ \"./src/scripts/moveable.js\");\n\n\n\n\nclass Player extends _moveable_js__WEBPACK_IMPORTED_MODULE_3__.Moveable {\n  constructor(options) {\n    // let options = {startpos: startpos};\n    super(options);\n    this.name = options[\"name\"];\n    if (this.name === \"player1\") {\n      this.xFacing = 1;\n      this.character = new _Characters_samurai_js__WEBPACK_IMPORTED_MODULE_1__.Samurai(this); // change later when introduce other sprites?\n    } else {\n      this.xFacing = -1;\n      this.character = new _Characters_commander_js__WEBPACK_IMPORTED_MODULE_0__.Commander(this); // change later when introduce other sprites?\n    }\n\n    this.moveSpeed = 10;\n    this.scale = 3.15;\n    this.health = 100;\n    this.setupMusic();\n    this.currentAction = \"idle\";\n    this.renderBoxes = false;\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n    this.handleButtonRelease = this.handleButtonRelease.bind(this);\n    this.stun = this.stun.bind(this);\n    this.unstun = this.unstun.bind(this);\n    this.runAnimationState = this.runAnimationState.bind(this);\n    this.togglePlayingAudio = this.togglePlayingAudio.bind(this);\n    this.mute = this.mute.bind(this);\n    this.unmute = this.unmute.bind(this);\n    this.stunned = false;\n    this.runAnimation = true;\n    // console.log(`${name} created successfully`)\n  }\n\n  draw(ctx) {\n    this.move();\n    if (this.runAnimation) {\n      this.character.currentAction(this.currentAction);\n    }\n    this.character.draw(ctx, this.pos, this.scale);\n  }\n  assignController(controller) {\n    this.controller = controller;\n    this.controller.assignPlayer(this);\n  }\n  getHurtBoxes(main_scale) {\n    if (this.character.hurtboxes) {\n      return this.calculateBoxes(main_scale, this.character.hurtboxes);\n    } else {\n      return [];\n    }\n  }\n  getHitBoxes(main_scale) {\n    if (this.character.hitboxes) {\n      return this.calculateBoxes(main_scale, this.character.hitboxes);\n    } else {\n      return [];\n    }\n  }\n  calculateBoxes(main_scale, boxes) {\n    let objBoxes = boxes;\n    let pos = this.pos;\n    let xFacing = this.xFacing;\n    let scale = this.scale;\n    let frameWidth = this.character.frameWidth;\n    let outputBoxes = [];\n    for (let k = 0; k < objBoxes.length; k++) {\n      let box = objBoxes[k].slice();\n      if (xFacing === 1) {\n        box[0] = pos[0] - frameWidth * scale / 2 + box[0] * scale;\n      } else {\n        box[0] = pos[0] + frameWidth * scale / 2 - box[0] * scale - box[2] * scale;\n      }\n      box[1] = pos[1] + box[1] * scale;\n      box[2] *= scale;\n      box[3] *= scale;\n      box[0] *= main_scale;\n      box[1] *= main_scale;\n      box[2] *= main_scale;\n      box[3] *= main_scale;\n      outputBoxes.push(box);\n    }\n    return outputBoxes;\n  }\n  toggleRenderBoxes() {\n    this.renderBoxes = !this.renderBoxes;\n  }\n  handleButtonPress(button) {\n    if (!this.stunned) {\n      let moves = this.character.possibleMoves[this.currentAction];\n      switch (button) {\n        case 'LEFT':\n          if (moves.includes(\"run\")) {\n            this.vel[0] = -1 * this.moveSpeed;\n            this.currentAction = \"run\";\n          } else {\n            this.vel[0] = -1 * this.moveSpeed;\n          }\n          break;\n        case 'RIGHT':\n          if (moves.includes(\"run\")) {\n            this.vel[0] = 1 * this.moveSpeed;\n            this.currentAction = \"run\";\n          } else {\n            this.vel[0] = 1 * this.moveSpeed;\n          }\n          break;\n        case 'UP':\n          if (this.pos[1] === this.FLOOR && moves.includes(\"jump\")) {\n            this.vel[1] = -2 * this.moveSpeed;\n            this.currentAction = \"jump\";\n          }\n          break;\n        case 'B':\n          if (moves.includes(\"attack1\")) {\n            this.currentAction = \"attack1\";\n          }\n          break;\n        case 'Y':\n          if (moves.includes(\"attack2\")) {\n            this.currentAction = \"attack2\";\n          }\n          break;\n        case 'X':\n          if (moves.includes(\"attack3\")) {\n            this.currentAction = \"attack3\";\n          }\n          break;\n      }\n      if ((button === \"B\" || button === \"Y\" || button || \"X\") && !this.playingAudio) {\n        this.swordSounds[Math.floor(Math.random() * this.swordSounds.length)].play();\n        this.playingAudio = true;\n        setTimeout(this.togglePlayingAudio, 500);\n      }\n    }\n  }\n  handleButtonRelease(button) {\n    if (!this.stunned) {\n      switch (button) {\n        case 'LEFT':\n          if (this.vel[0] < 0 && this.currentAction === \"run\") {\n            this.vel[0] = 0;\n            this.character.stopAction(\"run\");\n          }\n          break;\n        case 'RIGHT':\n          if (this.vel[0] > 0 && this.currentAction === \"run\") {\n            this.vel[0] = 0;\n            this.character.stopAction(\"run\");\n          }\n          break;\n      }\n    }\n  }\n  stun(duration) {\n    this.stunned = true;\n    if (duration) {\n      setTimeout(this.unstun, duration);\n    }\n  }\n  unstun() {\n    this.stunned = false;\n  }\n  runAnimationState() {\n    let bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this.runAnimation = bool;\n  }\n  setupMusic() {\n    this.swordSounds = [new Audio(\"assets/music/SwordSwipe1.mp3\"), new Audio(\"assets/music/SwordSwipe2.mp3\"), new Audio(\"assets/music/SwordSwipe3.mp3\"), new Audio(\"assets/music/SwordSwipe4.mp3\"), new Audio(\"assets/music/SwordSwipe5.mp3\")];\n    this.swordSounds.forEach(sound => {\n      sound.loop = false;\n    });\n    this.playingAudio = false;\n  }\n  togglePlayingAudio() {\n    this.playingAudio = !this.playingAudio;\n  }\n  mute() {\n    this.swordSounds.forEach(sound => {\n      sound.volume = 0;\n    });\n  }\n  unmute() {\n    this.swordSounds.forEach(sound => {\n      sound.volume = 1;\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWxlbnRsZXNzX2NsYXNoLy4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;