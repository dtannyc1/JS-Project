{"version":3,"file":"main.js","mappings":"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","sources":["webpack://relentless_clash/./src/scripts/Backgrounds/train.js","webpack://relentless_clash/./src/scripts/Backgrounds/war.js","webpack://relentless_clash/./src/scripts/game_view.js","webpack://relentless_clash/./src/scripts/Characters/general_character.js","webpack://relentless_clash/./src/scripts/Characters/commander.js","webpack://relentless_clash/./src/scripts/Characters/samurai.js","webpack://relentless_clash/./src/scripts/moveable.js","webpack://relentless_clash/./src/scripts/player.js","webpack://relentless_clash/./src/scripts/game.js","webpack://relentless_clash/./src/scripts/controller.js","webpack://relentless_clash/./src/scripts/computer_controller.js","webpack://relentless_clash/./src/scripts/gamepad_controller.js","webpack://relentless_clash/./src/index.js","webpack://relentless_clash/./src/scripts/mainmenu.js"],"sourcesContent":["\nexport class Train {\n    static BACKGROUND_OFFSET_X = -400;\n    static BACKGROUND_OFFSET_Y = -200;\n    static BACKGROUND_SCALE = 0.9;\n    static CAMERA_LIMIT_LEFT = -400;\n    static CAMERA_LIMIT_RIGHT = 225;\n    static FLOOR = 175;\n\n    static BACKGROUND_IMAGES = [\n        [\"assets/images/Backgrounds/Postapocalypce4/Bright/bg.png\", 0],\n        [\"assets/images/Backgrounds/Postapocalypce4/Bright/rail&wall.png\", 0.25],\n        [\"assets/images/Backgrounds/Postapocalypce4/Bright/train.png\", 0.5],\n        [\"assets/images/Backgrounds/Postapocalypce4/Bright/columns&floor.png\", 0.75]\n    ];\n\n    static FOREGROUND_IMAGES = [\n        [\"assets/images/Backgrounds/Postapocalypce4/Bright/infopost&wires.png\", 1],\n        [\"assets/images/Backgrounds/Postapocalypce4/Bright/wires.png\", 1],\n        [\"assets/images/Backgrounds/Postapocalypce4/Bright/floor&underfloor.png\", 1]\n    ]\n\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.CAMERA_LIMIT_LEFT = Train.CAMERA_LIMIT_LEFT;\n        this.CAMERA_LIMIT_RIGHT = Train.CAMERA_LIMIT_RIGHT;\n        this.FLOOR = Train.FLOOR;\n\n        let body = document.querySelector(\"body\");\n\n        this.backgroundImgs = [];\n        this.foregroundImgs = [];\n        for (let i = 0; i < Train.BACKGROUND_IMAGES.length; i++) {\n            let img = document.createElement('img');\n            img.src = Train.BACKGROUND_IMAGES[i][0];\n            img.id = `background-${i}`;\n            img.hidden = true;\n            body.appendChild(img);\n            this.backgroundImgs.push(img);\n        }\n\n        for (let i = 0; i < Train.FOREGROUND_IMAGES.length; i++) {\n            let img = document.createElement('img');\n            img.src = Train.FOREGROUND_IMAGES[i][0];\n            img.id = `foreground-${i}`;\n            img.hidden = true;\n            body.appendChild(img);\n            this.foregroundImgs.push(img);\n        }\n    }\n\n    drawBackground(camera_location, scale) {\n        this.ctx.resetTransform();\n\n        for (let i = 0; i < Train.BACKGROUND_IMAGES.length; i++){\n            let multiplier = Train.BACKGROUND_IMAGES[i][1];\n            let sx = -scale*(Train.BACKGROUND_OFFSET_X - camera_location*multiplier);\n            let sy = -scale*(Train.BACKGROUND_OFFSET_Y);\n            let sw = 720/Train.BACKGROUND_SCALE/scale;\n            let sh = 540/Train.BACKGROUND_SCALE/scale;\n            this.ctx.drawImage(this.backgroundImgs[i],\n                sx, sy, sw, sh,\n                0, 0, 720, 540);\n        }\n    }\n\n    drawForeground(camera_location, scale) {\n        this.ctx.resetTransform();\n\n        for (let i = 0; i < Train.FOREGROUND_IMAGES.length; i++){\n            let multiplier = Train.FOREGROUND_IMAGES[i][1];\n            let sx = -(Train.BACKGROUND_OFFSET_X - camera_location*multiplier)/scale;\n            let sy = -(Train.BACKGROUND_OFFSET_Y)/scale;\n            let sw = 720/Train.BACKGROUND_SCALE/scale;\n            let sh = 540/Train.BACKGROUND_SCALE/scale;\n            this.ctx.drawImage(this.foregroundImgs[i],\n                sx, sy, sw, sh,\n                0, 0, 720, 540);\n        }\n    }\n}\n","\nexport class War {\n    static BACKGROUND_OFFSET_X = -400;\n    static BACKGROUND_OFFSET_Y = -150;\n    static BACKGROUND_SCALE = 0.85;\n    static CAMERA_LIMIT_LEFT = -400;\n    static CAMERA_LIMIT_RIGHT = 190;\n    static FLOOR = 240;\n\n    static BACKGROUND_IMAGES = [\n        [\"assets/images/Backgrounds/War3/Bright/sky_sun.png\", 0],\n        [\"assets/images/Backgrounds/War3/Bright/houses3.png\", 0.25],\n        [\"assets/images/Backgrounds/War3/Bright/houses2.png\", 0.5],\n        [\"assets/images/Backgrounds/War3/Bright/trees.png\", 0.75],\n        [\"assets/images/Backgrounds/War3/Bright/house&fountain.png\", 0.75]\n    ];\n\n    static FOREGROUND_IMAGES = [\n        [\"assets/images/Backgrounds/War3/Bright/fence.png\", 1],\n        [\"assets/images/Backgrounds/War3/Bright/road.png\", 1]\n    ]\n\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.FLOOR = War.FLOOR;\n        this.CAMERA_LIMIT_LEFT = War.CAMERA_LIMIT_LEFT;\n        this.CAMERA_LIMIT_RIGHT = War.CAMERA_LIMIT_RIGHT;\n\n        let body = document.querySelector(\"body\");\n\n        this.backgroundImgs = [];\n        this.foregroundImgs = [];\n        for (let i = 0; i < War.BACKGROUND_IMAGES.length; i++) {\n            let img = document.createElement('img');\n            img.src = War.BACKGROUND_IMAGES[i][0];\n            img.id = `background-${i}`;\n            img.hidden = true;\n            body.appendChild(img);\n            this.backgroundImgs.push(img);\n        }\n\n        for (let i = 0; i < War.FOREGROUND_IMAGES.length; i++) {\n            let img = document.createElement('img');\n            img.src = War.FOREGROUND_IMAGES[i][0];\n            img.id = `foreground-${i}`;\n            img.hidden = true;\n            body.appendChild(img);\n            this.foregroundImgs.push(img);\n        }\n    }\n\n    drawBackground(camera_location, scale) {\n        this.ctx.resetTransform();\n\n        for (let i = 0; i < War.BACKGROUND_IMAGES.length; i++){\n            let multiplier = War.BACKGROUND_IMAGES[i][1];\n            let sx = -scale*(War.BACKGROUND_OFFSET_X - camera_location*multiplier);\n            let sy = -scale*(War.BACKGROUND_OFFSET_Y);\n            let sw = 720/War.BACKGROUND_SCALE/scale;\n            let sh = 540/War.BACKGROUND_SCALE/scale;\n            this.ctx.drawImage(this.backgroundImgs[i],\n                sx, sy, sw, sh,\n                0, 0, 720, 540);\n        }\n    }\n\n    drawForeground(camera_location, scale) {\n        this.ctx.resetTransform();\n\n        for (let i = 0; i < War.FOREGROUND_IMAGES.length; i++){\n            let multiplier = War.FOREGROUND_IMAGES[i][1];\n            let sx = -(War.BACKGROUND_OFFSET_X - camera_location*multiplier)/scale;\n            let sy = -(War.BACKGROUND_OFFSET_Y)/scale;\n            let sw = 720/War.BACKGROUND_SCALE/scale;\n            let sh = 540/War.BACKGROUND_SCALE/scale;\n            this.ctx.drawImage(this.foregroundImgs[i],\n                sx, sy, sw, sh,\n                0, 0, 720, 540);\n        }\n    }\n}\n","import { Train } from \"./Backgrounds/train\";\nimport { War } from \"./Backgrounds/war\";\n\nexport class GameView {\n    // Constants\n    static MAIN_SCALE = 0.75;\n    static WIDTH = 960*GameView.MAIN_SCALE;\n    static HEIGHT = 720*GameView.MAIN_SCALE;\n\n    // Class methods\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.camera_location = 0;\n\n        this.loadStages();\n\n        this.randomizeStage();\n    }\n\n    loadStages() {\n        this.stages = [];\n        this.stages.push(new Train(this.ctx));\n        this.stages.push(new War(this.ctx));\n    }\n\n    randomizeStage() {\n        this.background = this.stages[Math.floor(Math.random()*this.stages.length)];\n    }\n\n    draw(objects) {\n        let ctx = this.ctx;\n        ctx.resetTransform();\n        ctx.clearRect(0,0,GameView.WIDTH, GameView.HEIGHT)\n\n        // Calculate camera location\n        this.calculateCameraLocation(objects);\n\n        // draw background image\n        this.background.drawBackground(this.camera_location, GameView.MAIN_SCALE);\n\n        // draw fighters and other assets\n        objects.forEach((obj) => {\n            ctx.resetTransform();\n            ctx.translate(GameView.WIDTH/2, 0);\n            ctx.scale(GameView.MAIN_SCALE, GameView.MAIN_SCALE);\n            ctx.translate(-this.camera_location, 0);\n            obj.draw(ctx);\n        })\n\n        // enforce camera limits\n        this.enforceCameraLimits(objects);\n\n        // draw foreground image\n        this.background.drawForeground(this.camera_location, GameView.MAIN_SCALE);\n\n        // draw health bars\n        this.drawHealthBars(objects);\n    }\n\n    calculateCameraLocation(objects){\n        let sumX = 0;\n        objects.forEach((obj) => {\n            sumX += obj.pos[0];\n        })\n        let avgX = sumX / objects.length;\n        if (avgX < this.background.CAMERA_LIMIT_LEFT) {\n            this.camera_location = this.background.CAMERA_LIMIT_LEFT;\n        } else if (avgX > this.background.CAMERA_LIMIT_RIGHT) {\n            this.camera_location = this.background.CAMERA_LIMIT_RIGHT;\n        } else {\n            this.camera_location = avgX;\n        }\n    }\n\n    drawHealthBars(objects){\n        let ctx = this.ctx;\n        let barThickness = 18;\n        let start1 = GameView.WIDTH*0.04;\n        let start2 = GameView.WIDTH*0.96;\n        let barSize = GameView.WIDTH*0.4;\n        let healthyColor = \"0, 220, 0\";\n        let hurtColor = \"170, 0, 0\";\n\n        objects.forEach((obj) => {\n            ctx.resetTransform();\n            let startpos, barwidth, sign;\n            if (obj.name === \"player1\") {\n                startpos = [start1, start1];\n                barwidth = barSize;\n                sign = 1;\n            } else {\n                startpos = [start2, start1];\n                barwidth = -barSize;\n                sign = -1;\n            }\n            for (let i = 5; i >= 0; i--) {\n                if (obj.health === 100) {\n                    ctx.strokeStyle = `rgb(${healthyColor}, ${0.25 + (5-i)/5*0.75})`;\n                    ctx.lineWidth = barThickness+i;\n                    ctx.beginPath();\n                    ctx.moveTo(startpos[0]-i*sign, startpos[1]);\n                    ctx.lineTo(startpos[0] + obj.health/100*barwidth +i*sign, startpos[1]);\n                    ctx.stroke();\n                } else if (obj.health === 0) {\n                    ctx.beginPath();\n                    ctx.lineWidth = barThickness+i;\n                    ctx.strokeStyle = `rgb(${hurtColor}, ${0.25 + (5-i)/5*0.75})`;\n                    ctx.moveTo(startpos[0] + obj.health/100*barwidth - i*sign, startpos[1]);\n                    ctx.lineTo(startpos[0] + barwidth + i*sign, startpos[1]);\n                    ctx.stroke();\n                } else {\n                    ctx.strokeStyle = `rgb(${healthyColor}, ${0.25 + (5-i)/5*0.75})`;\n                    ctx.lineWidth = barThickness+i;\n                    ctx.beginPath();\n                    ctx.moveTo(startpos[0]-i*sign, startpos[1]);\n                    ctx.lineTo(startpos[0] + obj.health/100*barwidth, startpos[1]);\n                    ctx.stroke();\n\n                    ctx.beginPath();\n                    ctx.strokeStyle = `rgb(${hurtColor}, ${0.25 + (5-i)/5*0.75})`;\n                    ctx.moveTo(startpos[0] + obj.health/100*barwidth, startpos[1]);\n                    ctx.lineTo(startpos[0] + barwidth + i*sign, startpos[1]);\n                    ctx.stroke();\n                }\n            }\n        })\n    }\n\n    enforceCameraLimits(objects){\n        objects.forEach((obj) => {\n            // use body hurtbox to calculate x-limit\n            let bodyBox = obj.getHurtBoxes(GameView.MAIN_SCALE)[1]\n            let left = bodyBox[0];\n            let right = bodyBox[0] + bodyBox[2];\n\n            if (left - this.camera_location*GameView.MAIN_SCALE < -GameView.WIDTH/2){\n                let dx = left - this.camera_location*GameView.MAIN_SCALE + GameView.WIDTH/2;\n                obj.pos[0] -= dx;\n            } else if (right - this.camera_location*GameView.MAIN_SCALE > GameView.WIDTH/2) {\n                let dx = right - this.camera_location*GameView.MAIN_SCALE - GameView.WIDTH/2;\n                obj.pos[0] -= dx;\n            }\n        });\n    }\n\n    renderScore(score) {\n        let formattedScore = score.join(' - ')\n        this.ctx.font = \"28px Arial\";\n        this.ctx.fillStyle = \"yellow\";\n        this.ctx.textAlign = \"center\";\n\n        this.ctx.fillText(formattedScore, GameView.WIDTH*0.5, GameView.WIDTH*0.053)\n    }\n}\n","\nexport class GeneralCharacter {\n    constructor(player, src, frameWidth, frameHeight, animationFrameInfo, singleActions) {\n        let body = document.querySelector(\"body\");\n        let img = document.createElement('img');\n        img.src = src;\n        img.id = `${player.name}-sprite`;\n        img.hidden = true;\n        body.appendChild(img);\n        this.player = player;\n\n        this.img = document.getElementById(img.id);\n\n        this.frameWidth = frameWidth;\n        this.frameHeight = frameHeight;\n        this.animationFrameInfo = animationFrameInfo;\n        this.singleActions = singleActions;\n\n        this.framePosX = 0;\n        this.framePosY = 0;\n\n        this.draw = this.draw.bind(this);\n        this.currentAction = this.currentAction.bind(this);\n        this.stopAction = this.stopAction.bind(this);\n        this.animate = this.animate.bind(this);\n\n        this.resetHurtBoxes();\n        this.resetHitBox();\n    }\n\n    draw(ctx, pos, scale) {\n        ctx.translate(pos[0], pos[1])\n        if (this.player.xFacing === -1) {\n            ctx.scale(-1,1);\n        }\n\n        ctx.drawImage(this.img,\n            this.framePosX,this.framePosY,\n            this.frameWidth, this.frameHeight,\n            -this.frameWidth*scale/2, 0,\n            this.frameWidth*scale, this.frameHeight*scale)\n\n        ctx.scale(scale, scale)\n        ctx.translate(-this.frameWidth/2,0);\n\n        if (this.player.renderBoxes) {\n            // render hurtboxes\n            ctx.fillStyle = \"#00ff0050\";\n            this.hurtboxes.forEach((box) => {\n                ctx.fillRect(...box)\n            })\n\n            // render hitbox\n            ctx.fillStyle = \"#ff000050\";\n            this.hitboxes.forEach((box) => {\n                ctx.fillRect(...box)\n            })\n        }\n    }\n\n    currentAction(name){\n        // console.log(this.prototype)\n        if (this.singleActions.includes(name)) {\n            this.animate(name, true);\n        } else {\n            this.animate(name);\n        }\n    }\n\n    stopAction(name){\n        // reset animation\n        this.animationFrameInfo[name].framenum = 0;\n\n        if (this.player.controller.heldButtons.length > 0) {\n            let arr = this.player.controller.heldButtons;\n            let button = arr[arr.length-1];\n\n            switch (button){\n                case 'LEFT':\n                    this.player.vel[0] = -1*this.player.moveSpeed;\n                    this.player.currentAction = \"run\";\n                    break;\n                case 'RIGHT':\n                    this.player.vel[0] = this.player.moveSpeed;\n                    this.player.currentAction = \"run\";\n                    break;\n                default:\n                    this.player.currentAction = \"idle\";\n                    break;\n            }\n        } else {\n            this.player.currentAction = \"idle\";\n        }\n    }\n\n    animate(name, playOnce = false) {\n        // increment frame number\n        this.animationFrameInfo[name].framenum += 1;\n\n        let frameNum = this.animationFrameInfo[name].framenum;\n        let totalFrames = this.animationFrameInfo[name].frames.reduce((a,b) => a + b, 0);\n        if (playOnce && frameNum >= totalFrames){\n            this.stopAction(name);\n        } else {\n            frameNum = (frameNum + totalFrames) % totalFrames;\n\n            // define local vars\n            let sum = 0;\n            let fnum;\n\n            for (let i = 0; i < this.animationFrameInfo[name].frames.length; i++) {\n                let dur = this.animationFrameInfo[name].frames[i];\n                sum += dur;\n                if (sum > frameNum) {\n                    fnum = i;\n                    break;\n                }\n            }\n\n            let originY = this.animationFrameInfo[name].originY;\n\n            // update frame\n            this.framePosX = fnum*this.frameWidth;\n            this.framePosY = originY*this.frameHeight;\n\n            // update hurtboxes\n            if (this.animationFrameInfo[name].hurtboxes) {\n                this.updateHurtboxes(this.animationFrameInfo[name].hurtboxes[fnum])\n            } else {\n                this.resetHurtBoxes();\n            }\n\n            // update hitbox\n            if (this.animationFrameInfo[name].hitboxes) {\n                this.updateHitBox(this.animationFrameInfo[name].hitboxes[fnum])\n            } else {\n                this.resetHitBox();\n            }\n        }\n    }\n\n    resetHurtBoxes() {\n        this.hurtboxes = [[0,0,0,0],[0,0,0,0],[0,0,0,0]]\n    }\n    updateHurtboxes(hurtboxes) {\n        this.hurtboxes = hurtboxes;\n    }\n\n    resetHitBox() {\n        this.hitboxes = [[0,0,0,0]];\n    }\n\n    updateHitBox(hitbox) {\n        this.hitboxes = [hitbox]\n    }\n}\n","import { GeneralCharacter } from \"./general_character\";\n\nexport class Commander extends GeneralCharacter {\n\n    // Specific constants for Commander Sprite Sheet\n    static imgSrc = \"assets/images/Sprite Sheets/Samurai_Commander/SamuraiCommanderSheet.png\";\n    static frameWidth = 128;\n    static frameHeight = 128;\n\n    static animationFrameInfo = {\n        idle: {\n            framenum: 0,\n            originY: 0,\n            frames: Array(5).fill(12),\n            hurtboxes: [\n                [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]],\n                [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]],\n                [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]],\n                [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]],\n                [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]]\n            ]\n        },\n        run: {\n            framenum: 0,\n            originY: 1,\n            frames: Array(8).fill(6),\n            hurtboxes: [\n                [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]]\n            ]\n        },\n        walk: {\n            framenum: 0,\n            originY: 2,\n            frames: [4, 4, 4, 4, 4, 4, 4, 4, 4]\n        },\n        jump: {\n            framenum: 0,\n            originY: 3,\n            frames: [8, 8, 10, 9, 9, 8, 8], // + 11\n            hurtboxes: [\n                [[62,68,14,14], [55,80,22,30], [54,110,32,16]],\n                [[64,48,13,14], [56,59,21,35], [53,92,20,28]],\n                [[64,53,13,14], [59,62,20,30], [61,89,28,22]],\n                [[65,53,12,14], [58,63,23,29], [61,93,28,20]],\n                [[64,55,14,14], [54,67,22,32], [48,99,23,21]],\n                [[65,80,12,15], [53,86,26,27], [57,110,27,16]],\n                [[65,80,12,15], [53,86,26,27], [57,110,26,16]]\n            ]\n        },\n        attack1: {\n            framenum: 0,\n            originY: 4,\n            frames: [2, 2, 3, 3],\n            hurtboxes: [\n                [[48,60,16,15], [43,73,27,36], [34,108,41,18]],\n                [[48,60,16,15], [43,73,27,36], [34,108,41,18]],\n                [[59,60,15,15], [42,72,42,38], [34,108,41,18]],\n                [[58,60,17,15], [41,72,34,36], [36,109,40,18]]\n            ],\n            hitboxes: [\n                [0,0,0,0],\n                [0,0,0,0],\n                [83,68,38,35],\n                [79,67,37,11]\n            ]\n        },\n        attack2: {\n            framenum: 0,\n            originY: 6,\n            frames: [6, 8, 6, 5],\n            hurtboxes: [\n                [[63,65,13,15], [43,79,33,32], [35,109,39,17]],\n                [[56,60,12,15], [47,73,24,40], [35,109,39,17]],\n                [[61,62,10,10], [44,72,34,29], [35,100,40,26]],\n                [[61,62,10,10], [44,72,34,29], [35,100,40,26]]\n            ],\n            hitboxes: [\n                [0,0,0,0],\n                [0,0,0,0],\n                [84,57,32,41],\n                [83,55,15,17]\n            ]\n        },\n        attack3: {\n            framenum: 0,\n            originY: 5,\n            frames: [3, 6, 8, 4, 4],\n            hurtboxes: [\n                [[51,59,14,11], [51,69,22,39], [44,107,33,19]],\n                [[54,59,13,10], [52,69,20,38], [44,108,31,18]],\n                [[54,59,13,10], [52,69,20,38], [44,108,31,18]],\n                [[55,59,13,13], [55,72,22,34], [44,104,36,22]],\n                [[72,65,13,15], [51,79,33,30], [45,108,38,18]]\n            ],\n            hitboxes: [\n                [31,50,42,9],\n                [43,27,29,28],\n                [56,21,19,32],\n                [87,28,11,37],\n                [87,75,39,35]\n            ]\n        },\n        hurt: {\n            framenum: 0,\n            originY: 7,\n            frames: [4,4,4],\n            hurtboxes: [\n                [[46,58,13,14], [46,71,24,37], [43,107,28,19]],\n                [[45,57,13,15], [45,71,23,36], [43,103,29,23]],\n                [[44,58,13,14], [44,70,24,37], [42,104,31,22]]\n            ]\n        },\n        dead: {\n            framenum: 0,\n            originY: 8,\n            frames: [4,4,6,30,6,1000]\n        },\n        guard: {\n            framenum: 0,\n            originY: 9,\n            frames: [2,2]\n        }\n    };\n\n    static POSSIBLE_MOVES = {\n        idle:   [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n        run:    [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n        walk:   [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n        jump:   [\"idle\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n        attack1: [\"idle\", \"hurt\", \"dead\"],\n        attack2: [\"idle\", \"hurt\", \"dead\"],\n        attack3: [\"idle\", \"hurt\", \"dead\"],\n        hurt:   [\"idle\", \"hurt\", \"dead\"],\n        dead:   [],\n        guard:  [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    };\n\n    static SINGLE_ACTIONS = [\"attack1\", \"attack2\", \"attack3\", \"jump\", \"hurt\"];\n\n    // Class Methods:\n    constructor(player) {\n        super(player,\n            Commander.imgSrc,\n            Commander.frameWidth,\n            Commander.frameHeight,\n            Commander.animationFrameInfo,\n            Commander.SINGLE_ACTIONS);\n        this.possibleMoves = Commander.POSSIBLE_MOVES;\n    }\n\n}\n","import { GeneralCharacter } from \"./general_character\";\n\nexport class Samurai extends GeneralCharacter {\n\n    // Specific constants for Samurai Sprite Sheet\n    static imgSrc = \"assets/images/Sprite Sheets/Samurai/SpriteSheet.png\";\n    static frameWidth = 128;\n    static frameHeight = 128;\n\n    static animationFrameInfo = {\n        idle: {\n            framenum: 0,\n            originY: 0,\n            frames: Array(6).fill(12),\n            hurtboxes: [\n                [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]],\n                [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]],\n                [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]],\n                [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]],\n                [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]],\n                [[54, 57, 18, 14], [51, 71, 27, 40], [52, 109, 26, 17]]\n            ]\n        },\n        run: {\n            framenum: 0,\n            originY: 1,\n            frames: Array(8).fill(6),\n            hurtboxes: [\n                [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [57, 104, 23, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [55, 104, 32, 22]],\n                [[79, 60, 15, 15], [58, 69, 30, 42], [53, 104, 37, 22]]\n            ]\n        },\n        walk: {\n            framenum: 0,\n            originY: 2,\n            frames: [4, 4, 4, 4, 4, 4, 4, 4, 4]\n        },\n        jump: {\n            framenum: 0,\n            originY: 3,\n            frames: [4, 7, 7, 7, 7, 7, 7, 7, 7],\n            hurtboxes: [\n                [[71,58,17,15], [58,71,27,38], [53,110,36,16]],\n                [[60,65,16,14], [57,77,22,34], [54,109,32,17]],\n                [[62,68,14,14], [55,80,22,30], [54,110,32,16]],\n                [[64,48,13,14], [56,59,21,35], [53,92,20,28]],\n                [[64,53,13,14], [59,62,20,30], [61,89,28,22]],\n                [[65,53,12,14], [58,63,23,29], [61,93,28,20]],\n                [[64,55,14,14], [54,67,22,32], [48,99,23,21]],\n                [[65,80,12,15], [53,86,26,27], [57,110,27,16]],\n                [[65,80,12,15], [53,86,26,27], [57,110,26,16]]\n            ]\n        },\n        attack1: {\n            framenum: 0,\n            originY: 4,\n            frames: [2, 2, 3, 3],\n            hurtboxes: [\n                [[48,60,16,15], [43,73,27,36], [34,108,41,18]],\n                [[48,60,16,15], [43,73,27,36], [34,108,41,18]],\n                [[59,60,15,15], [42,72,42,38], [34,108,41,18]],\n                [[58,60,17,15], [41,72,34,36], [36,109,40,18]]\n            ],\n            hitboxes: [\n                [0,0,0,0],\n                [0,0,0,0],\n                [83,68,38,35],\n                [79,67,37,11]\n            ]\n        },\n        attack2: {\n            framenum: 0,\n            originY: 6,\n            frames: [6, 8, 6, 5],\n            hurtboxes: [\n                [[63,65,13,15], [43,79,33,32], [35,109,39,17]],\n                [[56,60,12,15], [47,73,24,40], [35,109,39,17]],\n                [[61,62,10,10], [44,72,34,29], [35,100,40,26]],\n                [[61,62,10,10], [44,72,34,29], [35,100,40,26]]\n            ],\n            hitboxes: [\n                [0,0,0,0],\n                [0,0,0,0],\n                [84,57,32,41],\n                [83,55,15,17]\n            ]\n        },\n        attack3: {\n            framenum: 0,\n            originY: 5,\n            frames: [3, 6, 8, 4, 4],\n            hurtboxes: [\n                [[51,59,14,11], [51,69,22,39], [44,107,33,19]],\n                [[54,59,13,10], [52,69,20,38], [44,108,31,18]],\n                [[54,59,13,10], [52,69,20,38], [44,108,31,18]],\n                [[55,59,13,13], [55,72,22,34], [44,104,36,22]],\n                [[72,65,13,15], [51,79,33,30], [45,108,38,18]]\n            ],\n            hitboxes: [\n                [31,50,42,9],\n                [43,27,29,28],\n                [56,21,19,32],\n                [87,28,11,37],\n                [87,75,39,35]\n            ]\n        },\n        hurt: {\n            framenum: 0,\n            originY: 7,\n            frames: [4,4,4],\n            hurtboxes: [\n                [[46,58,13,14], [46,71,24,37], [43,107,28,19]],\n                [[45,57,13,15], [45,71,23,36], [43,103,29,23]],\n                [[44,58,13,14], [44,70,24,37], [42,104,31,22]]\n            ]\n        },\n        dead: {\n            framenum: 0,\n            originY: 8,\n            frames: [4,4,6,30,6,1000]\n        },\n        guard: {\n            framenum: 0,\n            originY: 9,\n            frames: [2,2]\n        }\n    };\n\n    static POSSIBLE_MOVES = {\n        idle:   [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n        run:    [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n        walk:   [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n        jump:   [\"idle\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n        attack1: [\"idle\", \"hurt\", \"dead\"],\n        attack2: [\"idle\", \"hurt\", \"dead\"],\n        attack3: [\"idle\", \"hurt\", \"dead\"],\n        hurt:   [\"idle\", \"hurt\", \"dead\"],\n        dead:   [],\n        guard:  [\"idle\", \"run\", \"walk\", \"jump\", \"attack1\", \"attack2\", \"attack3\", \"hurt\", \"dead\", \"guard\"],\n    };\n\n    static SINGLE_ACTIONS = [\"attack1\", \"attack2\", \"attack3\", \"jump\", \"hurt\"];\n\n    // Class Methods:\n    constructor(player) {\n        super(player,\n            Samurai.imgSrc,\n            Samurai.frameWidth,\n            Samurai.frameHeight,\n            Samurai.animationFrameInfo,\n            Samurai.SINGLE_ACTIONS);\n        this.possibleMoves = Samurai.POSSIBLE_MOVES;\n    }\n\n}\n","export class Moveable {\n    static GRAVITY = [0.5, 0.75];\n\n    constructor(options) {\n        this.pos = options[\"startpos\"];\n        this.vel = [0, 0];\n        this.FLOOR = options[\"floor\"];\n    }\n\n    move() {\n        if (this.pos[1] === this.FLOOR && this.currentAction !== \"run\") {\n            if (this.vel[0] < -Moveable.GRAVITY[0]) {\n                this.vel[0] += Moveable.GRAVITY[0];\n            } else if (this.vel[0] > Moveable.GRAVITY[0]) {\n                this.vel[0] -= Moveable.GRAVITY[0];\n            } else {\n                this.vel[0] = 0;\n            }\n        }\n        this.pos[0] += this.vel[0];\n        this.vel[1] += Moveable.GRAVITY[1];\n        this.pos[1] += this.vel[1];\n\n        this.checkFloor();\n        this.checkFacing();\n    }\n\n    setFloor(floor) {\n        this.FLOOR = floor;\n    }\n\n    checkFloor() {\n        if (this.pos[1] > this.FLOOR) {\n            this.vel[1] = 0;\n            this.pos[1] = this.FLOOR;\n        }\n    }\n\n    checkFacing() {\n        if (this.vel[0] < 0) {\n            this.xFacing = -1;\n        } else if (this.vel[0] > 0) {\n            this.xFacing = 1;\n        }\n    }\n\n    draw() {\n        throw new Error(\"Draw not implemented?\")\n    }\n}\n","import { Commander } from \"./Characters/commander.js\";\nimport { Samurai } from \"./Characters/samurai.js\";\nimport { Game } from \"./game.js\";\nimport { Moveable } from \"./moveable.js\";\n\nexport class Player extends Moveable{\n    constructor(options) {\n        // let options = {startpos: startpos};\n        super(options);\n\n        this.name = options[\"name\"];\n        if (this.name === \"player1\") {\n            this.xFacing = 1;\n            this.character = new Samurai(this); // change later when introduce other sprites?\n\n        } else {\n            this.xFacing = -1;\n            this.character = new Commander(this); // change later when introduce other sprites?\n\n        }\n        this.moveSpeed = 10;\n        this.scale = 3.15;\n\n        this.health = 100;\n\n        this.setupMusic();\n\n        this.currentAction = \"idle\";\n        this.renderBoxes = false;\n\n        this.handleButtonPress = this.handleButtonPress.bind(this);\n        this.handleButtonRelease = this.handleButtonRelease.bind(this);\n        this.stun = this.stun.bind(this);\n        this.unstun = this.unstun.bind(this);\n        this.runAnimationState = this.runAnimationState.bind(this);\n        this.togglePlayingAudio = this.togglePlayingAudio.bind(this);\n        this.mute = this.mute.bind(this);\n        this.unmute = this.unmute.bind(this);\n\n        this.stunned = false;\n        this.runAnimation = true;\n        // console.log(`${name} created successfully`)\n    }\n\n    draw(ctx){\n        this.move();\n        if (this.runAnimation) {\n            this.character.currentAction(this.currentAction);\n        }\n        this.character.draw(ctx, this.pos, this.scale);\n    }\n\n    assignController(controller) {\n        this.controller = controller;\n        this.controller.assignPlayer(this);\n    }\n\n    getHurtBoxes(main_scale) {\n        if (this.character.hurtboxes) {\n            return this.calculateBoxes(main_scale, this.character.hurtboxes)\n        } else {\n            return [];\n        }\n    }\n\n    getHitBoxes(main_scale) {\n        if (this.character.hitboxes) {\n            return this.calculateBoxes(main_scale, this.character.hitboxes)\n        } else {\n            return [];\n        }\n    }\n\n    calculateBoxes(main_scale, boxes){\n        let objBoxes = boxes;\n        let pos = this.pos;\n        let xFacing = this.xFacing;\n        let scale = this.scale;\n        let frameWidth = this.character.frameWidth;\n\n        let outputBoxes = [];\n        for (let k = 0; k < objBoxes.length; k++){\n            let box = objBoxes[k].slice();\n\n            if (xFacing === 1) {\n                box[0] = pos[0] - frameWidth*scale/2 + box[0]*scale;\n            } else {\n                box[0] = pos[0] + frameWidth*scale/2 - box[0]*scale - box[2]*scale;\n            }\n            box[1] = pos[1] + box[1]*scale;\n            box[2] *= scale;\n            box[3] *= scale;\n\n            box[0] *= main_scale;\n            box[1] *= main_scale;\n            box[2] *= main_scale;\n            box[3] *= main_scale;\n\n            outputBoxes.push(box);\n        }\n        return outputBoxes;\n    }\n\n    toggleRenderBoxes() {\n        this.renderBoxes = !this.renderBoxes;\n    }\n\n    handleButtonPress(button){\n        if (!this.stunned) {\n            let moves = this.character.possibleMoves[this.currentAction];\n\n            switch (button) {\n                case 'LEFT':\n                    if (moves.includes(\"run\")) {\n                        this.vel[0] = -1*this.moveSpeed;\n                        this.currentAction = \"run\";\n                    } else{\n                        this.vel[0] = -1*this.moveSpeed;\n                    }\n                    break;\n                case 'RIGHT':\n                    if (moves.includes(\"run\")) {\n                        this.vel[0] = 1*this.moveSpeed;\n                        this.currentAction = \"run\";\n                    } else {\n                        this.vel[0] = 1*this.moveSpeed;\n                    }\n                    break;\n                case 'UP':\n                    if (this.pos[1] === this.FLOOR && moves.includes(\"jump\")) {\n                        this.vel[1] = -2*this.moveSpeed;\n                        this.currentAction = \"jump\";\n                    }\n                    break;\n                case 'B':\n                    if (moves.includes(\"attack1\")) {\n                        this.currentAction = \"attack1\";\n                    }\n                    break;\n                case 'Y':\n                    if (moves.includes(\"attack2\")) {\n                        this.currentAction = \"attack2\";\n                    }\n                    break;\n                case 'X':\n                    if (moves.includes(\"attack3\")) {\n                        this.currentAction = \"attack3\";\n                    }\n                    break;\n            }\n\n            if ((button === \"B\" || button === \"Y\" || button || \"X\") && !this.playingAudio){\n                this.swordSounds[Math.floor(Math.random() * this.swordSounds.length)].play();\n                this.playingAudio = true;\n                setTimeout(this.togglePlayingAudio, 500);\n            }\n        }\n    }\n\n    handleButtonRelease(button){\n        if (!this.stunned) {\n            switch (button) {\n                case 'LEFT':\n                    if (this.vel[0] < 0 && this.currentAction === \"run\") {\n                        this.vel[0] = 0;\n                        this.character.stopAction(\"run\");\n                    }\n                    break;\n                case 'RIGHT':\n                    if (this.vel[0] > 0 && this.currentAction === \"run\") {\n                        this.vel[0] = 0;\n                        this.character.stopAction(\"run\");\n                    }\n                    break;\n            }\n        }\n    }\n\n    stun(duration) {\n        this.stunned = true;\n        if (duration) {\n            setTimeout(this.unstun, duration);\n        }\n    }\n\n    unstun() {\n        this.stunned = false;\n    }\n\n    runAnimationState(bool = true) {\n        this.runAnimation = bool;\n    }\n\n    setupMusic() {\n        this.swordSounds = [\n            new Audio(\"assets/music/SwordSwipe1.mp3\"),\n            new Audio(\"assets/music/SwordSwipe2.mp3\"),\n            new Audio(\"assets/music/SwordSwipe3.mp3\"),\n            new Audio(\"assets/music/SwordSwipe4.mp3\"),\n            new Audio(\"assets/music/SwordSwipe5.mp3\")\n        ];\n        this.swordSounds.forEach((sound) => {\n            sound.loop = false;\n        })\n        this.playingAudio = false;\n    }\n\n    togglePlayingAudio() {\n        this.playingAudio = !this.playingAudio;\n    }\n\n    mute() {\n        this.swordSounds.forEach((sound) => {\n            sound.volume = 0;\n        })\n    }\n\n    unmute(){\n        this.swordSounds.forEach((sound) => {\n            sound.volume = 1;\n        })\n    }\n}\n","import { GameView } from \"./game_view.js\";\nimport { Player } from \"./player.js\";\n\nexport class Game {\n    static PLAYER1_STARTX = -240;\n    static PLAYER2_STARTX = 240;\n    static KNOCKBACK = 10;\n\n    constructor(ctx, controller1, controller2, menu) {\n        this.gameView = new GameView(ctx);\n        this.FLOOR = this.gameView.background.FLOOR;\n\n        this.player1 = new Player({\n            startpos: [Game.PLAYER1_STARTX, this.FLOOR*0.75],\n            name: \"player1\",\n            floor: this.FLOOR});\n        this.controller1 = controller1;\n        this.player1.assignController(this.controller1);\n\n        this.player2 = new Player({\n            startpos: [Game.PLAYER2_STARTX, this.FLOOR*0.75],\n            name: \"player2\",\n            floor: this.FLOOR});\n        this.controller2 = controller2;\n        this.player2.assignController(this.controller2);\n\n        this.controller1.assignOpponent(this.player2);\n        this.controller2.assignOpponent(this.player1);\n\n        this.objects = [this.player1, this.player2];\n        this.scores = [0,0];\n        this.gameOver = false;\n        this.paused = true;\n\n        this.setupMusic();\n\n        this.resetRound = this.resetRound.bind(this);\n        this.endGame = this.endGame.bind(this);\n        this.togglePlayingAudio  = this.togglePlayingAudio.bind(this);\n        this.mute = this.mute.bind(this);\n        this.unmute = this.unmute.bind(this);\n\n        this.menu = menu;\n    }\n\n    start() {\n        this.paused = false;\n        this.resetRound();\n        this.runGame();\n    }\n\n    runGame() {\n        if (!this.paused) {\n            this.gameView.draw(this.objects);\n            this.gameView.renderScore(this.scores);\n            this.controller1.draw();\n            this.controller2.draw();\n            this.handleCollisions();\n        }\n        if (!this.gameOver) {\n            requestAnimationFrame(this.runGame.bind(this))\n        }\n    }\n\n    handleCollisions() {\n        this.handleHit();\n        this.handlePush();\n        this.handleSwordCollisions();\n    }\n\n    handlePush(){\n        for (let i = 0; i < this.objects.length; i++) {\n            let hurtboxes1 = this.objects[i].getHurtBoxes(GameView.MAIN_SCALE);\n\n            for (let j = i+1; j < this.objects.length; j++) {\n                let hurtboxes2 = this.objects[j].getHurtBoxes(GameView.MAIN_SCALE);\n\n                let collide = false;\n                let collisionData = [];\n                for (let k = 0; k < hurtboxes1.length; k++){\n                    for (let m = 0; m < hurtboxes2.length; m++) {\n                        let box1 = hurtboxes1[k].slice();\n                        let box2 = hurtboxes2[m].slice();\n                        collide = this.overlappingBoxes(box1, box2);\n                        if (collide) {\n                            collisionData.push(box1);\n                            collisionData.push(box2);\n                            break;\n                        }\n                    }\n                    if (collide) { break; }\n                }\n\n                if (collide) {\n                    let box1 = collisionData[0];\n                    let box2 = collisionData[1];\n                    let object1 = this.objects[i];\n                    let object2 = this.objects[j];\n                    if (box1[0] < box2[0]) {\n                        let dx = ((box1[0] + box1[3]) - box2[0])/2;\n                        object1.pos[0] -= dx;\n                        object2.pos[0] += dx;\n                    } else {\n                        let dx = ((box2[0] + box2[3]) - box1[0])/2;\n                        object2.pos[0] -= dx;\n                        object1.pos[0] += dx;\n                    }\n                }\n            }\n        }\n    }\n\n    handleHit(){\n        // determine who is hitting which box\n        let hits = [];\n        for (let i = 0; i < this.objects.length; i++) {\n            let hitbox = this.objects[i].getHitBoxes(GameView.MAIN_SCALE);\n            if (hitbox) {\n                hitbox = hitbox[0];\n                for (let j = 0; j < this.objects.length; j++) {\n                    if (j !== i) {\n                        let hit = false;\n                        let hurtboxes = this.objects[j].getHurtBoxes(GameView.MAIN_SCALE);\n                        for (let k = 0; k < hurtboxes.length; k++) {\n                            if (this.overlappingBoxes(hitbox, hurtboxes[k])){\n                                hits.push([this.objects[i], this.objects[j], k]);\n                                hit = true;\n                                break;\n                            }\n                        }\n                        if (hit) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        // actually deal with the hits\n        if (hits.length > 0) {\n            let roundEnd = false;\n            hits.forEach((hit) => {\n                let origin = hit[0];\n                let target = hit[1];\n                let boxNum = hit[2];\n\n                let damage = 0;\n                switch (origin.currentAction){\n                    case (\"attack1\"):\n                        damage = 1;\n                        break;\n                    case (\"attack2\"):\n                        damage = 2;\n                        break;\n                    case (\"attack3\"):\n                        damage = 3;\n                        break;\n                }\n\n                // deal damage\n                target.health -= damage*(3-boxNum)*0.25;\n                if (target.health < 0){\n                    roundEnd = true;\n                    target.health = 0;\n                }\n\n                // cause knockback\n                if (origin.pos[0] < target.pos[0]){\n                    target.pos[0] += Game.KNOCKBACK*(damage);\n                } else{\n                    target.pos[0] -= Game.KNOCKBACK*(damage);\n                }\n            })\n\n            if (roundEnd) {\n                this.isRoundOver();\n            }\n        }\n    }\n\n    handleSwordCollisions() {\n        let hits = [];\n        for (let i = 0; i < this.objects.length; i++) {\n            let hitboxes1 = this.objects[i].getHitBoxes(GameView.MAIN_SCALE);\n            if (hitboxes1) {\n                hitboxes1 = hitboxes1[0];\n                for (let j = 0; j < this.objects.length; j++) {\n                    if (j !== i) {\n                        let hitboxes2 = this.objects[j].getHitBoxes(GameView.MAIN_SCALE);\n                        if (hitboxes2) {\n                            hitboxes2 = hitboxes2[0];\n\n                            if (this.overlappingBoxes(hitboxes1, hitboxes2)){\n                                hits.push([this.objects[i], this.objects[j]]);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (hits.length > 0) {\n            if (!this.playingAudio){\n                this.swordClashSound.play();\n                this.playingAudio = true;\n                setTimeout(this.togglePlayingAudio, 500);\n            }\n        }\n\n        hits.forEach((hit) => {\n            let origin = hit[0];\n            let target = hit[1];\n\n            let damage = 4;\n                switch (origin.currentAction){\n                    case (\"attack1\"):\n                        damage *= 1;\n                        break;\n                    case (\"attack2\"):\n                        damage *= 2;\n                        break;\n                    case (\"attack3\"):\n                        damage *= 3;\n                        break;\n                }\n\n            if (origin.pos[0] < target.pos[0]){\n                target.pos[0] += Game.KNOCKBACK*(damage);\n            } else{\n                target.pos[0] -= Game.KNOCKBACK*(damage);\n            }\n        })\n    }\n\n    overlappingBoxes(box1, box2) {\n        let x1m, y1m, x1M, y1M;\n        let x2m, y2m, x2M, y2M;\n        [x1m, y1m, x1M, y1M] = [box1[0], box1[1],\n                                box1[0] + box1[2], box1[1] + box1[3]];\n        [x2m, y2m, x2M, y2M] = [box2[0], box2[1],\n                                box2[0] + box2[2], box2[1] + box2[3]];\n\n        if (x2m >= x1M || x1m >= x2M) {\n            return false;\n        } else if (y2m >= y1M || y1m >= y2M) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    toggleRenderBoxes() {\n        this.player1.toggleRenderBoxes();\n        this.player2.toggleRenderBoxes();\n    }\n\n    isRoundOver() {\n        if (this.player1.health === 0 || this.player2.health === 0) {\n            this.roundOver = true;\n            if (this.player1.health === 0 && this.player2.health === 0) {\n                this.player1.currentAction = \"dead\";\n                this.player2.currentAction = \"dead\";\n                this.player1.stun(5000);\n                this.player2.stun(5000);\n            } else if (this.player1.health === 0){\n                this.scores[1] += 1;\n                this.player1.currentAction = \"dead\";\n                this.player2.runAnimationState(false);\n                this.player1.stun(5000);\n                this.player2.stun(5000);\n            } else {\n                this.scores[0] += 1;\n                this.player2.currentAction = \"dead\";\n                this.player1.runAnimationState(false);\n                this.player1.stun(5000);\n                this.player2.stun(5000);\n            }\n\n            if (!this.isGameOver()) {\n                setTimeout(this.resetRound, 4500);\n            } else {\n                setTimeout(this.endGame, 4500);\n            }\n        }\n    }\n\n    isGameOver(){\n        // end game if winning by 2\n        if (Math.abs(this.scores[0] - this.scores[1]) >= 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    endGame(){\n        this.gameOver = true;\n        this.player1.stun();\n        this.player2.stun();\n        // console.log(\"Game Over\")\n        this.menu.stopGame();\n    }\n\n    randomizeStage() {\n        this.gameView.randomizeStage();\n        this.FLOOR = this.gameView.background.FLOOR;\n        this.player1.setFloor(this.FLOOR);\n        this.player2.setFloor(this.FLOOR);\n    }\n\n    resetRound() {\n        this.randomizeStage();\n\n        this.player1.pos = [Game.PLAYER1_STARTX, this.FLOOR*0.75];\n        this.player2.pos = [Game.PLAYER2_STARTX, this.FLOOR*0.75];\n\n        this.player1.health = 100;\n        this.player2.health = 100;\n\n        this.player1.currentAction = \"jump\";\n        this.player2.currentAction = \"jump\";\n\n        this.player1.character.animationFrameInfo[\"jump\"].framenum = 32;\n        this.player2.character.animationFrameInfo[\"jump\"].framenum = 32;\n\n        this.player1.xFacing = 1;\n        this.player2.xFacing = -1;\n\n        this.player1.runAnimationState();\n        this.player2.runAnimationState();\n\n        this.player1.stun(1000);\n        this.player2.stun(1000);\n\n        this.roundOver = false;\n    }\n\n    pause(){\n        this.paused = true;\n        this.player1.stun();\n        this.player2.stun();\n    }\n\n    unpause() {\n        this.paused = false;\n        this.player1.unstun();\n        this.player2.unstun();\n    }\n\n    winner() {\n        return (this.scores[0] > this.scores[1]) ? \"Player 1\" : \"Player 2\";\n    }\n\n    setupMusic() {\n        this.swordClashSound = new Audio(\"assets/music/SwordClash.mp3\");\n        this.swordClashSound.loop = false;\n        this.playingAudio = false;\n    }\n\n    mute(){\n        this.swordClashSound.volume = 0;\n        this.player1.mute();\n        this.player2.mute();\n    }\n\n    unmute() {\n        this.swordClashSound.volume = 1;\n        this.player1.unmute();\n        this.player2.unmute();\n    }\n\n    togglePlayingAudio() {\n        this.playingAudio = false;\n    }\n}\n","import { Game } from \"./game\";\n\nexport class Controller {\n    constructor (player, option, ctx, bindKeys = true){\n        this.buttonMapping = undefined;\n        this.imgs = [];\n        this.ctx = ctx;\n        this.player = player;\n\n        if (option === 1) {\n            this.buttonMapping = Controller.CONTROLLER_ONE;\n            let body = document.querySelector(\"body\");\n            for (const [key, src] of Object.entries(Controller.CONTROLLER_ONE_IMG_SRC)) {\n                let img = document.createElement('img');\n                img.src = src;\n                img.id = `controller1-${key}`;\n                img.hidden = true;\n                body.appendChild(img);\n                this.imgs.push([key,img]);\n            }\n        } else if (option === 2) {\n            this.buttonMapping = Controller.CONTROLLER_TWO;\n            let body = document.querySelector(\"body\");\n            for (const [key, src] of Object.entries(Controller.CONTROLLER_TWO_IMG_SRC)) {\n                let img = document.createElement('img');\n                img.src = src;\n                img.id = `controller2-${key}`;\n                img.hidden = true;\n                body.appendChild(img);\n                this.imgs.push([key,img]);\n            }\n        }\n\n\n        this.heldButtons = [];\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n\n        if (bindKeys) {\n            this.addListeners();\n        }\n\n        this.draw = this.draw.bind(this);\n    }\n\n    addListeners() {\n        window.addEventListener(\"keydown\", this.handleKeyDown);\n        window.addEventListener(\"keyup\", this.handleKeyUp);\n    }\n\n    removeListeners() {\n        window.removeEventListener(\"keydown\", this.handleKeyDown);\n        window.removeEventListener(\"keyup\", this.handleKeyUp);\n    }\n\n    assignPlayer(player) {\n        this.player = player;\n    }\n\n    assignOpponent(opponent) {\n        this.opponent = opponent;\n    }\n\n    handleKeyDown(event) {\n        // debugger\n        if (this.buttonMapping[event.key]) {\n            if (!this.heldButtons.includes(this.buttonMapping[event.key])) {\n                this.heldButtons.push(this.buttonMapping[event.key]);\n                if (this.player) {\n                    this.player.handleButtonPress(this.buttonMapping[event.key]);\n                }\n            }\n        }\n    }\n\n    handleKeyUp(event) {\n        if (this.buttonMapping[event.key]) {\n            if (this.heldButtons.includes(this.buttonMapping[event.key])) {\n                let idx = this.heldButtons.indexOf(this.buttonMapping[event.key]);\n                this.heldButtons.splice(idx, 1);\n                if (this.player) {\n                    this.player.handleButtonRelease(this.buttonMapping[event.key]);\n                }\n            }\n        }\n    }\n\n    draw() {\n        this.ctx.resetTransform()\n        this.ctx.clearRect(0, 0, 663, 227);\n        // debugger\n        this.imgs.forEach((arr) => {\n            let key = arr[0];\n            let img = arr[1];\n\n            if (this.heldButtons.includes(key)) {\n                this.ctx.drawImage(img, 0, 5, 663, 227);\n            } else {\n                this.ctx.drawImage(img, 0, 0, 663, 227);\n            }\n        })\n\n    }\n\n    static CONTROLLER_ONE = {\n        f: 'B',\n        g: 'Y',\n        h: 'X',\n        r: 'LB',\n        t: 'A',\n        y: 'RB',\n        w: 'UP',\n        s: 'DOWN',\n        a: 'LEFT',\n        d: 'RIGHT'\n    };\n\n    static CONTROLLER_TWO = {\n        \";\": 'B',\n        l: 'Y',\n        k: 'X',\n        \"i\": 'LB',\n        o: 'A',\n        p: 'RB',\n        ArrowUp: 'UP',\n        ArrowDown: 'DOWN',\n        ArrowLeft: 'LEFT',\n        ArrowRight: 'RIGHT'\n    };\n\n    static CONTROLLER_ONE_IMG_SRC = {\n        \"UP\": \"assets/images/ControllerKeys/1up.png\",\n        \"LEFT\": \"assets/images/ControllerKeys/1left.png\",\n        \"DOWN\": \"assets/images/ControllerKeys/1down.png\",\n        \"RIGHT\": \"assets/images/ControllerKeys/1right.png\",\n        \"B\": \"assets/images/ControllerKeys/1attack1.png\",\n        \"Y\": \"assets/images/ControllerKeys/1attack2.png\",\n        \"X\": \"assets/images/ControllerKeys/1attack3.png\"\n    };\n\n    static CONTROLLER_TWO_IMG_SRC = {\n        \"UP\": \"assets/images/ControllerKeys/2up.png\",\n        \"RIGHT\": \"assets/images/ControllerKeys/2right.png\",\n        \"DOWN\": \"assets/images/ControllerKeys/2down.png\",\n        \"LEFT\": \"assets/images/ControllerKeys/2left.png\",\n        \"B\": \"assets/images/ControllerKeys/2attack1.png\",\n        \"Y\": \"assets/images/ControllerKeys/2attack2.png\",\n        \"X\": \"assets/images/ControllerKeys/2attack3.png\"\n    };\n}\n","import { Controller } from \"./controller\";\n\nexport class ComputerController extends Controller {\n    constructor (player, option, ctx, opponent, difficulty = 6){\n        super(player, option, ctx, false);\n\n        this.player = player;\n        this.opponent = opponent;\n\n        this.chooseAction = this.chooseAction.bind(this);\n        this.takeAction = this.takeAction.bind(this);\n        this.pressButton = this.pressButton.bind(this);\n        this.releaseButton = this.releaseButton.bind(this);\n        this.updateDistanceFromOpponent = this.updateDistanceFromOpponent.bind(this);\n\n        // difficulty scales the update rate of actions\n        this.difficulty = difficulty;\n        this.buttonReleaseDelay = 250 + (10-this.difficulty)*250;\n\n        this.relPos = [1000,1000];\n    }\n\n    startController() {\n        setInterval(this.chooseAction, 100 + (10-this.difficulty) * 15);\n    }\n\n    assignOpponent(opponent) {\n        this.opponent = opponent;\n        if (this.opponent && this.player) {\n            this.startController();\n        }\n    }\n\n    chooseAction() {\n        this.updateDistanceFromOpponent();\n        if (Math.abs(this.relPos[0]) > 200 && Math.random()*10 < this.difficulty){\n            this.takeAction(\"run\");\n        } else {\n            if (Math.random()*10 < this.difficulty) {\n                this.takeAction(\"attack\");\n            }\n            if (Math.abs(this.relPos[1]) > 20) {\n                if (Math.random()*10 < this.difficulty) {\n                    this.takeAction(\"jump\");\n                }\n            } else {\n                this.takeAction(\"idle\");\n            }\n        }\n    }\n\n    takeAction(action){\n        if (action === \"attack\") {\n            let choices = [\"B\", \"Y\", \"X\"];\n            if (!this.heldButtons.includes(\"B\") &&\n                    !this.heldButtons.includes(\"Y\") &&\n                        !this.heldButtons.includes(\"X\")) {\n                let choice = choices[Math.floor(Math.random()*choices.length)];\n                this.pressButton(choice);\n                setTimeout(() => this.releaseButton(choice), this.buttonReleaseDelay);\n            }\n        } else if (action === \"run\") {\n            if (this.relPos[0] > 0) {\n                this.releaseButton(\"LEFT\");\n                if (this.player.vel[0] === 0) {\n                    this.releaseButton(\"RIGHT\");\n                }\n                this.pressButton(\"RIGHT\");\n            } else if (this.relPos[0] < 0) {\n                this.releaseButton(\"RIGHT\");\n                if (this.player.vel[0] === 0) {\n                    this.releaseButton(\"LEFT\");\n                }\n                this.pressButton(\"LEFT\");\n            }\n        } else if (action === \"jump\") {\n            this.pressButton(\"UP\");\n            setTimeout(() => this.releaseButton(\"UP\"), this.buttonReleaseDelay);\n        } else if (action === \"idle\") {\n            while (this.heldButtons.length > 0) {\n                this.releaseButton(this.heldButtons[0]);\n            }\n        }\n    }\n\n    pressButton(button) {\n        if (!this.heldButtons.includes(button)) {\n            this.heldButtons.push(button);\n            if (this.player) {\n                this.player.handleButtonPress(button);\n            }\n        }\n    }\n\n    releaseButton(button){\n        if (this.heldButtons.indexOf(button) !== -1) {\n            this.heldButtons.splice(this.heldButtons.indexOf(button),1);\n            if (this.player) {\n                this.player.handleButtonRelease(button);\n            }\n        }\n    }\n\n    updateDistanceFromOpponent(){\n        if (this.player && this.opponent) {\n            this.relPos[0] = this.opponent.pos[0] - this.player.pos[0];\n            this.relPos[1] = this.opponent.pos[1] - this.player.pos[1];\n        } else {\n            console.log(\"Missing player or opponent\")\n        }\n    }\n}\n","import { Controller } from \"./controller\";\n\nexport class GamePadController extends Controller {\n    static BUTTON_MAPPING = {\n        0: 'UP', // changed\n        1: 'X',  // changed\n        2: 'B', // changed\n        3: 'Y', // changed\n        4: 'LB',\n        5: 'RB',\n        6: 'LT',\n        7: 'RT',\n        8: 'M',     // minus\n        9: 'P',     // plus\n        10: 'LJ',   // left joystick\n        11: 'RJ',   // right joystick\n        12: 'UP',   // up\n        13: 'DOWN',    // down\n        14: 'LEFT',\n        15: 'RIGHT',\n        16: 'HOME',\n        17: 'SS'\n    }\n\n    constructor(gamepad, ctx) {\n        super(null, 3, ctx, false);\n        this.gamepad = gamepad;\n        this.buttonMapping = Gamepad.BUTTON_MAPPING;\n\n        this.gameLoop = this.gameLoop.bind(this);\n\n        setInterval(this.gameLoop, 100)\n    }\n\n    draw() {\n        this.ctx.clearRect(0,0,1000,1000);\n    }\n\n    gameLoop() {\n        if (this.player) {\n            const gamepads = navigator.getGamepads();\n            let controller = gamepads[this.gamepad.index];\n\n            for (let i = 0; i < controller.buttons.length; i++) {\n                let button = GamePadController.BUTTON_MAPPING[i];\n                if (controller.buttons[i].pressed) {\n                    this.player.handleButtonPress(button);\n                } else {\n                    this.player.handleButtonRelease(button);\n                }\n            }\n\n            let leftJoystick = [controller.axes[0], controller.axes[1]];\n\n            if (leftJoystick[0] > 0.25){\n                this.player.handleButtonRelease(\"LEFT\");\n                this.player.handleButtonPress(\"RIGHT\");\n            } else if (leftJoystick[0] < -0.25) {\n                this.player.handleButtonRelease(\"RIGHT\");\n                this.player.handleButtonPress(\"LEFT\");\n            }\n            // if (leftJoystick[1] < -0.25){\n            //     this.player.handleButtonPress(\"UP\");\n            // } else {\n            //     this.player.handleButtonRelease(\"UP\");\n            // }\n        }\n    }\n}\n","import { GameView } from \"./scripts/game_view\";\nimport { MainMenu } from \"./scripts/mainmenu\";\n\nlet canvas = document.querySelector(\"#main-canvas\");\nconst ctx = canvas.getContext(\"2d\");\n\nlet controller1canvas = document.querySelector(\"#controller1\")\ncontroller1canvas.width = 663;\ncontroller1canvas.height = 227;\nconst controller1ctx = controller1canvas.getContext(\"2d\");\n\nlet controller2canvas = document.querySelector(\"#controller2\")\ncontroller2canvas.width = 663;\ncontroller2canvas.height = 227;\nconst controller2ctx = controller2canvas.getContext(\"2d\");\n\ncanvas.width = GameView.WIDTH;\ncanvas.height = GameView.HEIGHT;\ncanvas.style.backgroundColor = \"black\";\n\nlet menu = new MainMenu(ctx, controller1ctx, controller2ctx);\n\nfunction controllerConnectListener(event) {\n    menu.addGamePad(event.gamepad);\n}\n\nwindow.addEventListener(\"gamepadconnected\", controllerConnectListener);\n","import { ComputerController } from \"./computer_controller\";\nimport { Controller } from \"./controller\";\nimport { GamePadController } from \"./gamepad_controller\";\nimport { Game } from \"./game\";\nimport { GameView } from \"./game_view\";\n\nexport class MainMenu {\n    constructor(ctx, controller1ctx, controller2ctx) {\n        this.ctx = ctx;\n        this.controller1ctx = controller1ctx;\n        this.controller2ctx = controller2ctx;\n        this.gameStarted = false;\n        // this.startGame();\n        // this.loadFont();\n        this.computerplayer1 = true;\n        this.computerplayer2 = true;\n        this.difficulty1 = 5;\n        this.difficulty2 = 5;\n\n        this.controller1 = new Controller(null, 1, this.controller1ctx);\n        this.controller2 = new Controller(null, 2, this.controller2ctx);\n\n        this.bindMethods();\n\n        this.modalHolder = document.querySelector(\"#modal-holder\");\n        this.modal = document.querySelector(\"#modal\");\n        this.modalContent = document.querySelector(\"#main-modal-content\");\n        this.modalButtons = document.querySelector(\"#modal-buttons\");\n        this.howToButton = document.querySelector(\"#how-to-play\");\n        this.startGameButton = document.querySelector(\"#start-game\");\n        this.howToButton.addEventListener(\"click\", this.generateHowToModal);\n        this.startGameButton.addEventListener(\"click\", this.startGame);\n        this.showingModal = false;\n        this.addListeners();\n        this.draw();\n        // this.startGame();\n        this.setupMusic();\n\n        this.generateStartModal();\n\n        this.muteButton = document.querySelector(\"#mute-button\");\n        this.muteButton.addEventListener(\"click\", this.toggleMute);\n    }\n\n    generateStartModal() {\n        let ul = document.createElement('ul');\n        ul.classList.add('start-modal')\n        let li1 = document.createElement('li');\n        let li2 = document.createElement('li');\n        let li3 = document.createElement('li');\n        li1.innerText = \"Welcome to a fast-action, sword-clashing, two-player fighting game!\";\n        li2.innerText = \"Are you ready to challenge your opponent to an epic battle to the death?\";\n        li3.innerText = \"Can you defeat the hyper aggressive level 10 computer player?\";\n        ul.appendChild(li1);\n        ul.appendChild(li2);\n        ul.appendChild(li3);\n        this.modalContent.innerHTML = '';\n        this.modalContent.appendChild(ul);\n\n        let button1 = document.createElement('div');\n        let button2 = document.createElement('div');\n        button1.innerText = \"Start Game\";\n        button2.innerText = \"How to Play\";\n        this.modalButtons.innerHTML = '';\n        this.modalButtons.appendChild(button1);\n        this.modalButtons.appendChild(button2);\n        button1.addEventListener(\"click\", () => {\n            this.hideModal();\n            this.menuMusic.play();\n        });\n        button2.addEventListener(\"click\", this.generateHowToModal)\n\n        this.showModal();\n    }\n\n    generateHowToModal() {\n        let ul = document.createElement('ul');\n        let li1 = document.createElement('li');\n        let li2 = document.createElement('li');\n        let li3 = document.createElement('li');\n        let li4 = document.createElement('li');\n        let li5 = document.createElement('li');\n        let li6 = document.createElement('li');\n        ul.className = \"extra-top-padding\"\n        li1.innerText = \"A/D/⬅️/➡️ - Move Player\";\n        li2.innerText = \"W/⬆️ - Jump\";\n        li3.innerText = \"F/; - Light Attack\";\n        li4.innerText = \"G/L - Medium Attack\";\n        li5.innerText = \"H/K - Heavy Attack\";\n        li6.innerText = \"ESC - Pause Game\";\n        ul.appendChild(li1);\n        ul.appendChild(li2);\n        ul.appendChild(li3);\n        ul.appendChild(li4);\n        ul.appendChild(li5);\n        ul.appendChild(li6);\n        this.modalContent.innerHTML = '';\n        this.modalContent.appendChild(ul);\n\n        let button1 = document.createElement('div');\n        let button2 = document.createElement('div');\n        button1.innerText = \"Start Game\";\n        button2.innerText = \"Watch Computers Fight\";\n        this.modalButtons.innerHTML = '';\n        let fontsize = 2;\n        button1.style.fontSize = `${fontsize}vh`;\n        button2.style.fontSize = `${fontsize}vh`;\n        this.modalButtons.innerHTML = '';\n        this.modalButtons.appendChild(button1);\n        this.modalButtons.appendChild(button2);\n        button1.addEventListener(\"click\", () => {\n            this.hideModal();\n            this.menuMusic.play();\n        });\n        button2.addEventListener(\"click\", this.startComputerGame);\n\n        button1.onmouseover = () => {\n            button1.style.fontSize = `${fontsize*1.1}vh`;\n        }\n        button1.onmouseout = () => {\n            button1.style.fontSize = `${fontsize}vh`;\n        }\n\n        button2.onmouseover = () => {\n            button2.style.fontSize = `${fontsize*1.1}vh`;\n        }\n        button2.onmouseout = () => {\n            button2.style.fontSize = `${fontsize}vh`;\n        }\n\n        this.showModal();\n    }\n\n    generatePauseModal() {\n        let ul = document.createElement('ul');\n        let li1 = document.createElement('li');\n        let li2 = document.createElement('li');\n        li1.innerText = \"GAME\";\n        li2.innerText = \"PAUSED\";\n        ul.appendChild(li1);\n        ul.appendChild(li2);\n        li1.style.fontSize = \"8vh\";\n        li2.style.fontSize = \"8vh\";\n        ul.style.lineHeight = \"9vh\";\n        this.modalContent.innerHTML = '';\n        this.modalContent.appendChild(ul);\n\n        let button1 = document.createElement('div');\n        let button2 = document.createElement('div');\n        button1.innerText = \"Resume Game\";\n        button2.innerText = \"Main Menu\";\n        this.modalButtons.innerHTML = '';\n        this.modalButtons.appendChild(button1);\n        this.modalButtons.appendChild(button2);\n        button1.addEventListener(\"click\", () => {\n            this.game.unpause();\n            this.hideModal();\n        });\n        button2.addEventListener(\"click\", () => {\n            delete this.game;\n            this.restartMenu();\n            this.hideModal();\n        })\n\n        this.modal.style.background = \"#00000080\";\n        this.showModal();\n    }\n\n    generateEndModal() {\n        let ul = document.createElement('ul');\n        let li1 = document.createElement('li');\n        let li2 = document.createElement('li');\n        let li3 = document.createElement('li');\n        li1.innerText = \"Thank you for playing!\";\n        if (this.lastWinner) {\n            li2.innerText = `The winner is ${this.lastWinner}!`;\n        }\n        li3.innerText = \"Play Again?\";\n        ul.appendChild(li1);\n        ul.appendChild(li2);\n        ul.appendChild(li3);\n        this.modalContent.innerHTML = '';\n        this.modalContent.appendChild(ul);\n\n        let button1 = document.createElement('div');\n        let button2 = document.createElement('div');\n        button1.innerText = \"Play Again\";\n        button2.innerText = \"Watch Computers Fight\";\n        let fontsize = 2;\n        button1.style.fontSize = `${fontsize}vh`;\n        button2.style.fontSize = `${fontsize}vh`;\n        this.modalButtons.innerHTML = '';\n        this.modalButtons.appendChild(button1);\n        this.modalButtons.appendChild(button2);\n        button1.addEventListener(\"click\", this.hideModal);\n        button2.addEventListener(\"click\", this.startComputerGame);\n        button1.onmouseover = () => {\n            button1.style.fontSize = `${fontsize*1.1}vh`;\n        }\n        button1.onmouseout = () => {\n            button1.style.fontSize = `${fontsize}vh`;\n        }\n        button2.onmouseover = () => {\n            button2.style.fontSize = `${fontsize*1.1}vh`;\n        }\n        button2.onmouseout = () => {\n            button2.style.fontSize = `${fontsize}vh`;\n        }\n\n        this.showModal();\n    }\n\n    startComputerGame() {\n        this.computerplayer1 = true;\n        this.computerplayer2 = true;\n        this.difficulty1 = 10;\n        this.difficulty2 = 10;\n        this.hideModal();\n        this.startGame();\n    }\n\n    bindMethods(){\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.addGamePad = this.addGamePad.bind(this);\n        this.generateStartModal = this.generateStartModal.bind(this);\n        this.generateHowToModal = this.generateHowToModal.bind(this);\n        this.generatePauseModal = this.generatePauseModal.bind(this);\n        this.generateEndModal = this.generateEndModal.bind(this);\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n        this.startComputerGame = this.startComputerGame.bind(this);\n        this.mute = this.mute.bind(this);\n        this.unmute = this.unmute.bind(this);\n        this.toggleMute = this.toggleMute.bind(this);\n        this.startGame = this.startGame.bind(this);\n    }\n\n    showModal(){\n        this.showingModal = true;\n        this.modalHolder.style.display = \"flex\";\n    }\n\n    hideModal(){\n        this.showingModal = false;\n        this.modal.style.background = \"#000000\";\n        this.modalHolder.style.display = \"none\";\n    }\n\n    addListeners() {\n        window.addEventListener(\"keydown\", this.handleKeyDown);\n        window.addEventListener(\"keyup\", this.handleKeyUp);\n    }\n\n    removeListeners() {\n        window.removeEventListener(\"keydown\", this.handleKeyDown);\n        window.removeEventListener(\"keyup\", this.handleKeyUp);\n    }\n\n    draw(){\n        // console.log('menu running')\n        this.ctx.clearRect(0,0,1920,1080);\n        this.ctx.fillStyle = \"rgb(52,52,255)\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.font = \"30px 'Press Start 2P'\";\n        let lineHeight = 30;\n\n        this.ctx.fillText(\"Are you ready to fight?\",\n                    GameView.WIDTH/2, GameView.HEIGHT*0.22);\n\n        this.ctx.font = \"20px 'Press Start 2P'\";\n\n        let menuInfo = [\n            \"H: Join as Player 1\",\n            \"K: Join as Player 2\",\n            \"\",\n            \"W/S: Computer 1 Difficulty Level\",\n            \"Up/Down: Computer 2 Difficulty Level\",\n            \"\",\n            \"Press spacebar to start the game\",\n            \"Press escape to pause the game\"\n                ]\n\n        for (let i = 0; i < menuInfo.length; i++) {\n            this.ctx.fillText(menuInfo[i],\n                    GameView.WIDTH*0.5, GameView.HEIGHT*0.32 + i*lineHeight);\n        }\n\n        // draw controllers\n        this.controller1.draw();\n        this.controller2.draw();\n\n        // show if human or computer player\n        let ctx = this.controller1ctx;\n        ctx.fillStyle = \"yellow\";\n        ctx.textAlign = \"left\";\n        ctx.font = \"24px 'Press Start 2P'\";\n        if (this.computerplayer1) {\n            ctx.fillText(`Level ${this.difficulty1} Computer`, 225, 40);\n        } else {\n            ctx.fillText(\"Human Player 1\", 225, 40);\n        }\n\n        ctx = this.controller2ctx;\n        ctx.fillStyle = \"yellow\";\n        ctx.textAlign = \"right\";\n        ctx.font = \"24px 'Press Start 2P'\";\n        if (this.computerplayer2) {\n            ctx.fillText(`Level ${this.difficulty2} Computer`, 425, 40);\n        } else {\n            ctx.fillText(\"Human Player 2\", 425, 40);\n        }\n\n        if (!this.gameStarted) {\n            requestAnimationFrame(this.draw.bind(this));\n        }\n    }\n\n    handleKeyDown(event) {\n        if (this.gameStarted) {\n            let button = event.key;\n            if (button === \"Escape\") {\n                if (this.game.paused) {\n                    this.hideModal();\n                    this.game.unpause();\n                } else {\n                    this.game.pause();\n                    this.generatePauseModal();\n                }\n            }\n        } else {\n            if (!this.showingModal) {\n                let button = event.key;\n                if (button === \"h\") {\n                    this.togglePlayer1();\n                } else if (button === \"k\") {\n                    this.togglePlayer2();\n                } else if (button === \" \") {\n                    this.startGame();\n                } else if (button === \"w\"){\n                    this.difficulty1 += 1;\n                    if (this.difficulty1 > 10) {this.difficulty1 = 10;}\n                } else if (button === \"s\"){\n                    this.difficulty1 -= 1;\n                    if (this.difficulty1 < 1) {this.difficulty1 = 1;}\n                } else if (button === \"ArrowUp\") {\n                    this.difficulty2 += 1;\n                    if (this.difficulty2 > 10) {this.difficulty2 = 10;}\n                } else if (button === \"ArrowDown\") {\n                    this.difficulty2 -= 1;\n                    if (this.difficulty2 < 1) {this.difficulty2 = 1;}\n                }\n            }\n        }\n    }\n\n    restartMenu(gameEnded = false) {\n        // this.addListeners();\n        this.gameMusic.pause();\n        this.gameMusic.currentTime = 0;\n        this.menuMusic.currentTime = 0;\n        this.menuMusic.play();\n\n        this.controller1.removeListeners();\n        this.controller2.removeListeners();\n        this.controller1.addListeners();\n        this.controller2.addListeners();\n        this.gameStarted = false;\n        if (gameEnded) {\n            this.generateEndModal();\n        }\n        this.howToButton.style.display = \"flex\";\n        this.startGameButton.style.display = \"flex\";\n        this.draw();\n    }\n\n    startGame() {\n        // this.removeListeners();\n        this.gameStarted = true;\n        this.howToButton.style.display = \"none\";\n        this.startGameButton.style.display = \"none\";\n        this.menuMusic.pause();\n        this.menuMusic.currentTime = 0;\n        this.gameMusic.currentTime = 0;\n        this.gameMusic.play();\n\n        let cont1, cont2;\n        if (this.computerplayer1) {\n            this.controller1.removeListeners();\n            cont1 = new ComputerController(null, 1, this.controller1ctx,\n                                                    null, this.difficulty1)\n        } else {\n            cont1 = this.controller1;\n        }\n\n        if (this.computerplayer2) {\n            this.controller2.removeListeners();\n            cont2 = new ComputerController(null, 2, this.controller2ctx,\n                                                    null, this.difficulty2)\n        } else {\n            cont2 = this.controller2;\n        }\n\n        this.game = new Game(this.ctx, cont1, cont2, this);\n        this.game.start();\n        if (this.muted) {\n            this.game.mute();\n        }\n    }\n\n    stopGame(){\n        this.lastWinner = this.game.winner();\n        this.game.mute();\n        delete this.game;\n        this.restartMenu(true);\n    }\n\n    togglePlayer1() {\n        this.computerplayer1 = !this.computerplayer1;\n    }\n\n    togglePlayer2() {\n        this.computerplayer2 = !this.computerplayer2;\n    }\n\n    addGamePad(gamepad) {\n        if (this.controller1.gamepad === undefined) {\n            // console.log(\"player1 assigned controller\")\n            this.controller1.removeListeners();\n            this.computerplayer1 = false;\n            this.controller1 = new GamePadController(gamepad, this.controller1ctx);\n        } else if (this.controller2.gamepad === undefined) {\n            // console.log(\"player2 assigned controller\")\n            this.controller2.removeListeners();\n            this.computerplayer2 = false;\n            this.controller2 = new GamePadController(gamepad, this.controller2ctx);\n        }\n    }\n\n    setupMusic() {\n        this.menuMusic = new Audio(\"assets/music/Dani Stob - Facing The Enemy.mp3\");\n        this.menuMusic.loop = true;\n        // this.menuMusic.play();\n\n        this.gameMusic = new Audio(\"assets/music/Dani Stob - Arena Fight.mp3\");\n        this.gameMusic.loop = true;\n        this.muted = false;\n    }\n\n    toggleMute() {\n        if (this.muted) {\n            this.unmute();\n            this.muted = false;\n        } else {\n            this.mute();\n            this.muted = true;\n        }\n    }\n\n    mute() {\n        this.menuMusic.volume = 0;\n        this.gameMusic.volume = 0;\n        this.muteButton.innerHTML = '';\n        let img = document.createElement('img');\n        img.src = \"assets/images/Icons/mute-icon.png\";\n        this.muteButton.appendChild(img);\n        if (this.game){\n            this.game.mute();\n        }\n    }\n\n    unmute() {\n        this.menuMusic.volume = 1;\n        this.gameMusic.volume = 1;\n        this.muteButton.innerHTML = '';\n        let img = document.createElement('img');\n        img.src = \"assets/images/Icons/volume-icon.png\";\n        this.muteButton.appendChild(img);\n\n        if (this.game) {\n            this.game.unmute();\n        }\n    }\n}\n"],"names":["Train","static","constructor","ctx","this","CAMERA_LIMIT_LEFT","CAMERA_LIMIT_RIGHT","FLOOR","body","document","querySelector","backgroundImgs","foregroundImgs","i","BACKGROUND_IMAGES","length","img","createElement","src","id","hidden","appendChild","push","FOREGROUND_IMAGES","drawBackground","camera_location","scale","resetTransform","multiplier","sx","BACKGROUND_OFFSET_X","sy","BACKGROUND_OFFSET_Y","sw","BACKGROUND_SCALE","sh","drawImage","drawForeground","War","GameView","MAIN_SCALE","loadStages","randomizeStage","stages","background","Math","floor","random","draw","objects","clearRect","WIDTH","HEIGHT","calculateCameraLocation","forEach","obj","translate","enforceCameraLimits","drawHealthBars","sumX","pos","avgX","start1","start2","barSize","healthyColor","hurtColor","startpos","barwidth","sign","name","health","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","bodyBox","getHurtBoxes","left","right","dx","renderScore","score","formattedScore","join","font","fillStyle","textAlign","fillText","GeneralCharacter","player","frameWidth","frameHeight","animationFrameInfo","singleActions","getElementById","framePosX","framePosY","bind","currentAction","stopAction","animate","resetHurtBoxes","resetHitBox","xFacing","renderBoxes","hurtboxes","box","fillRect","hitboxes","includes","framenum","controller","heldButtons","arr","vel","moveSpeed","playOnce","arguments","undefined","frameNum","totalFrames","frames","reduce","a","b","fnum","sum","originY","updateHurtboxes","updateHitBox","hitbox","Commander","idle","Array","fill","run","walk","jump","attack1","attack2","attack3","hurt","dead","guard","super","imgSrc","SINGLE_ACTIONS","possibleMoves","POSSIBLE_MOVES","Samurai","Moveable","options","move","GRAVITY","checkFloor","checkFacing","setFloor","Error","Player","character","setupMusic","handleButtonPress","handleButtonRelease","stun","unstun","runAnimationState","togglePlayingAudio","mute","unmute","stunned","runAnimation","assignController","assignPlayer","main_scale","calculateBoxes","getHitBoxes","boxes","objBoxes","outputBoxes","k","slice","toggleRenderBoxes","button","moves","playingAudio","swordSounds","play","setTimeout","duration","bool","Audio","sound","loop","volume","Game","controller1","controller2","menu","gameView","player1","PLAYER1_STARTX","player2","PLAYER2_STARTX","assignOpponent","scores","gameOver","paused","resetRound","endGame","start","runGame","handleCollisions","requestAnimationFrame","handleHit","handlePush","handleSwordCollisions","hurtboxes1","j","hurtboxes2","collide","collisionData","m","box1","box2","overlappingBoxes","object1","object2","hits","hit","roundEnd","origin","target","boxNum","damage","KNOCKBACK","isRoundOver","hitboxes1","hitboxes2","swordClashSound","x1m","y1m","x1M","y1M","x2m","y2m","x2M","y2M","roundOver","isGameOver","abs","stopGame","pause","unpause","winner","Controller","option","bindKeys","buttonMapping","imgs","CONTROLLER_ONE","key","Object","entries","CONTROLLER_ONE_IMG_SRC","CONTROLLER_TWO","CONTROLLER_TWO_IMG_SRC","handleKeyDown","handleKeyUp","addListeners","window","addEventListener","removeListeners","removeEventListener","opponent","event","idx","indexOf","splice","f","g","h","r","t","y","w","s","d","l","o","p","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","ComputerController","difficulty","chooseAction","takeAction","pressButton","releaseButton","updateDistanceFromOpponent","buttonReleaseDelay","relPos","startController","setInterval","action","choices","choice","console","log","GamePadController","gamepad","Gamepad","BUTTON_MAPPING","gameLoop","navigator","getGamepads","index","buttons","pressed","leftJoystick","axes","canvas","getContext","controller1canvas","width","height","controller1ctx","controller2canvas","controller2ctx","style","backgroundColor","gameStarted","computerplayer1","computerplayer2","difficulty1","difficulty2","bindMethods","modalHolder","modal","modalContent","modalButtons","howToButton","startGameButton","generateHowToModal","startGame","showingModal","generateStartModal","muteButton","toggleMute","ul","classList","add","li1","li2","li3","innerText","innerHTML","button1","button2","hideModal","menuMusic","showModal","li4","li5","li6","className","fontSize","startComputerGame","onmouseover","onmouseout","generatePauseModal","lineHeight","game","restartMenu","generateEndModal","lastWinner","addGamePad","display","menuInfo","togglePlayer1","togglePlayer2","gameEnded","gameMusic","currentTime","cont1","cont2","muted"],"sourceRoot":""}